local g = vim.g
if g.colors_name ~= nil then
	vim.api.nvim_command 'highlight clear'
end

local hl = vim.api.nvim_set_hl
if vim.api.nvim_get_option 'background' == 'dark' then
	hl(0, '@annotation', { link = "TSAnnotation" })
	hl(0, '@attribute', { link = "TSAttribute" })
	hl(0, '@boolean', { link = "TSBoolean" })
	hl(0, '@boolean.yaml', { link = "yamlTSBoolean" })
	hl(0, '@character', { link = "TSCharacter" })
	hl(0, '@character.special', { link = "TSCharacterSpecial" })
	hl(0, '@comment', { link = "TSComment" })
	hl(0, '@conceal', { link = "Grey" })
	hl(0, '@conditional', { link = "TSConditional" })
	hl(0, '@constant', { link = "TSConstant" })
	hl(0, '@constant.builtin', { link = "TSConstBuiltin" })
	hl(0, '@constant.builtin.go', { link = "goTSConstBuiltin" })
	hl(0, '@constant.builtin.yaml', { link = "yamlTSConstBuiltin" })
	hl(0, '@constant.macro', { link = "TSConstMacro" })
	hl(0, '@constant.regex', { link = "TSConstBuiltin" })
	hl(0, '@constructor', { link = "TSConstructor" })
	hl(0, '@constructor.lua', { link = "luaTSConstructor" })
	hl(0, '@constructor.tsx', { link = "tsxTSConstructor" })
	hl(0, '@debug', { link = "TSDebug" })
	hl(0, '@define', { link = "TSDefine" })
	hl(0, '@error', { link = "TSError" })
	hl(0, '@exception', { link = "TSException" })
	hl(0, '@field', { link = "TSField" })
	hl(0, '@field.yaml', { link = "yamlTSField" })
	hl(0, '@float', { link = "TSFloat" })
	hl(0, '@function', { link = "TSFunction" })
	hl(0, '@function.builtin', { link = "TSFuncBuiltin" })
	hl(0, '@function.call', { link = "TSFunctionCall" })
	hl(0, '@function.macro', { link = "TSFuncMacro" })
	hl(0, '@ibl.indent.char.1', { cterm = { nocombine = true }, fg = 5199966, nocombine = true })
	hl(0, '@ibl.scope.char.1', { cterm = { nocombine = true }, fg = 8753801, nocombine = true })
	hl(0, '@ibl.scope.underline.1', { cterm = { underline = true }, sp = 8753801, underline = true })
	hl(0, '@ibl.whitespace.char.1', { cterm = { nocombine = true }, fg = 5199966, nocombine = true })
	hl(0, '@include', { link = "TSInclude" })
	hl(0, '@include.go', { link = "goTSInclude" })
	hl(0, '@include.javascript', { link = "javascriptTSInclude" })
	hl(0, '@include.typescript', { link = "typescriptTSInclude" })
	hl(0, '@keyword', { link = "TSKeyword" })
	hl(0, '@keyword.function', { link = "TSKeywordFunction" })
	hl(0, '@keyword.luap', vim.empty_dict())
	hl(0, '@keyword.operator', { link = "TSKeywordOperator" })
	hl(0, '@keyword.return', { link = "TSKeywordReturn" })
	hl(0, '@label', { link = "TSLabel" })
	hl(0, '@label.json', { link = "jsonTSLabel" })
	hl(0, '@lsp.mod.readonly', vim.empty_dict())
	hl(0, '@lsp.mod.typeHint', vim.empty_dict())
	hl(0, '@lsp.type.boolean', { link = "@boolean" })
	hl(0, '@lsp.type.builtinConstant', { link = "@constant.builtin" })
	hl(0, '@lsp.type.builtinType', { link = "@type.builtin" })
	hl(0, '@lsp.type.class', { link = "@type" })
	hl(0, '@lsp.type.comment', { link = "@comment" })
	hl(0, '@lsp.type.decorator', { link = "@function" })
	hl(0, '@lsp.type.derive', { link = "@constructor" })
	hl(0, '@lsp.type.deriveHelper', { link = "@attribute" })
	hl(0, '@lsp.type.enum', { link = "@type" })
	hl(0, '@lsp.type.enumMember', { link = "@property" })
	hl(0, '@lsp.type.escapeSequence', { link = "@string.escape" })
	hl(0, '@lsp.type.formatSpecifier', { link = "@punctuation.special" })
	hl(0, '@lsp.type.function', { link = "@function" })
	hl(0, '@lsp.type.generic', { link = "@text" })
	hl(0, '@lsp.type.interface', { link = "@type" })
	hl(0, '@lsp.type.keyword', { link = "@keyword" })
	hl(0, '@lsp.type.lifetime', { link = "@storageclass.lifetime" })
	hl(0, '@lsp.type.macro', { link = "@constant.macro" })
	hl(0, '@lsp.type.magicFunction', { link = "@function.builtin" })
	hl(0, '@lsp.type.method', { link = "@method" })
	hl(0, '@lsp.type.modifier', { link = "@type.qualifier" })
	hl(0, '@lsp.type.namespace', { link = "@namespace" })
	hl(0, '@lsp.type.namespace.go', { link = "@namespace.go" })
	hl(0, '@lsp.type.number', { link = "@number" })
	hl(0, '@lsp.type.operator', { link = "@operator" })
	hl(0, '@lsp.type.parameter', { link = "@parameter" })
	hl(0, '@lsp.type.property', { link = "@property" })
	hl(0, '@lsp.type.regexp', { link = "@string.regex" })
	hl(0, '@lsp.type.selfKeyword', { link = "@variable.builtin" })
	hl(0, '@lsp.type.selfParameter', vim.empty_dict())
	hl(0, '@lsp.type.selfTypeKeyword', { link = "@type" })
	hl(0, '@lsp.type.string', { link = "@string" })
	hl(0, '@lsp.type.struct', { link = "@type" })
	hl(0, '@lsp.type.type', { link = "@type" })
	hl(0, '@lsp.type.typeAlias', { link = "@type.definition" })
	hl(0, '@lsp.type.typeParameter', { link = "@type.definition" })
	hl(0, '@lsp.type.variable', { link = "@variable" })
	hl(0, '@lsp.typemod.class.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.enum.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.enumMember.defaultLibrary', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.function.builtin', vim.empty_dict())
	hl(0, '@lsp.typemod.function.defaultLibrary', { link = "@function.builtin" })
	hl(0, '@lsp.typemod.function.readonly', { link = "@method" })
	hl(0, '@lsp.typemod.keyword.async', { link = "@keyword" })
	hl(0, '@lsp.typemod.keyword.documentation', vim.empty_dict())
	hl(0, '@lsp.typemod.keyword.injected', { link = "@keyword" })
	hl(0, '@lsp.typemod.macro.defaultLibrary', { link = "@function.builtin" })
	hl(0, '@lsp.typemod.method.defaultLibrary', { link = "@function.builtin" })
	hl(0, '@lsp.typemod.method.readonly', { link = "@method" })
	hl(0, '@lsp.typemod.operator.controlFlow', vim.empty_dict())
	hl(0, '@lsp.typemod.operator.injected', { link = "@operator" })
	hl(0, '@lsp.typemod.string.injected', { link = "@string" })
	hl(0, '@lsp.typemod.struct.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.type.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.typeAlias.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.variable.callable', { link = "@function" })
	hl(0, '@lsp.typemod.variable.constant.rust', { link = "@constant" })
	hl(0, '@lsp.typemod.variable.defaultLibrary', { link = "@variable.builtin" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.go', { link = "@constant.builtin.go" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.javascript', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.javascriptreact', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.typescript', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.typescriptreact', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.variable.global', vim.empty_dict())
	hl(0, '@lsp.typemod.variable.injected', { link = "@variable" })
	hl(0, '@lsp.typemod.variable.static', { link = "Red" })
	hl(0, '@macro', { link = "Macro" })
	hl(0, '@math', { link = "TSMath" })
	hl(0, '@method', { link = "TSMethod" })
	hl(0, '@method.call', { link = "TSMethodCall" })
	hl(0, '@namespace', { link = "TSNamespace" })
	hl(0, '@namespace.go', { link = "goTSNamespace" })
	hl(0, '@none', { link = "TSNone" })
	hl(0, '@number', { link = "TSNumber" })
	hl(0, '@operator', { link = "TSOperator" })
	hl(0, '@parameter', { link = "TSParameter" })
	hl(0, '@parameter.reference', { link = "TSParameterReference" })
	hl(0, '@preproc', { link = "TSPreProc" })
	hl(0, '@property', { link = "TSProperty" })
	hl(0, '@property.toml', { link = "tomlTSProperty" })
	hl(0, '@punctuation', { link = "Delimiter" })
	hl(0, '@punctuation.bracket', { link = "TSPunctBracket" })
	hl(0, '@punctuation.bracket.regex', { link = "TSStringRegex" })
	hl(0, '@punctuation.delimiter', { link = "TSPunctDelimiter" })
	hl(0, '@punctuation.special', { link = "TSPunctSpecial" })
	hl(0, '@repeat', { link = "TSRepeat" })
	hl(0, '@storageclass', { link = "TSStorageClass" })
	hl(0, '@storageclass.lifetime', { link = "TSStorageClassLifetime" })
	hl(0, '@strike', { link = "TSStrike" })
	hl(0, '@string', { link = "TSString" })
	hl(0, '@string.escape', { link = "TSStringEscape" })
	hl(0, '@string.escape.yaml', { link = "yamlTSStringEscape" })
	hl(0, '@string.json', { link = "jsonTSString" })
	hl(0, '@string.regex', { link = "TSStringRegex" })
	hl(0, '@string.special', { link = "TSStringSpecial" })
	hl(0, '@string.toml', { link = "tomlTSString" })
	hl(0, '@string.yaml', { link = "yamlTSString" })
	hl(0, '@symbol', { link = "TSSymbol" })
	hl(0, '@tag', { link = "TSTag" })
	hl(0, '@tag.attribute', { link = "TSTagAttribute" })
	hl(0, '@tag.delimiter', { link = "TSTagDelimiter" })
	hl(0, '@text', { link = "TSText" })
	hl(0, '@text.danger', { link = "TSDanger" })
	hl(0, '@text.diff.add', { link = "diffAdded" })
	hl(0, '@text.diff.delete', { link = "diffRemoved" })
	hl(0, '@text.emphasis', { link = "TSEmphasis" })
	hl(0, '@text.environment', { link = "TSEnvironment" })
	hl(0, '@text.environment.name', { link = "TSEnvironmentName" })
	hl(0, '@text.gitcommit', { link = "TSNone" })
	hl(0, '@text.html', { link = "htmlTSText" })
	hl(0, '@text.literal', { link = "TSLiteral" })
	hl(0, '@text.math', { link = "TSMath" })
	hl(0, '@text.note', { link = "TSNote" })
	hl(0, '@text.quote', vim.empty_dict())
	hl(0, '@text.reference', { link = "TSTextReference" })
	hl(0, '@text.strike', { link = "TSStrike" })
	hl(0, '@text.strong', { link = "TSStrong" })
	hl(0, '@text.title', { link = "TSTitle" })
	hl(0, '@text.todo', { link = "TSTodo" })
	hl(0, '@text.todo.checked', { link = "Green" })
	hl(0, '@text.todo.unchecked', { link = "Ignore" })
	hl(0, '@text.underline', { link = "TSUnderline" })
	hl(0, '@text.uri', { link = "TSURI" })
	hl(0, '@text.warning', { link = "TSWarning" })
	hl(0, '@todo', { link = "TSTodo" })
	hl(0, '@type', { link = "TSType" })
	hl(0, '@type.builtin', { link = "TSTypeBuiltin" })
	hl(0, '@type.definition', { link = "TSTypeDefinition" })
	hl(0, '@type.qualifier', { link = "TSTypeQualifier" })
	hl(0, '@uri', { link = "TSURI" })
	hl(0, '@variable', { link = "TSVariable" })
	hl(0, '@variable.builtin', { link = "TSVariableBuiltin" })
	hl(0, 'ALEError', { link = "ErrorText" })
	hl(0, 'ALEErrorLine', { link = "ErrorLine" })
	hl(0, 'ALEErrorSign', { link = "RedSign" })
	hl(0, 'ALEInfo', { link = "InfoText" })
	hl(0, 'ALEInfoLine', { link = "InfoLine" })
	hl(0, 'ALEInfoSign', { link = "BlueSign" })
	hl(0, 'ALEVirtualTextError', { link = "VirtualTextError" })
	hl(0, 'ALEVirtualTextInfo', { link = "VirtualTextInfo" })
	hl(0, 'ALEVirtualTextStyleError', { link = "VirtualTextHint" })
	hl(0, 'ALEVirtualTextStyleWarning', { link = "VirtualTextHint" })
	hl(0, 'ALEVirtualTextWarning', { link = "VirtualTextWarning" })
	hl(0, 'ALEWarning', { link = "WarningText" })
	hl(0, 'ALEWarningLine', { link = "WarningLine" })
	hl(0, 'ALEWarningSign', { link = "YellowSign" })
	hl(0, 'AerialArrayIcon', { link = "Aqua" })
	hl(0, 'AerialBooleanIcon', { link = "Aqua" })
	hl(0, 'AerialClassIcon', { link = "Red" })
	hl(0, 'AerialConstantIcon', { link = "Blue" })
	hl(0, 'AerialConstructorIcon', { link = "Green" })
	hl(0, 'AerialEnumIcon', { link = "Yellow" })
	hl(0, 'AerialEnumMemberIcon', { link = "Aqua" })
	hl(0, 'AerialEventIcon', { link = "Orange" })
	hl(0, 'AerialFieldIcon', { link = "Green" })
	hl(0, 'AerialFileIcon', { link = "Green" })
	hl(0, 'AerialFunctionIcon', { link = "Green" })
	hl(0, 'AerialGuide', { link = "LineNr" })
	hl(0, 'AerialInterfaceIcon', { link = "Yellow" })
	hl(0, 'AerialKeyIcon', { link = "Red" })
	hl(0, 'AerialLine', { link = "CursorLine" })
	hl(0, 'AerialMethodIcon', { link = "Green" })
	hl(0, 'AerialModuleIcon', { link = "Purple" })
	hl(0, 'AerialNamespaceIcon', { link = "Purple" })
	hl(0, 'AerialNullIcon', { link = "Aqua" })
	hl(0, 'AerialNumberIcon', { link = "Aqua" })
	hl(0, 'AerialObjectIcon', { link = "Aqua" })
	hl(0, 'AerialOperatorIcon', { link = "Orange" })
	hl(0, 'AerialPackageIcon', { link = "Purple" })
	hl(0, 'AerialPropertyIcon', { link = "Blue" })
	hl(0, 'AerialStringIcon', { link = "Aqua" })
	hl(0, 'AerialStructIcon', { link = "Yellow" })
	hl(0, 'AerialTypeParameterIcon', { link = "Yellow" })
	hl(0, 'AerialVariableIcon', { link = "Blue" })
	hl(0, 'Aqua', { fg = 8634514 })
	hl(0, 'AquaBold', { bold = true, cterm = { bold = true }, fg = 8634514 })
	hl(0, 'AquaItalic', { fg = 8634514 })
	hl(0, 'AquaSign', { fg = 8634514 })
	hl(0, 'Blamer', { link = "Grey" })
	hl(0, 'Blue', { fg = 8371123 })
	hl(0, 'BlueBold', { bold = true, cterm = { bold = true }, fg = 8371123 })
	hl(0, 'BlueItalic', { fg = 8371123 })
	hl(0, 'BlueSign', { fg = 8371123 })
	hl(0, 'BookmarkAnnotationLine', { link = "DiffAdd" })
	hl(0, 'BookmarkAnnotationSign', { link = "GreenSign" })
	hl(0, 'BookmarkLine', { link = "DiffChange" })
	hl(0, 'BookmarkSign', { link = "BlueSign" })
	hl(0, 'Boolean', { fg = 14064054 })
	hl(0, 'BufTabLineActive', { link = "TabLine" })
	hl(0, 'BufTabLineCurrent', { link = "TabLineSel" })
	hl(0, 'BufTabLineFill', { link = "TabLineFill" })
	hl(0, 'BufTabLineHidden', { link = "TabLineFill" })
	hl(0, 'BufferCurrent', { bg = 2962747, fg = 13878954 })
	hl(0, 'BufferCurrentIndex', { bg = 2962747, fg = 13878954 })
	hl(0, 'BufferCurrentMod', { bg = 2962747, fg = 8371123 })
	hl(0, 'BufferCurrentSign', { bg = 2962747, fg = 10993792 })
	hl(0, 'BufferCurrentTarget', { bg = 2962747, bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'BufferInactive', { bg = 2304558, fg = 8753801 })
	hl(0, 'BufferInactiveIndex', { bg = 2304558, fg = 8753801 })
	hl(0, 'BufferInactiveMod', { bg = 2304558, fg = 8753801 })
	hl(0, 'BufferInactiveSign', { bg = 2304558, fg = 8029304 })
	hl(0, 'BufferInactiveTarget', { bg = 2304558, bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'BufferLineBackground', { bg = 2172716, default = true, fg = 8753801 })
	hl(0, 'BufferLineBuffer', { bg = 2172716, default = true, fg = 8753801 })
	hl(0, 'BufferLineBufferSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 13878954, italic = true })
	hl(0, 'BufferLineBufferVisible', { bg = 2699318, default = true, fg = 8753801 })
	hl(0, 'BufferLineCloseButton', { bg = 2172716, default = true, fg = 8753801 })
	hl(0, 'BufferLineCloseButtonSelected', { bg = 2962747, default = true, fg = 13878954 })
	hl(0, 'BufferLineCloseButtonVisible', { bg = 2699318, default = true, fg = 8753801 })
	hl(0, 'BufferLineDiagnostic', { bg = 2172716, default = true, fg = 6516070 })
	hl(0, 'BufferLineDiagnosticSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 10392703, italic = true })
	hl(0, 'BufferLineDiagnosticVisible', { bg = 2699318, default = true, fg = 6516070 })
	hl(0, 'BufferLineDuplicate', { bg = 2172716, cterm = { italic = true }, default = true, fg = 8292994, italic = true })
	hl(0, 'BufferLineDuplicateSelected', { bg = 2962747, cterm = { italic = true }, default = true, fg = 8292994, italic = true })
	hl(0, 'BufferLineDuplicateVisible', { bg = 2699318, cterm = { italic = true }, default = true, fg = 8292994, italic = true })
	hl(0, 'BufferLineError', { bg = 2172716, default = true, fg = 8753801, sp = 15105664 })
	hl(0, 'BufferLineErrorDiagnostic', { bg = 2172716, default = true, fg = 6516070, sp = 11296352 })
	hl(0, 'BufferLineErrorDiagnosticSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 11296352, italic = true, sp = 11296352 })
	hl(0, 'BufferLineErrorDiagnosticVisible', { bg = 2699318, default = true, fg = 6516070 })
	hl(0, 'BufferLineErrorSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 15105664, italic = true, sp = 15105664 })
	hl(0, 'BufferLineErrorVisible', { bg = 2699318, default = true, fg = 8753801 })
	hl(0, 'BufferLineFill', { bg = 1580320, default = true, fg = 8753801 })
	hl(0, 'BufferLineGroupLabel', { bg = 8753801, default = true, fg = 1580320 })
	hl(0, 'BufferLineGroupSeparator', { bg = 1580320, default = true, fg = 8753801 })
	hl(0, 'BufferLineHint', { bg = 2172716, default = true, fg = 8753801, sp = 10993792 })
	hl(0, 'BufferLineHintDiagnostic', { bg = 2172716, default = true, fg = 6516070, sp = 8228960 })
	hl(0, 'BufferLineHintDiagnosticSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 8228960, italic = true, sp = 8228960 })
	hl(0, 'BufferLineHintDiagnosticVisible', { bg = 2699318, default = true, fg = 6516070 })
	hl(0, 'BufferLineHintSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 10993792, italic = true, sp = 10993792 })
	hl(0, 'BufferLineHintVisible', { bg = 2699318, default = true, fg = 8753801 })
	hl(0, 'BufferLineIndicatorSelected', { link = "GreenSign" })
	hl(0, 'BufferLineIndicatorVisible', { bg = 2699318, default = true, fg = 2699318 })
	hl(0, 'BufferLineInfo', { bg = 2172716, default = true, fg = 8753801, sp = 8371123 })
	hl(0, 'BufferLineInfoDiagnostic', { bg = 2172716, default = true, fg = 6516070, sp = 6261894 })
	hl(0, 'BufferLineInfoDiagnosticSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 6261894, italic = true, sp = 6261894 })
	hl(0, 'BufferLineInfoDiagnosticVisible', { bg = 2699318, default = true, fg = 6516070 })
	hl(0, 'BufferLineInfoSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 8371123, italic = true, sp = 8371123 })
	hl(0, 'BufferLineInfoVisible', { bg = 2699318, default = true, fg = 8753801 })
	hl(0, 'BufferLineModified', { bg = 2172716, default = true, fg = 10993792 })
	hl(0, 'BufferLineModifiedSelected', { bg = 2962747, default = true, fg = 10993792 })
	hl(0, 'BufferLineModifiedVisible', { bg = 2699318, default = true, fg = 10993792 })
	hl(0, 'BufferLineNumbers', { bg = 2172716, default = true, fg = 8753801 })
	hl(0, 'BufferLineNumbersSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 13878954, italic = true })
	hl(0, 'BufferLineNumbersVisible', { bg = 2699318, default = true, fg = 8753801 })
	hl(0, 'BufferLineOffsetSeparator', { bg = 1580320, default = true, fg = 5199966 })
	hl(0, 'BufferLinePick', { bg = 2172716, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 15105664, italic = true })
	hl(0, 'BufferLinePickSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 15105664, italic = true })
	hl(0, 'BufferLinePickVisible', { bg = 2699318, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 15105664, italic = true })
	hl(0, 'BufferLineSeparator', { bg = 2172716, default = true, fg = 1580320 })
	hl(0, 'BufferLineSeparatorSelected', { bg = 2962747, default = true, fg = 1580320 })
	hl(0, 'BufferLineSeparatorVisible', { bg = 2699318, default = true, fg = 1580320 })
	hl(0, 'BufferLineTab', { bg = 2172716, default = true, fg = 8753801 })
	hl(0, 'BufferLineTabClose', { bg = 2172716, default = true, fg = 8753801 })
	hl(0, 'BufferLineTabSelected', { bg = 2962747, default = true, fg = 10993792 })
	hl(0, 'BufferLineTabSeparator', { bg = 2172716, default = true, fg = 1580320 })
	hl(0, 'BufferLineTabSeparatorSelected', { bg = 2962747, default = true, fg = 1580320 })
	hl(0, 'BufferLineTruncMarker', { bg = 1580320, default = true, fg = 8753801 })
	hl(0, 'BufferLineWarning', { bg = 2172716, default = true, fg = 8753801, sp = 14400639 })
	hl(0, 'BufferLineWarningDiagnostic', { bg = 2172716, default = true, fg = 6516070, sp = 10784095 })
	hl(0, 'BufferLineWarningDiagnosticSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 10784095, italic = true, sp = 10784095 })
	hl(0, 'BufferLineWarningDiagnosticVisible', { bg = 2699318, default = true, fg = 6516070 })
	hl(0, 'BufferLineWarningSelected', { bg = 2962747, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 14400639, italic = true, sp = 14400639 })
	hl(0, 'BufferLineWarningVisible', { bg = 2699318, default = true, fg = 8753801 })
	hl(0, 'BufferTabpageFill', { bg = 2304558, fg = 2304558 })
	hl(0, 'BufferTabpages', { bg = 2304558, bold = true, cterm = { bold = true }, fg = 8753801 })
	hl(0, 'BufferVisible', { bg = 2304558, fg = 13878954 })
	hl(0, 'BufferVisibleIndex', { bg = 2304558, fg = 13878954 })
	hl(0, 'BufferVisibleMod', { bg = 2304558, fg = 8371123 })
	hl(0, 'BufferVisibleSign', { bg = 2304558, fg = 10993792 })
	hl(0, 'BufferVisibleTarget', { bg = 2304558, bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'Character', { fg = 10993792 })
	hl(0, 'ClapBlines', { fg = 13878954 })
	hl(0, 'ClapBlinesLineNr', { link = "Grey" })
	hl(0, 'ClapCurrentSelection', { bg = 3424068, bold = true, cterm = { bold = true } })
	hl(0, 'ClapDisplay', { link = "Pmenu" })
	hl(0, 'ClapFile', { link = "Fg" })
	hl(0, 'ClapFuzzyMatches', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'ClapFuzzyMatches1', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches10', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches11', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches12', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches2', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches3', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches4', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches5', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches6', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches7', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches8', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches9', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapInput', { link = "Pmenu" })
	hl(0, 'ClapMatches1', { bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'ClapMatches2', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'ClapMatches3', { bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'ClapMatches4', { bold = true, cterm = { bold = true }, fg = 8634514 })
	hl(0, 'ClapMatches5', { bold = true, cterm = { bold = true }, fg = 8371123 })
	hl(0, 'ClapMatches6', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'ClapNoMatchesFound', { bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'ClapPreview', { link = "Pmenu" })
	hl(0, 'ClapProviderAbout', { link = "ClapBlines" })
	hl(0, 'ClapProviderColon', { link = "ClapBlines" })
	hl(0, 'ClapProviderId', { bold = true, cterm = { bold = true }, fg = 13878954 })
	hl(0, 'ClapSearchText', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapSelected', { bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'ClapSpinner', { bg = 4016205, bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'CleverFDefaultLabel', { link = "Search" })
	hl(0, 'CmpCompletion', vim.empty_dict())
	hl(0, 'CmpCompletionSbar', vim.empty_dict())
	hl(0, 'CmpCompletionThumb', vim.empty_dict())
	hl(0, 'CmpDocumentation', vim.empty_dict())
	hl(0, 'CmpDocumentationBorder', vim.empty_dict())
	hl(0, 'CmpItemAbbr', { link = "Fg" })
	hl(0, 'CmpItemAbbrDefault', { fg = 13878954 })
	hl(0, 'CmpItemAbbrDeprecated', { link = "Grey" })
	hl(0, 'CmpItemAbbrDeprecatedDefault', { fg = 8753801 })
	hl(0, 'CmpItemAbbrMatch', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'CmpItemAbbrMatchDefault', { fg = 13878954 })
	hl(0, 'CmpItemAbbrMatchFuzzy', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'CmpItemAbbrMatchFuzzyDefault', { fg = 13878954 })
	hl(0, 'CmpItemKind', { link = "Yellow" })
	hl(0, 'CmpItemKindClass', { link = "Yellow" })
	hl(0, 'CmpItemKindClassDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindColor', { link = "Aqua" })
	hl(0, 'CmpItemKindColorDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindConstant', { link = "Blue" })
	hl(0, 'CmpItemKindConstantDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindConstructor', { link = "Green" })
	hl(0, 'CmpItemKindConstructorDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindCopilot', vim.empty_dict())
	hl(0, 'CmpItemKindDefault', { fg = 14400639 })
	hl(0, 'CmpItemKindEnum', { link = "Yellow" })
	hl(0, 'CmpItemKindEnumDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindEnumMember', { link = "Purple" })
	hl(0, 'CmpItemKindEnumMemberDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindEvent', { link = "Orange" })
	hl(0, 'CmpItemKindEventDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindField', { link = "Green" })
	hl(0, 'CmpItemKindFieldDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindFile', { link = "Aqua" })
	hl(0, 'CmpItemKindFileDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindFolder', { link = "Aqua" })
	hl(0, 'CmpItemKindFolderDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindFunction', { link = "Green" })
	hl(0, 'CmpItemKindFunctionDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindInterface', { link = "Yellow" })
	hl(0, 'CmpItemKindInterfaceDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindKeyword', { link = "Red" })
	hl(0, 'CmpItemKindKeywordDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindMethod', { link = "Green" })
	hl(0, 'CmpItemKindMethodDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindModule', { link = "Yellow" })
	hl(0, 'CmpItemKindModuleDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindOperator', { link = "Orange" })
	hl(0, 'CmpItemKindOperatorDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindProperty', { link = "Blue" })
	hl(0, 'CmpItemKindPropertyDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindReference', { link = "Aqua" })
	hl(0, 'CmpItemKindReferenceDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindSnippet', { link = "Aqua" })
	hl(0, 'CmpItemKindSnippetDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindStruct', { link = "Yellow" })
	hl(0, 'CmpItemKindStructDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindText', { link = "Fg" })
	hl(0, 'CmpItemKindTextDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindTypeParameter', { link = "Yellow" })
	hl(0, 'CmpItemKindTypeParameterDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindUnit', { link = "Purple" })
	hl(0, 'CmpItemKindUnitDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindValue', { link = "Purple" })
	hl(0, 'CmpItemKindValueDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindVariable', { link = "Blue" })
	hl(0, 'CmpItemKindVariableDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemMenu', { link = "Fg" })
	hl(0, 'CmpItemMenuDefault', { fg = 13878954 })
	hl(0, 'CocCodeLens', { link = "Grey" })
	hl(0, 'CocDisabled', { link = "Grey" })
	hl(0, 'CocErrorFloat', { link = "ErrorFloat" })
	hl(0, 'CocErrorHighlight', { link = "ErrorText" })
	hl(0, 'CocErrorLine', { link = "ErrorLine" })
	hl(0, 'CocErrorSign', { link = "RedSign" })
	hl(0, 'CocErrorVirtualText', { link = "VirtualTextError" })
	hl(0, 'CocExplorerBufferBufname', { link = "Grey" })
	hl(0, 'CocExplorerBufferBufnr', { link = "Purple" })
	hl(0, 'CocExplorerBufferExpandIcon', { link = "Aqua" })
	hl(0, 'CocExplorerBufferFullpath', { link = "Grey" })
	hl(0, 'CocExplorerBufferModified', { link = "Yellow" })
	hl(0, 'CocExplorerBufferReadonly', { link = "Red" })
	hl(0, 'CocExplorerBufferRoot', { link = "Orange" })
	hl(0, 'CocExplorerDiagnosticError', { link = "Red" })
	hl(0, 'CocExplorerDiagnosticWarning', { link = "Yellow" })
	hl(0, 'CocExplorerFileDirectory', { link = "Green" })
	hl(0, 'CocExplorerFileExpandIcon', { link = "Aqua" })
	hl(0, 'CocExplorerFileFullpath', { link = "Grey" })
	hl(0, 'CocExplorerFileGitRootStaged', { link = "Purple" })
	hl(0, 'CocExplorerFileGitRootUnstaged', { link = "Yellow" })
	hl(0, 'CocExplorerFileGitStaged', { link = "Purple" })
	hl(0, 'CocExplorerFileGitUnstaged', { link = "Yellow" })
	hl(0, 'CocExplorerFileHidden', { link = "Grey" })
	hl(0, 'CocExplorerFileRoot', { link = "Orange" })
	hl(0, 'CocExplorerFileRootName', { link = "Green" })
	hl(0, 'CocExplorerFileSize', { link = "Blue" })
	hl(0, 'CocExplorerGitAdded', { link = "Green" })
	hl(0, 'CocExplorerGitContentChange', { link = "Fg" })
	hl(0, 'CocExplorerGitCopied', { link = "Fg" })
	hl(0, 'CocExplorerGitDeleted', { link = "Red" })
	hl(0, 'CocExplorerGitIgnored', { link = "Grey" })
	hl(0, 'CocExplorerGitMixed', { link = "Aqua" })
	hl(0, 'CocExplorerGitModified', { link = "Yellow" })
	hl(0, 'CocExplorerGitPathChange', { link = "Fg" })
	hl(0, 'CocExplorerGitRenamed', { link = "Purple" })
	hl(0, 'CocExplorerGitUnmerged', { link = "Orange" })
	hl(0, 'CocExplorerGitUnmodified', { link = "Fg" })
	hl(0, 'CocExplorerGitUntracked', { link = "Blue" })
	hl(0, 'CocExplorerHelpDescription', { link = "Grey" })
	hl(0, 'CocExplorerHelpHint', { link = "Grey" })
	hl(0, 'CocExplorerIndentLine', { link = "Conceal" })
	hl(0, 'CocExplorerTimeAccessed', { link = "Aqua" })
	hl(0, 'CocExplorerTimeCreated', { link = "Aqua" })
	hl(0, 'CocExplorerTimeModified', { link = "Aqua" })
	hl(0, 'CocFadeOut', { link = "Grey" })
	hl(0, 'CocFloatDividingLine', { link = "Grey" })
	hl(0, 'CocFloating', { link = "NormalFloat" })
	hl(0, 'CocGitAddedSign', { link = "GreenSign" })
	hl(0, 'CocGitChangeRemovedSign', { link = "PurpleSign" })
	hl(0, 'CocGitChangedSign', { link = "BlueSign" })
	hl(0, 'CocGitRemovedSign', { link = "RedSign" })
	hl(0, 'CocGitTopRemovedSign', { link = "RedSign" })
	hl(0, 'CocHighlightText', { link = "CurrentWord" })
	hl(0, 'CocHintFloat', { link = "HintFloat" })
	hl(0, 'CocHintHighlight', { link = "HintText" })
	hl(0, 'CocHintLine', { link = "HintLine" })
	hl(0, 'CocHintSign', { link = "GreenSign" })
	hl(0, 'CocHintVirtualText', { link = "VirtualTextHint" })
	hl(0, 'CocHoverRange', { bold = true, cterm = { bold = true, underline = true }, underline = true })
	hl(0, 'CocInfoFloat', { link = "InfoFloat" })
	hl(0, 'CocInfoHighlight', { link = "InfoText" })
	hl(0, 'CocInfoLine', { link = "InfoLine" })
	hl(0, 'CocInfoSign', { link = "BlueSign" })
	hl(0, 'CocInfoVirtualText', { link = "VirtualTextInfo" })
	hl(0, 'CocInlayHint', { link = "LineNr" })
	hl(0, 'CocListMode', { link = "StatusLine" })
	hl(0, 'CocListPath', { link = "StatusLine" })
	hl(0, 'CocListsDesc', { link = "Grey" })
	hl(0, 'CocListsLine', { link = "Fg" })
	hl(0, 'CocMarkdownCode', { link = "Green" })
	hl(0, 'CocMarkdownHeader', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'CocMarkdownLink', { cterm = { underline = true }, fg = 10993792, underline = true })
	hl(0, 'CocMenuSel', { link = "PmenuSel" })
	hl(0, 'CocNotificationButton', { link = "PmenuSel" })
	hl(0, 'CocNotificationProgress', { link = "Green" })
	hl(0, 'CocPumMenu', { link = "Pmenu" })
	hl(0, 'CocPumSearch', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'CocPumShortcut', { link = "Grey" })
	hl(0, 'CocPumVirtualText', { link = "Grey" })
	hl(0, 'CocSearch', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'CocSelectedText', { link = "Orange" })
	hl(0, 'CocSemClass', { link = "TSType" })
	hl(0, 'CocSemEnum', { link = "TSType" })
	hl(0, 'CocSemEnumMember', { link = "TSVariableBuiltin" })
	hl(0, 'CocSemEvent', { link = "TSLabel" })
	hl(0, 'CocSemInterface', { link = "TSType" })
	hl(0, 'CocSemModifier', { link = "TSOperator" })
	hl(0, 'CocSemStruct', { link = "TSType" })
	hl(0, 'CocSemTypeParameter', { link = "TSType" })
	hl(0, 'CocSemVariable', { link = "TSVariable" })
	hl(0, 'CocSnippetVisual', { link = "DiffAdd" })
	hl(0, 'CocStrikeThrough', { link = "TSStrike" })
	hl(0, 'CocSymbolArray', { link = "Aqua" })
	hl(0, 'CocSymbolBoolean', { link = "Aqua" })
	hl(0, 'CocSymbolClass', { link = "Red" })
	hl(0, 'CocSymbolConstant', { link = "Blue" })
	hl(0, 'CocSymbolConstructor', { link = "Green" })
	hl(0, 'CocSymbolDefault', { link = "Aqua" })
	hl(0, 'CocSymbolEnum', { link = "Yellow" })
	hl(0, 'CocSymbolEnumMember', { link = "Aqua" })
	hl(0, 'CocSymbolEvent', { link = "Orange" })
	hl(0, 'CocSymbolField', { link = "Green" })
	hl(0, 'CocSymbolFile', { link = "Green" })
	hl(0, 'CocSymbolFunction', { link = "Green" })
	hl(0, 'CocSymbolInterface', { link = "Yellow" })
	hl(0, 'CocSymbolKey', { link = "Red" })
	hl(0, 'CocSymbolMethod', { link = "Green" })
	hl(0, 'CocSymbolModule', { link = "Purple" })
	hl(0, 'CocSymbolNamespace', { link = "Purple" })
	hl(0, 'CocSymbolNull', { link = "Aqua" })
	hl(0, 'CocSymbolNumber', { link = "Aqua" })
	hl(0, 'CocSymbolObject', { link = "Aqua" })
	hl(0, 'CocSymbolOperator', { link = "Orange" })
	hl(0, 'CocSymbolPackage', { link = "Purple" })
	hl(0, 'CocSymbolProperty', { link = "Blue" })
	hl(0, 'CocSymbolString', { link = "Aqua" })
	hl(0, 'CocSymbolStruct', { link = "Yellow" })
	hl(0, 'CocSymbolTypeParameter', { link = "Yellow" })
	hl(0, 'CocSymbolVariable', { link = "Blue" })
	hl(0, 'CocTreeDescription', { link = "Grey" })
	hl(0, 'CocTreeOpenClose', { link = "Aqua" })
	hl(0, 'CocWarningFloat', { link = "WarningFloat" })
	hl(0, 'CocWarningHighlight', { link = "WarningText" })
	hl(0, 'CocWarningLine', { link = "WarningLine" })
	hl(0, 'CocWarningSign', { link = "YellowSign" })
	hl(0, 'CocWarningVirtualText', { link = "VirtualTextWarning" })
	hl(0, 'CodeActionBorder', { link = "Purple" })
	hl(0, 'ColorColumn', { bg = 3424068 })
	hl(0, 'Comment', { cterm = { italic = true }, fg = 8753801, italic = true })
	hl(0, 'Conceal', { fg = 5661535 })
	hl(0, 'Conditional', { fg = 15105664 })
	hl(0, 'Constant', { fg = 8634514 })
	hl(0, 'CtrlPLinePre', { fg = 4674136 })
	hl(0, 'CtrlPMatch', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'CtrlPMode1', { bg = 4674136, bold = true, cterm = { bold = true }, fg = 8371123 })
	hl(0, 'CtrlPMode2', { bg = 8371123, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'CtrlPNoEntries', { link = "Red" })
	hl(0, 'CtrlPPrtBase', { fg = 4674136 })
	hl(0, 'CtrlPPrtCursor', { link = "Blue" })
	hl(0, 'CtrlPStats', { bg = 4674136, bold = true, cterm = { bold = true }, fg = 8753801 })
	hl(0, 'CurSearch', { link = "Search" })
	hl(0, 'CurrentWord', { bold = true, cterm = { bold = true } })
	hl(0, 'CurrentWordTwins', { link = "CurrentWord" })
	hl(0, 'Cursor', { cterm = { reverse = true }, reverse = true })
	hl(0, 'CursorColumn', { bg = 3424068 })
	hl(0, 'CursorIM', { link = "Cursor" })
	hl(0, 'CursorLine', { bg = 3424068 })
	hl(0, 'CursorLineFold', { link = "FoldColumn" })
	hl(0, 'CursorLineNr', { fg = 8753801 })
	hl(0, 'CursorLineSign', { link = "SignColumn" })
	hl(0, 'CursorWord0', { link = "CurrentWord" })
	hl(0, 'CursorWord1', { link = "CurrentWord" })
	hl(0, 'DapUIBreakpointsCurrentLine', { bold = true, cterm = { bold = true }, fg = 8371123 })
	hl(0, 'DapUIBreakpointsDisabledLine', { fg = 4342338 })
	hl(0, 'DapUIBreakpointsInfo', { link = "Green" })
	hl(0, 'DapUIBreakpointsLine', { link = "DapUILineNumber" })
	hl(0, 'DapUIBreakpointsPath', { link = "Blue" })
	hl(0, 'DapUICurrentFrameName', { link = "DapUIBreakpointsCurrentLine" })
	hl(0, 'DapUIDecoration', { link = "Blue" })
	hl(0, 'DapUIEndofBuffer', { link = "EndOfBuffer" })
	hl(0, 'DapUIFloatBorder', { link = "Blue" })
	hl(0, 'DapUIFloatNormal', { link = "NormalFloat" })
	hl(0, 'DapUIFrameName', { link = "Normal" })
	hl(0, 'DapUILineNumber', { link = "Blue" })
	hl(0, 'DapUIModifiedValue', { bold = true, cterm = { bold = true }, fg = 8371123 })
	hl(0, 'DapUINormal', { link = "Normal" })
	hl(0, 'DapUINormalNC', { default = true, link = "Normal" })
	hl(0, 'DapUIPlayPause', { fg = 11140968 })
	hl(0, 'DapUIPlayPauseNC', { default = true, fg = 11140968 })
	hl(0, 'DapUIRestart', { fg = 11140968 })
	hl(0, 'DapUIRestartNC', { default = true, fg = 11140968 })
	hl(0, 'DapUIScope', { link = "Blue" })
	hl(0, 'DapUISource', { link = "Purple" })
	hl(0, 'DapUIStepBack', { fg = 61941 })
	hl(0, 'DapUIStepBackNC', { default = true, fg = 61941 })
	hl(0, 'DapUIStepInto', { fg = 61941 })
	hl(0, 'DapUIStepIntoNC', { default = true, fg = 61941 })
	hl(0, 'DapUIStepOut', { fg = 61941 })
	hl(0, 'DapUIStepOutNC', { default = true, fg = 61941 })
	hl(0, 'DapUIStepOver', { fg = 61941 })
	hl(0, 'DapUIStepOverNC', { default = true, fg = 61941 })
	hl(0, 'DapUIStop', { fg = 16187495 })
	hl(0, 'DapUIStopNC', { default = true, fg = 16187495 })
	hl(0, 'DapUIStoppedThread', { link = "Blue" })
	hl(0, 'DapUIThread', { link = "Green" })
	hl(0, 'DapUIType', { link = "Purple" })
	hl(0, 'DapUIUnavailable', { fg = 4342338 })
	hl(0, 'DapUIUnavailableNC', { default = true, fg = 4342338 })
	hl(0, 'DapUIValue', { link = "Normal" })
	hl(0, 'DapUIVariable', { link = "Normal" })
	hl(0, 'DapUIWatchesEmpty', { link = "Red" })
	hl(0, 'DapUIWatchesError', { link = "Red" })
	hl(0, 'DapUIWatchesValue', { link = "Green" })
	hl(0, 'DapUIWinSelect', { bold = true, ctermfg = 14, fg = 61941 })
	hl(0, 'DashboardCenter', { link = "Green" })
	hl(0, 'DashboardFooter', { link = "Orange" })
	hl(0, 'DashboardHeader', { link = "Yellow" })
	hl(0, 'DashboardShortCut', { link = "Red" })
	hl(0, 'Debug', { fg = 15112309 })
	hl(0, 'Define', { fg = 14064054 })
	hl(0, 'Delimiter', { fg = 13878954 })
	hl(0, 'DiagnosticBorder', { link = "Orange" })
	hl(0, 'DiagnosticDeprecated', { cterm = { strikethrough = true }, sp = 16711680, strikethrough = true })
	hl(0, 'DiagnosticError', { link = "ErrorText" })
	hl(0, 'DiagnosticFloatingError', { link = "ErrorFloat" })
	hl(0, 'DiagnosticFloatingHint', { link = "HintFloat" })
	hl(0, 'DiagnosticFloatingInfo', { link = "InfoFloat" })
	hl(0, 'DiagnosticFloatingOk', { link = "DiagnosticOk" })
	hl(0, 'DiagnosticFloatingWarn', { link = "WarningFloat" })
	hl(0, 'DiagnosticHint', { link = "HintText" })
	hl(0, 'DiagnosticInfo', { link = "InfoText" })
	hl(0, 'DiagnosticOk', { ctermfg = 10, fg = 9498256 })
	hl(0, 'DiagnosticShowBorder', { link = "Orange" })
	hl(0, 'DiagnosticSignError', { link = "RedSign" })
	hl(0, 'DiagnosticSignHint', { link = "GreenSign" })
	hl(0, 'DiagnosticSignInfo', { link = "BlueSign" })
	hl(0, 'DiagnosticSignOk', { link = "DiagnosticOk" })
	hl(0, 'DiagnosticSignWarn', { link = "YellowSign" })
	hl(0, 'DiagnosticSource', { link = "Orange" })
	hl(0, 'DiagnosticUnderlineError', { link = "ErrorText" })
	hl(0, 'DiagnosticUnderlineHint', { link = "HintText" })
	hl(0, 'DiagnosticUnderlineInfo', { link = "InfoText" })
	hl(0, 'DiagnosticUnderlineOk', { cterm = { underline = true }, sp = 9498256, underline = true })
	hl(0, 'DiagnosticUnderlineWarn', { link = "WarningText" })
	hl(0, 'DiagnosticUnnecessary', { link = "Comment" })
	hl(0, 'DiagnosticVirtualTextError', { link = "VirtualTextError" })
	hl(0, 'DiagnosticVirtualTextHint', { link = "VirtualTextHint" })
	hl(0, 'DiagnosticVirtualTextInfo', { link = "VirtualTextInfo" })
	hl(0, 'DiagnosticVirtualTextOk', { link = "DiagnosticOk" })
	hl(0, 'DiagnosticVirtualTextWarn', { link = "VirtualTextWarning" })
	hl(0, 'DiagnosticWarn', { link = "WarningText" })
	hl(0, 'DiffAdd', { bg = 4345927 })
	hl(0, 'DiffChange', { bg = 3821917 })
	hl(0, 'DiffDelete', { bg = 5324869 })
	hl(0, 'DiffText', { bg = 8371123, fg = 2962747 })
	hl(0, 'Directory', { fg = 10993792 })
	hl(0, 'DirvishArg', { link = "Yellow" })
	hl(0, 'DirvishPathTail', { link = "Aqua" })
	hl(0, 'EasyMotionShade', { link = "Grey" })
	hl(0, 'EasyMotionTarget', { link = "Search" })
	hl(0, 'EndOfBuffer', { fg = 5199966 })
	hl(0, 'Error', { fg = 15105664 })
	hl(0, 'ErrorFloat', { fg = 15105664 })
	hl(0, 'ErrorLine', vim.empty_dict())
	hl(0, 'ErrorMsg', { bold = true, cterm = { bold = true, underline = true }, fg = 15105664, underline = true })
	hl(0, 'ErrorText', { cterm = { undercurl = true }, sp = 15105664, undercurl = true })
	hl(0, 'Exception', { fg = 15105664 })
	hl(0, 'FSPrefix', { bg = 2962747, bold = true, cterm = { bold = true }, fg = 13878954 })
	hl(0, 'FSSuffix', { fg = 8753801 })
	hl(0, 'FernBranchSymbol', { link = "FernBranchText" })
	hl(0, 'FernBranchText', { link = "Green" })
	hl(0, 'FernLeafSymbol', { link = "FernLeafText" })
	hl(0, 'FernLeafText', { link = "Fg" })
	hl(0, 'FernMarkedLine', { link = "Purple" })
	hl(0, 'FernMarkedText', { link = "Purple" })
	hl(0, 'FernRootSymbol', { link = "FernRootText" })
	hl(0, 'FernRootText', { link = "Orange" })
	hl(0, 'FernWindowSelectIndicator', { link = "TabLineSel" })
	hl(0, 'FernWindowSelectStatusLine', { link = "TabLine" })
	hl(0, 'Fg', { fg = 13878954 })
	hl(0, 'FidgetTask', { link = "NonText" })
	hl(0, 'FidgetTitle', { link = "Title" })
	hl(0, 'FlashBackdrop', { fg = 8753801 })
	hl(0, 'FlashLabel', { bold = true, cterm = { bold = true, italic = true }, fg = 14064054, italic = true })
	hl(0, 'Float', { fg = 14064054 })
	hl(0, 'FloatBorder', { bg = 4016205, fg = 8753801 })
	hl(0, 'FloatShadow', { bg = 0, blend = 80 })
	hl(0, 'FloatShadowThrough', { bg = 0, blend = 100 })
	hl(0, 'FloatTitle', { bg = 4016205, bold = true, cterm = { bold = true }, fg = 8753801 })
	hl(0, 'FloatermBorder', { link = "Grey" })
	hl(0, 'FocusedSymbol', { link = "NormalFloat" })
	hl(0, 'FoldColumn', { fg = 5661535 })
	hl(0, 'Folded', { bg = 3424068, fg = 8753801 })
	hl(0, 'Function', { fg = 10993792 })
	hl(0, 'GitGutterAdd', { link = "GreenSign" })
	hl(0, 'GitGutterAddLine', { link = "DiffAdd" })
	hl(0, 'GitGutterAddLineNr', { link = "Green" })
	hl(0, 'GitGutterChange', { link = "BlueSign" })
	hl(0, 'GitGutterChangeDelete', { link = "PurpleSign" })
	hl(0, 'GitGutterChangeDeleteLine', { link = "DiffChange" })
	hl(0, 'GitGutterChangeDeleteLineNr', { link = "Purple" })
	hl(0, 'GitGutterChangeLine', { link = "DiffChange" })
	hl(0, 'GitGutterChangeLineNr', { link = "Blue" })
	hl(0, 'GitGutterDelete', { link = "RedSign" })
	hl(0, 'GitGutterDeleteLine', { link = "DiffDelete" })
	hl(0, 'GitGutterDeleteLineNr', { link = "Red" })
	hl(0, 'GitSignsAdd', { link = "GreenSign" })
	hl(0, 'GitSignsAddInline', { link = "TermCursor" })
	hl(0, 'GitSignsAddLn', { link = "DiffAdd" })
	hl(0, 'GitSignsAddLnInline', { link = "GitSignsAddInline" })
	hl(0, 'GitSignsAddNr', { link = "Green" })
	hl(0, 'GitSignsAddPreview', { link = "DiffAdd" })
	hl(0, 'GitSignsChange', { link = "BlueSign" })
	hl(0, 'GitSignsChangeInline', { link = "TermCursor" })
	hl(0, 'GitSignsChangeLn', { link = "DiffChange" })
	hl(0, 'GitSignsChangeLnInline', { link = "GitSignsChangeInline" })
	hl(0, 'GitSignsChangeNr', { link = "Blue" })
	hl(0, 'GitSignsChangedelete', { link = "GitSignsChange" })
	hl(0, 'GitSignsChangedeleteLn', { link = "GitSignsChangeLn" })
	hl(0, 'GitSignsChangedeleteNr', { link = "GitSignsChangeNr" })
	hl(0, 'GitSignsCurrentLineBlame', { link = "Grey" })
	hl(0, 'GitSignsDelete', { link = "RedSign" })
	hl(0, 'GitSignsDeleteInline', { link = "TermCursor" })
	hl(0, 'GitSignsDeleteLn', { link = "DiffDelete" })
	hl(0, 'GitSignsDeleteLnInline', { link = "GitSignsDeleteInline" })
	hl(0, 'GitSignsDeleteNr', { link = "Red" })
	hl(0, 'GitSignsDeletePreview', { link = "DiffDelete" })
	hl(0, 'GitSignsDeleteVirtLn', { link = "DiffDelete" })
	hl(0, 'GitSignsDeleteVirtLnInLine', { link = "GitSignsDeleteLnInline" })
	hl(0, 'GitSignsStagedAdd', { default = true, fg = 5464128 })
	hl(0, 'GitSignsStagedAddLn', { bg = 4345927, default = true })
	hl(0, 'GitSignsStagedAddNr', { default = true, fg = 5464128 })
	hl(0, 'GitSignsStagedChange', { default = true, fg = 4152665 })
	hl(0, 'GitSignsStagedChangeLn', { bg = 3821917, default = true })
	hl(0, 'GitSignsStagedChangeNr', { default = true, fg = 4152665 })
	hl(0, 'GitSignsStagedChangedelete', { default = true, fg = 4152665 })
	hl(0, 'GitSignsStagedChangedeleteLn', { bg = 3821917, default = true })
	hl(0, 'GitSignsStagedChangedeleteNr', { default = true, fg = 4152665 })
	hl(0, 'GitSignsStagedDelete', { default = true, fg = 7552832 })
	hl(0, 'GitSignsStagedDeleteLn', { bg = 5324869, default = true })
	hl(0, 'GitSignsStagedDeleteNr', { default = true, fg = 7552832 })
	hl(0, 'GitSignsStagedTopdelete', { default = true, fg = 7552832 })
	hl(0, 'GitSignsStagedTopdeleteNr', { default = true, fg = 7552832 })
	hl(0, 'GitSignsTopdelete', { link = "GitSignsDelete" })
	hl(0, 'GitSignsTopdeleteNr', { link = "GitSignsDeleteNr" })
	hl(0, 'GitSignsUntracked', { link = "GitSignsAdd" })
	hl(0, 'GitSignsUntrackedLn', { link = "GitSignsAddLn" })
	hl(0, 'GitSignsUntrackedNr', { link = "GitSignsAddNr" })
	hl(0, 'GitSignsVirtLnum', { link = "GitSignsDeleteVirtLn" })
	hl(0, 'GlanceBorderTop', { bg = 1712679, default = true, fg = 8753801 })
	hl(0, 'GlanceFoldIcon', { default = true, fg = 9668461 })
	hl(0, 'GlanceIndent', { default = true, fg = 4806226 })
	hl(0, 'GlanceListBorderBottom', { bg = 1975851, default = true, fg = 8753801 })
	hl(0, 'GlanceListCount', { link = "Number" })
	hl(0, 'GlanceListCursorLine', { bg = 2371380, default = true })
	hl(0, 'GlanceListEndOfBuffer', { bg = 1975851, default = true, fg = 1975851 })
	hl(0, 'GlanceListFilename', { link = "Directory" })
	hl(0, 'GlanceListFilepath', { default = true, fg = 9668461 })
	hl(0, 'GlanceListMatch', { link = "Search" })
	hl(0, 'GlanceListNormal', { bg = 1975851, default = true, fg = 13878954 })
	hl(0, 'GlancePreviewBorderBottom', { bg = 2304817, default = true, fg = 8753801 })
	hl(0, 'GlancePreviewCursorLine', { bg = 2766138, default = true })
	hl(0, 'GlancePreviewEndOfBuffer', { bg = 2304817, default = true, fg = 2304817 })
	hl(0, 'GlancePreviewMatch', { bg = 10993792, default = true, fg = 2962747 })
	hl(0, 'GlancePreviewNormal', { bg = 2304817, default = true })
	hl(0, 'GlancePreviewSignColumn', { default = true, fg = 2304817 })
	hl(0, 'GlanceWinBarFilename', { bg = 1712679, default = true, fg = 13878954 })
	hl(0, 'GlanceWinBarFilepath', { bg = 1712679, default = true, fg = 9997426 })
	hl(0, 'GlanceWinBarTitle', { bg = 1712679, default = true, fg = 13878954 })
	hl(0, 'GlyphPalette1', { fg = 15105664 })
	hl(0, 'GlyphPalette2', { fg = 10993792 })
	hl(0, 'GlyphPalette3', { fg = 14400639 })
	hl(0, 'GlyphPalette4', { fg = 8371123 })
	hl(0, 'GlyphPalette6', { fg = 10993792 })
	hl(0, 'GlyphPalette7', { fg = 13878954 })
	hl(0, 'GlyphPalette9', { fg = 15105664 })
	hl(0, 'Green', { fg = 10993792 })
	hl(0, 'GreenBold', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'GreenItalic', { fg = 10993792 })
	hl(0, 'GreenSign', { fg = 10993792 })
	hl(0, 'Grey', { fg = 8753801 })
	hl(0, 'HighlightedyankRegion', { link = "Visual" })
	hl(0, 'HintFloat', { fg = 10993792 })
	hl(0, 'HintLine', vim.empty_dict())
	hl(0, 'HintText', { cterm = { undercurl = true }, sp = 10993792, undercurl = true })
	hl(0, 'HopNextKey', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'HopNextKey1', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'HopNextKey2', { link = "Green" })
	hl(0, 'HopUnmatched', { link = "Grey" })
	hl(0, 'HoverBorder', { link = "Green" })
	hl(0, 'IblIndent', { cterm = { nocombine = true }, fg = 5199966, nocombine = true })
	hl(0, 'IblScope', { cterm = { nocombine = true }, fg = 8753801, nocombine = true })
	hl(0, 'IblWhitespace', { fg = 5199966 })
	hl(0, 'Identifier', { fg = 8371123 })
	hl(0, 'Ignore', { fg = 8753801 })
	hl(0, 'IlluminatedWordRead', { link = "Visual" })
	hl(0, 'IlluminatedWordText', { link = "Visual" })
	hl(0, 'IlluminatedWordWrite', { link = "Visual" })
	hl(0, 'IncSearch', { bg = 15105664, fg = 2962747 })
	hl(0, 'InclineNormalNC', { bg = 4016205, fg = 8753801 })
	hl(0, 'Include', { fg = 14064054 })
	hl(0, 'IndentBlanklineChar', { link = "IblIndent" })
	hl(0, 'IndentBlanklineContextChar', { link = "IblScope" })
	hl(0, 'IndentBlanklineSpaceChar', { link = "IndentBlanklineChar" })
	hl(0, 'IndentBlanklineSpaceCharBlankline', { link = "IndentBlanklineChar" })
	hl(0, 'InfoFloat', { fg = 8371123 })
	hl(0, 'InfoLine', vim.empty_dict())
	hl(0, 'InfoText', { cterm = { undercurl = true }, sp = 8371123, undercurl = true })
	hl(0, 'Keyword', { fg = 15105664 })
	hl(0, 'Label', { fg = 15112309 })
	hl(0, 'LeapBackdrop', { fg = 8753801 })
	hl(0, 'LeapLabelPrimary', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'LeapLabelSecondary', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'LeapMatch', { bg = 14064054, bold = true, cterm = { bold = true }, fg = 13878954 })
	hl(0, 'LightspeedGreyWash', { link = "Grey" })
	hl(0, 'LightspeedLabel', { bold = true, cterm = { bold = true, underline = true }, fg = 15105664, underline = true })
	hl(0, 'LightspeedLabelDistant', { bold = true, cterm = { bold = true, underline = true }, fg = 8371123, underline = true })
	hl(0, 'LightspeedMaskedChar', { link = "Purple" })
	hl(0, 'LightspeedPendingOpArea', { bg = 10993792, fg = 2962747 })
	hl(0, 'LightspeedShortcut', { bg = 15105664, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'LightspeedUnlabeledMatch', { bold = true, cterm = { bold = true }, fg = 13878954 })
	hl(0, 'LineNr', { fg = 5661535 })
	hl(0, 'LineNrAbove', { link = "LineNr" })
	hl(0, 'LineNrBelow', { link = "LineNr" })
	hl(0, 'LspCodeLens', { link = "VirtualTextInfo" })
	hl(0, 'LspCodeLensSeparator', { link = "VirtualTextHint" })
	hl(0, 'LspDiagnosticsDefaultError', { link = "DiagnosticError" })
	hl(0, 'LspDiagnosticsDefaultHint', { link = "DiagnosticHint" })
	hl(0, 'LspDiagnosticsDefaultInformation', { link = "DiagnosticInfo" })
	hl(0, 'LspDiagnosticsDefaultWarning', { link = "DiagnosticWarn" })
	hl(0, 'LspDiagnosticsFloatingError', { link = "DiagnosticFloatingError" })
	hl(0, 'LspDiagnosticsFloatingHint', { link = "DiagnosticFloatingHint" })
	hl(0, 'LspDiagnosticsFloatingInformation', { link = "DiagnosticFloatingInfo" })
	hl(0, 'LspDiagnosticsFloatingWarning', { link = "DiagnosticFloatingWarn" })
	hl(0, 'LspDiagnosticsSignError', { link = "DiagnosticSignError" })
	hl(0, 'LspDiagnosticsSignHint', { link = "DiagnosticSignHint" })
	hl(0, 'LspDiagnosticsSignInformation', { link = "DiagnosticSignInfo" })
	hl(0, 'LspDiagnosticsSignWarning', { link = "DiagnosticSignWarn" })
	hl(0, 'LspDiagnosticsUnderlineError', { link = "DiagnosticUnderlineError" })
	hl(0, 'LspDiagnosticsUnderlineHint', { link = "DiagnosticUnderlineHint" })
	hl(0, 'LspDiagnosticsUnderlineInformation', { link = "DiagnosticUnderlineInfo" })
	hl(0, 'LspDiagnosticsUnderlineWarning', { link = "DiagnosticUnderlineWarn" })
	hl(0, 'LspDiagnosticsVirtualTextError', { link = "DiagnosticVirtualTextError" })
	hl(0, 'LspDiagnosticsVirtualTextHint', { link = "DiagnosticVirtualTextHint" })
	hl(0, 'LspDiagnosticsVirtualTextInformation', { link = "DiagnosticVirtualTextInfo" })
	hl(0, 'LspDiagnosticsVirtualTextWarning', { link = "DiagnosticVirtualTextWarn" })
	hl(0, 'LspErrorHighlight', { link = "ErrorText" })
	hl(0, 'LspErrorVirtual', { link = "VirtualTextError" })
	hl(0, 'LspHintHighlight', { link = "HintText" })
	hl(0, 'LspHintVirtual', { link = "VirtualTextHint" })
	hl(0, 'LspInfoBorder', { link = "Label" })
	hl(0, 'LspInfoFiletype', { link = "Type" })
	hl(0, 'LspInfoList', { link = "Function" })
	hl(0, 'LspInfoTip', { link = "Comment" })
	hl(0, 'LspInfoTitle', { link = "Title" })
	hl(0, 'LspInformationHighlight', { link = "InfoText" })
	hl(0, 'LspInformationVirtual', { link = "VirtualTextInfo" })
	hl(0, 'LspReferenceRead', { link = "CurrentWord" })
	hl(0, 'LspReferenceText', { link = "CurrentWord" })
	hl(0, 'LspReferenceWrite', { link = "CurrentWord" })
	hl(0, 'LspSemanticClass', { link = "TSType" })
	hl(0, 'LspSemanticComment', { link = "TSComment" })
	hl(0, 'LspSemanticEnum', { link = "TSType" })
	hl(0, 'LspSemanticEnumMember', { link = "TSVariableBuiltin" })
	hl(0, 'LspSemanticEvents', { link = "TSLabel" })
	hl(0, 'LspSemanticFunction', { link = "TSFunction" })
	hl(0, 'LspSemanticInterface', { link = "TSType" })
	hl(0, 'LspSemanticKeyword', { link = "TSKeyword" })
	hl(0, 'LspSemanticMethod', { link = "TSMethod" })
	hl(0, 'LspSemanticModifier', { link = "TSOperator" })
	hl(0, 'LspSemanticNumber', { link = "TSNumber" })
	hl(0, 'LspSemanticOperator', { link = "TSOperator" })
	hl(0, 'LspSemanticParameter', { link = "TSParameter" })
	hl(0, 'LspSemanticProperty', { link = "TSProperty" })
	hl(0, 'LspSemanticRegexp', { link = "TSStringRegex" })
	hl(0, 'LspSemanticString', { link = "TSString" })
	hl(0, 'LspSemanticStruct', { link = "TSType" })
	hl(0, 'LspSemanticType', { link = "TSType" })
	hl(0, 'LspSemanticTypeParameter', { link = "TSType" })
	hl(0, 'LspSemanticVariable', { link = "TSVariable" })
	hl(0, 'LspSignatureActiveParameter', { link = "Search" })
	hl(0, 'LspWarningHighlight', { link = "WarningText" })
	hl(0, 'LspWarningVirtual', { link = "VirtualTextWarning" })
	hl(0, 'Macro', { fg = 8634514 })
	hl(0, 'MatchParen', { bg = 5199966 })
	hl(0, 'MatchParenCur', { bold = true, cterm = { bold = true } })
	hl(0, 'MatchWord', { cterm = { underline = true }, underline = true })
	hl(0, 'MatchWordCur', { cterm = { underline = true }, underline = true })
	hl(0, 'MiniCompletionActiveParameter', { link = "LspSignatureActiveParameter" })
	hl(0, 'MiniCursorword', { link = "CurrentWord" })
	hl(0, 'MiniCursorwordCurrent', { link = "CurrentWord" })
	hl(0, 'MiniIndentscopePrefix', { cterm = { nocombine = true }, nocombine = true })
	hl(0, 'MiniIndentscopeSymbol', { link = "Grey" })
	hl(0, 'MiniJump', { link = "Search" })
	hl(0, 'MiniJump2dSpot', { bold = true, cterm = { bold = true, nocombine = true }, fg = 15112309, nocombine = true })
	hl(0, 'MiniStarterCurrent', { cterm = { nocombine = true }, nocombine = true })
	hl(0, 'MiniStarterFooter', { link = "Orange" })
	hl(0, 'MiniStarterHeader', { link = "Yellow" })
	hl(0, 'MiniStarterInactive', { link = "Comment" })
	hl(0, 'MiniStarterItem', { link = "Normal" })
	hl(0, 'MiniStarterItemBullet', { link = "Grey" })
	hl(0, 'MiniStarterItemPrefix', { link = "Yellow" })
	hl(0, 'MiniStarterQuery', { link = "Blue" })
	hl(0, 'MiniStarterSection', { link = "Title" })
	hl(0, 'MiniStatuslineDevinfo', { bg = 3424068, fg = 8753801 })
	hl(0, 'MiniStatuslineFileinfo', { bg = 3424068, fg = 8753801 })
	hl(0, 'MiniStatuslineFilename', { link = "Grey" })
	hl(0, 'MiniStatuslineModeCommand', { bg = 8634514, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'MiniStatuslineModeInactive', { link = "Grey" })
	hl(0, 'MiniStatuslineModeInsert', { bg = 13878954, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'MiniStatuslineModeNormal', { bg = 10993792, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'MiniStatuslineModeOther', { bg = 14064054, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'MiniStatuslineModeReplace', { bg = 15112309, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'MiniStatuslineModeVisual', { bg = 15105664, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'MiniSurround', { link = "IncSearch" })
	hl(0, 'MiniTablineCurrent', { bg = 5199966, fg = 13878954 })
	hl(0, 'MiniTablineFill', { link = "TabLineFill" })
	hl(0, 'MiniTablineHidden', { bg = 4016205, fg = 8753801 })
	hl(0, 'MiniTablineModifiedCurrent', { bg = 5199966, fg = 8371123 })
	hl(0, 'MiniTablineModifiedHidden', { bg = 4016205, fg = 8753801 })
	hl(0, 'MiniTablineModifiedVisible', { bg = 4016205, fg = 8371123 })
	hl(0, 'MiniTablineTabpagesection', { bg = 10993792, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'MiniTablineVisible', { bg = 4016205, fg = 13878954 })
	hl(0, 'MiniTestEmphasis', { bold = true, cterm = { bold = true } })
	hl(0, 'MiniTestFail', { bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'MiniTestPass', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'MiniTrailspace', { bg = 15105664 })
	hl(0, 'ModeMsg', { bold = true, cterm = { bold = true }, fg = 13878954 })
	hl(0, 'MoreMsg', { bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'MsgSeparator', { link = "StatusLine" })
	hl(0, 'NERDTreeCWD', { link = "Aqua" })
	hl(0, 'NERDTreeClosable', { link = "Orange" })
	hl(0, 'NERDTreeDir', { link = "Green" })
	hl(0, 'NERDTreeDirSlash', { link = "Aqua" })
	hl(0, 'NERDTreeExecFile', { link = "Yellow" })
	hl(0, 'NERDTreeFile', { link = "Fg" })
	hl(0, 'NERDTreeFlags', { link = "Orange" })
	hl(0, 'NERDTreeHelp', { link = "LightGrey" })
	hl(0, 'NERDTreeLinkFile', { link = "Grey" })
	hl(0, 'NERDTreeLinkTarget', { link = "Green" })
	hl(0, 'NERDTreeOpenable', { link = "Orange" })
	hl(0, 'NERDTreeToggleOff', { link = "Red" })
	hl(0, 'NERDTreeToggleOn', { link = "Green" })
	hl(0, 'NERDTreeUp', { link = "Grey" })
	hl(0, 'NavicIconsArray', { fg = 15112309 })
	hl(0, 'NavicIconsBoolean', { fg = 15112309 })
	hl(0, 'NavicIconsClass', { fg = 15112309 })
	hl(0, 'NavicIconsConstant', { fg = 14064054 })
	hl(0, 'NavicIconsConstructor', { fg = 15112309 })
	hl(0, 'NavicIconsEnum', { fg = 15112309 })
	hl(0, 'NavicIconsEnumMember', { fg = 10993792 })
	hl(0, 'NavicIconsEvent', { fg = 15112309 })
	hl(0, 'NavicIconsField', { fg = 10993792 })
	hl(0, 'NavicIconsFile', { fg = 13878954 })
	hl(0, 'NavicIconsFunction', { fg = 8371123 })
	hl(0, 'NavicIconsInterface', { fg = 15112309 })
	hl(0, 'NavicIconsKey', { fg = 14064054 })
	hl(0, 'NavicIconsKeyword', { fg = 14064054 })
	hl(0, 'NavicIconsMethod', { fg = 8371123 })
	hl(0, 'NavicIconsModule', { fg = 14400639 })
	hl(0, 'NavicIconsNamespace', { fg = 13878954 })
	hl(0, 'NavicIconsNull', { fg = 15112309 })
	hl(0, 'NavicIconsNumber', { fg = 15112309 })
	hl(0, 'NavicIconsObject', { fg = 15112309 })
	hl(0, 'NavicIconsOperator', { fg = 13878954 })
	hl(0, 'NavicIconsPackage', { fg = 13878954 })
	hl(0, 'NavicIconsProperty', { fg = 10993792 })
	hl(0, 'NavicIconsString', { fg = 10993792 })
	hl(0, 'NavicIconsStruct', { fg = 15112309 })
	hl(0, 'NavicIconsTypeParameter', { fg = 10993792 })
	hl(0, 'NavicIconsVariable', { fg = 14064054 })
	hl(0, 'NavicSeparator', { fg = 13878954 })
	hl(0, 'NavicText', { fg = 13878954 })
	hl(0, 'NeoTreeDimText', { link = "Grey" })
	hl(0, 'NeoTreeDirectoryIcon', { link = "Orange" })
	hl(0, 'NeoTreeEndOfBuffer', { bg = 2304558, fg = 2304558 })
	hl(0, 'NeoTreeGitAdded', { link = "Green" })
	hl(0, 'NeoTreeGitConflict', { link = "Yellow" })
	hl(0, 'NeoTreeGitDeleted', { link = "Red" })
	hl(0, 'NeoTreeGitIgnored', { link = "Grey" })
	hl(0, 'NeoTreeGitModified', { link = "Blue" })
	hl(0, 'NeoTreeGitStaged', { link = "Purple" })
	hl(0, 'NeoTreeGitUnstaged', { link = "Purple" })
	hl(0, 'NeoTreeGitUntracked', { link = "Fg" })
	hl(0, 'NeoTreeIndentMarker', { link = "NonText" })
	hl(0, 'NeoTreeModified', vim.empty_dict())
	hl(0, 'NeoTreeNormal', { bg = 2304558, fg = 13878954 })
	hl(0, 'NeoTreeNormalNC', { link = "NeoTreeNormal" })
	hl(0, 'NeoTreeRootName', { link = "Title" })
	hl(0, 'NeoTreeSignColumn', { link = "NeoTreeNormal" })
	hl(0, 'NeoTreeTabActive', vim.empty_dict())
	hl(0, 'NeoTreeTabInactive', vim.empty_dict())
	hl(0, 'NeoTreeTabSeparatorActive', vim.empty_dict())
	hl(0, 'NeoTreeTabSeparatorInactive', vim.empty_dict())
	hl(0, 'NeoTreeVertSplit', { bg = 2962747, fg = 2962747 })
	hl(0, 'NeogitBranch', { link = "Green" })
	hl(0, 'NeogitChangeAdded', { link = "GreenBold" })
	hl(0, 'NeogitChangeBothModified', { link = "YellowBold" })
	hl(0, 'NeogitChangeCopied', { link = "AquaBold" })
	hl(0, 'NeogitChangeDeleted', { link = "RedBold" })
	hl(0, 'NeogitChangeModified', { link = "OrangeBold" })
	hl(0, 'NeogitChangeNewFile', { link = "GreenBold" })
	hl(0, 'NeogitChangeRenamed', { link = "BlueBold" })
	hl(0, 'NeogitChangeUpdated', { link = "YellowBold" })
	hl(0, 'NeogitCommandCodeError', { link = "Red" })
	hl(0, 'NeogitCommandCodeNormal', { link = "Green" })
	hl(0, 'NeogitCommitViewHeader', { link = "Purple" })
	hl(0, 'NeogitDiffAdd', { link = "DiffAdd" })
	hl(0, 'NeogitDiffAddHighlight', { link = "DiffAdd" })
	hl(0, 'NeogitDiffContextHighlight', { link = "CursorLine" })
	hl(0, 'NeogitDiffDelete', { link = "DiffDelete" })
	hl(0, 'NeogitDiffDeleteHighlight', { link = "DiffDelete" })
	hl(0, 'NeogitFilePath', { link = "Aqua" })
	hl(0, 'NeogitFold', { link = "FoldColumn" })
	hl(0, 'NeogitHunkHeader', { link = "TabLineFill" })
	hl(0, 'NeogitHunkHeaderHighlight', { link = "TabLine" })
	hl(0, 'NeogitNotificationError', { link = "ErrorFloat" })
	hl(0, 'NeogitNotificationInfo', { link = "InfoFloat" })
	hl(0, 'NeogitNotificationWarning', { link = "WarningFloat" })
	hl(0, 'NeogitObjectId', { bold = true, cterm = { bold = true, italic = true }, fg = 10993792, italic = true })
	hl(0, 'NeogitRecentCommits', { link = "AquaBold" })
	hl(0, 'NeogitRemote', { link = "Purple" })
	hl(0, 'NeogitStashes', { link = "BlueBold" })
	hl(0, 'NeogitUnmergedInto', { link = "PurpleItalic" })
	hl(0, 'NeogitUnpushedTo', { link = "PurpleItalic" })
	hl(0, 'NeogitUnstagedchanges', { link = "Aqua" })
	hl(0, 'NeogitUntrackedfiles', { link = "PurpleItalic" })
	hl(0, 'NeomakeError', { link = "ErrorText" })
	hl(0, 'NeomakeErrorSign', { link = "RedSign" })
	hl(0, 'NeomakeInfo', { link = "InfoText" })
	hl(0, 'NeomakeInfoSign', { link = "BlueSign" })
	hl(0, 'NeomakeMessage', { link = "HintText" })
	hl(0, 'NeomakeMessageSign', { link = "AquaSign" })
	hl(0, 'NeomakeVirtualtextError', { link = "VirtualTextError" })
	hl(0, 'NeomakeVirtualtextInfo', { link = "VirtualTextInfo" })
	hl(0, 'NeomakeVirtualtextMessag', { link = "VirtualTextHint" })
	hl(0, 'NeomakeVirtualtextWarning', { link = "VirtualTextWarning" })
	hl(0, 'NeomakeWarning', { link = "WarningText" })
	hl(0, 'NeomakeWarningSign', { link = "YellowSign" })
	hl(0, 'NeotestAdapterName', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'NeotestBorder', { fg = 8371123 })
	hl(0, 'NeotestDir', { fg = 8371123 })
	hl(0, 'NeotestExpandMarker', { fg = 8753801 })
	hl(0, 'NeotestFailed', { fg = 15105664 })
	hl(0, 'NeotestFile', { fg = 8634514 })
	hl(0, 'NeotestFocused', { fg = 14400639 })
	hl(0, 'NeotestIndent', { fg = 8753801 })
	hl(0, 'NeotestMarked', { fg = 8371123 })
	hl(0, 'NeotestNamespace', { fg = 4345927 })
	hl(0, 'NeotestPassed', { fg = 10993792 })
	hl(0, 'NeotestRunning', { fg = 14400639 })
	hl(0, 'NeotestSkipped', { fg = 8371123 })
	hl(0, 'NeotestTarget', { fg = 8371123 })
	hl(0, 'NeotestWinSelect', { fg = 8371123 })
	hl(0, 'NoiceCompletionItemKindClass', { fg = 15112309 })
	hl(0, 'NoiceCompletionItemKindConstant', { fg = 15105664 })
	hl(0, 'NoiceCompletionItemKindConstructor', { fg = 8371123 })
	hl(0, 'NoiceCompletionItemKindDefault', { fg = 8753801 })
	hl(0, 'NoiceCompletionItemKindEnum', { fg = 15112309 })
	hl(0, 'NoiceCompletionItemKindEnumMember', { fg = 10993792 })
	hl(0, 'NoiceCompletionItemKindEvent', { fg = 15112309 })
	hl(0, 'NoiceCompletionItemKindField', { fg = 10993792 })
	hl(0, 'NoiceCompletionItemKindFunction', { fg = 8371123 })
	hl(0, 'NoiceCompletionItemKindInterface', { fg = 15112309 })
	hl(0, 'NoiceCompletionItemKindKeyword', { fg = 8634514 })
	hl(0, 'NoiceCompletionItemKindMethod', { fg = 8371123 })
	hl(0, 'NoiceCompletionItemKindModule', { fg = 14400639 })
	hl(0, 'NoiceCompletionItemKindOperator', { fg = 10993792 })
	hl(0, 'NoiceCompletionItemKindProperty', { fg = 10993792 })
	hl(0, 'NoiceCompletionItemKindReference', { fg = 15105664 })
	hl(0, 'NoiceCompletionItemKindSnippet', { fg = 8753801 })
	hl(0, 'NoiceCompletionItemKindStruct', { fg = 15112309 })
	hl(0, 'NoiceCompletionItemKindTypeParameter', { fg = 10993792 })
	hl(0, 'NoiceCompletionItemKindUnit', { fg = 15112309 })
	hl(0, 'NoiceCompletionItemKindValue', { fg = 15105664 })
	hl(0, 'NoiceCompletionItemKindVariable', { fg = 15105664 })
	hl(0, 'NonText', { fg = 5199966 })
	hl(0, 'Normal', { bg = 2962747, fg = 13878954 })
	hl(0, 'NormalFloat', { bg = 4016205, fg = 13878954 })
	hl(0, 'NormalNC', { bg = 2962747, fg = 13878954 })
	hl(0, 'NotifyBackground', { bg = 2962747, fg = 13878954 })
	hl(0, 'NotifyDEBUGBorder', { link = "Grey" })
	hl(0, 'NotifyDEBUGIcon', { link = "Grey" })
	hl(0, 'NotifyDEBUGTitle', { link = "Grey" })
	hl(0, 'NotifyERRORBorder', { link = "Red" })
	hl(0, 'NotifyERRORIcon', { link = "Red" })
	hl(0, 'NotifyERRORTitle', { link = "Red" })
	hl(0, 'NotifyHINTBorder', vim.empty_dict())
	hl(0, 'NotifyHINTIcon', vim.empty_dict())
	hl(0, 'NotifyHINTTitle', vim.empty_dict())
	hl(0, 'NotifyINFOBorder', { link = "Green" })
	hl(0, 'NotifyINFOIcon', { link = "Green" })
	hl(0, 'NotifyINFOTitle', { link = "Green" })
	hl(0, 'NotifyTRACEBorder', { link = "Purple" })
	hl(0, 'NotifyTRACEIcon', { link = "Purple" })
	hl(0, 'NotifyTRACETitle', { link = "Purple" })
	hl(0, 'NotifyWARNBorder', { link = "Yellow" })
	hl(0, 'NotifyWARNIcon', { link = "Yellow" })
	hl(0, 'NotifyWARNTitle', { link = "Yellow" })
	hl(0, 'Number', { fg = 14064054 })
	hl(0, 'NvimAnd', { link = "NvimBinaryOperator" })
	hl(0, 'NvimArrow', { link = "Delimiter" })
	hl(0, 'NvimAssignment', { link = "Operator" })
	hl(0, 'NvimAssignmentWithAddition', { link = "NvimAugmentedAssignment" })
	hl(0, 'NvimAssignmentWithConcatenation', { link = "NvimAugmentedAssignment" })
	hl(0, 'NvimAssignmentWithSubtraction', { link = "NvimAugmentedAssignment" })
	hl(0, 'NvimAugmentedAssignment', { link = "NvimAssignment" })
	hl(0, 'NvimBinaryMinus', { link = "NvimBinaryOperator" })
	hl(0, 'NvimBinaryOperator', { link = "NvimOperator" })
	hl(0, 'NvimBinaryPlus', { link = "NvimBinaryOperator" })
	hl(0, 'NvimCallingParenthesis', { link = "NvimParenthesis" })
	hl(0, 'NvimColon', { link = "Delimiter" })
	hl(0, 'NvimComma', { link = "Delimiter" })
	hl(0, 'NvimComparison', { link = "NvimBinaryOperator" })
	hl(0, 'NvimComparisonModifier', { link = "NvimComparison" })
	hl(0, 'NvimConcat', { link = "NvimBinaryOperator" })
	hl(0, 'NvimConcatOrSubscript', { link = "NvimConcat" })
	hl(0, 'NvimContainer', { link = "NvimParenthesis" })
	hl(0, 'NvimCurly', { link = "NvimSubscript" })
	hl(0, 'NvimDapVirtualText', { link = "Comment" })
	hl(0, 'NvimDapVirtualTextChanged', { link = "DiagnosticVirtualTextWarn" })
	hl(0, 'NvimDapVirtualTextError', { link = "DiagnosticVirtualTextError" })
	hl(0, 'NvimDapVirtualTextInfo', { link = "DiagnosticVirtualTextInfo" })
	hl(0, 'NvimDict', { link = "NvimContainer" })
	hl(0, 'NvimDivision', { link = "NvimBinaryOperator" })
	hl(0, 'NvimDoubleQuote', { link = "NvimStringQuote" })
	hl(0, 'NvimDoubleQuotedBody', { link = "NvimStringBody" })
	hl(0, 'NvimDoubleQuotedEscape', { link = "NvimStringSpecial" })
	hl(0, 'NvimDoubleQuotedUnknownEscape', { link = "NvimInvalidValue" })
	hl(0, 'NvimEnvironmentName', { link = "NvimIdentifier" })
	hl(0, 'NvimEnvironmentSigil', { link = "NvimOptionSigil" })
	hl(0, 'NvimFigureBrace', { link = "NvimInternalError" })
	hl(0, 'NvimFloat', { link = "NvimNumber" })
	hl(0, 'NvimIdentifier', { link = "Identifier" })
	hl(0, 'NvimIdentifierKey', { link = "NvimIdentifier" })
	hl(0, 'NvimIdentifierName', { link = "NvimIdentifier" })
	hl(0, 'NvimIdentifierScope', { link = "NvimIdentifier" })
	hl(0, 'NvimIdentifierScopeDelimiter', { link = "NvimIdentifier" })
	hl(0, 'NvimInternalError', { bg = 16711680, ctermbg = 9, ctermfg = 9, fg = 16711680 })
	hl(0, 'NvimInvalid', { link = "Error" })
	hl(0, 'NvimInvalidAnd', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidArrow', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidAssignment', { link = "NvimInvalid" })
	hl(0, 'NvimInvalidAssignmentWithAddition', { link = "NvimInvalidAugmentedAssignment" })
	hl(0, 'NvimInvalidAssignmentWithConcatenation', { link = "NvimInvalidAugmentedAssignment" })
	hl(0, 'NvimInvalidAssignmentWithSubtraction', { link = "NvimInvalidAugmentedAssignment" })
	hl(0, 'NvimInvalidAugmentedAssignment', { link = "NvimInvalidAssignment" })
	hl(0, 'NvimInvalidBinaryMinus', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidBinaryOperator', { link = "NvimInvalidOperator" })
	hl(0, 'NvimInvalidBinaryPlus', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidCallingParenthesis', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidColon', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidComma', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidComparison', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidComparisonModifier', { link = "NvimInvalidComparison" })
	hl(0, 'NvimInvalidConcat', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidConcatOrSubscript', { link = "NvimInvalidConcat" })
	hl(0, 'NvimInvalidContainer', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidCurly', { link = "NvimInvalidSubscript" })
	hl(0, 'NvimInvalidDelimiter', { link = "NvimInvalid" })
	hl(0, 'NvimInvalidDict', { link = "NvimInvalidContainer" })
	hl(0, 'NvimInvalidDivision', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidDoubleQuote', { link = "NvimInvalidStringQuote" })
	hl(0, 'NvimInvalidDoubleQuotedBody', { link = "NvimInvalidStringBody" })
	hl(0, 'NvimInvalidDoubleQuotedEscape', { link = "NvimInvalidStringSpecial" })
	hl(0, 'NvimInvalidDoubleQuotedUnknownEscape', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidEnvironmentName', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidEnvironmentSigil', { link = "NvimInvalidOptionSigil" })
	hl(0, 'NvimInvalidFigureBrace', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidFloat', { link = "NvimInvalidNumber" })
	hl(0, 'NvimInvalidIdentifier', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidIdentifierKey', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidIdentifierName', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidIdentifierScope', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidIdentifierScopeDelimiter', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidLambda', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidList', { link = "NvimInvalidContainer" })
	hl(0, 'NvimInvalidMod', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidMultiplication', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidNestingParenthesis', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidNot', { link = "NvimInvalidUnaryOperator" })
	hl(0, 'NvimInvalidNumber', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidNumberPrefix', { link = "NvimInvalidNumber" })
	hl(0, 'NvimInvalidOperator', { link = "NvimInvalid" })
	hl(0, 'NvimInvalidOptionName', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidOptionScope', { link = "NvimInvalidIdentifierScope" })
	hl(0, 'NvimInvalidOptionScopeDelimiter', { link = "NvimInvalidIdentifierScopeDelimiter" })
	hl(0, 'NvimInvalidOptionSigil', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidOr', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidParenthesis', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidPlainAssignment', { link = "NvimInvalidAssignment" })
	hl(0, 'NvimInvalidRegister', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidSingleQuote', { link = "NvimInvalidStringQuote" })
	hl(0, 'NvimInvalidSingleQuotedBody', { link = "NvimInvalidStringBody" })
	hl(0, 'NvimInvalidSingleQuotedQuote', { link = "NvimInvalidStringSpecial" })
	hl(0, 'NvimInvalidSingleQuotedUnknownEscape', { link = "NvimInternalError" })
	hl(0, 'NvimInvalidSpacing', { link = "ErrorMsg" })
	hl(0, 'NvimInvalidString', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidStringBody', { link = "NvimStringBody" })
	hl(0, 'NvimInvalidStringQuote', { link = "NvimInvalidString" })
	hl(0, 'NvimInvalidStringSpecial', { link = "NvimStringSpecial" })
	hl(0, 'NvimInvalidSubscript', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidSubscriptBracket', { link = "NvimInvalidSubscript" })
	hl(0, 'NvimInvalidSubscriptColon', { link = "NvimInvalidSubscript" })
	hl(0, 'NvimInvalidTernary', { link = "NvimInvalidOperator" })
	hl(0, 'NvimInvalidTernaryColon', { link = "NvimInvalidTernary" })
	hl(0, 'NvimInvalidUnaryMinus', { link = "NvimInvalidUnaryOperator" })
	hl(0, 'NvimInvalidUnaryOperator', { link = "NvimInvalidOperator" })
	hl(0, 'NvimInvalidUnaryPlus', { link = "NvimInvalidUnaryOperator" })
	hl(0, 'NvimInvalidValue', { link = "NvimInvalid" })
	hl(0, 'NvimLambda', { link = "NvimParenthesis" })
	hl(0, 'NvimList', { link = "NvimContainer" })
	hl(0, 'NvimMod', { link = "NvimBinaryOperator" })
	hl(0, 'NvimMultiplication', { link = "NvimBinaryOperator" })
	hl(0, 'NvimNestingParenthesis', { link = "NvimParenthesis" })
	hl(0, 'NvimNot', { link = "NvimUnaryOperator" })
	hl(0, 'NvimNumber', { link = "Number" })
	hl(0, 'NvimNumberPrefix', { link = "Type" })
	hl(0, 'NvimOperator', { link = "Operator" })
	hl(0, 'NvimOptionName', { link = "NvimIdentifier" })
	hl(0, 'NvimOptionScope', { link = "NvimIdentifierScope" })
	hl(0, 'NvimOptionScopeDelimiter', { link = "NvimIdentifierScopeDelimiter" })
	hl(0, 'NvimOptionSigil', { link = "Type" })
	hl(0, 'NvimOr', { link = "NvimBinaryOperator" })
	hl(0, 'NvimParenthesis', { link = "Delimiter" })
	hl(0, 'NvimPlainAssignment', { link = "NvimAssignment" })
	hl(0, 'NvimRegister', { link = "SpecialChar" })
	hl(0, 'NvimSingleQuote', { link = "NvimStringQuote" })
	hl(0, 'NvimSingleQuotedBody', { link = "NvimStringBody" })
	hl(0, 'NvimSingleQuotedQuote', { link = "NvimStringSpecial" })
	hl(0, 'NvimSingleQuotedUnknownEscape', { link = "NvimInternalError" })
	hl(0, 'NvimSpacing', { link = "Normal" })
	hl(0, 'NvimString', { link = "String" })
	hl(0, 'NvimStringBody', { link = "NvimString" })
	hl(0, 'NvimStringQuote', { link = "NvimString" })
	hl(0, 'NvimStringSpecial', { link = "SpecialChar" })
	hl(0, 'NvimSubscript', { link = "NvimParenthesis" })
	hl(0, 'NvimSubscriptBracket', { link = "NvimSubscript" })
	hl(0, 'NvimSubscriptColon', { link = "NvimSubscript" })
	hl(0, 'NvimTernary', { link = "NvimOperator" })
	hl(0, 'NvimTernaryColon', { link = "NvimTernary" })
	hl(0, 'NvimTreeBookmark', { fg = 10993792 })
	hl(0, 'NvimTreeBookmarkHL', { link = "SpellLocal" })
	hl(0, 'NvimTreeClosedFolderIcon', { link = "NvimTreeFolderIcon" })
	hl(0, 'NvimTreeCopiedHL', { link = "SpellRare" })
	hl(0, 'NvimTreeCursorColumn', { link = "CursorColumn" })
	hl(0, 'NvimTreeCursorLine', { bg = 2962747 })
	hl(0, 'NvimTreeCursorLineNr', { link = "CursorLineNr" })
	hl(0, 'NvimTreeCutHL', { link = "SpellBad" })
	hl(0, 'NvimTreeEmptyFolderName', { link = "Green" })
	hl(0, 'NvimTreeEndOfBuffer', { bg = 2304558, fg = 2304558 })
	hl(0, 'NvimTreeExecFile', { link = "Fg" })
	hl(0, 'NvimTreeFileDeleted', { link = "NvimTreeGitDeleted" })
	hl(0, 'NvimTreeFileDirty', { link = "NvimTreeGitDirty" })
	hl(0, 'NvimTreeFileIgnored', { link = "NvimTreeGitIgnored" })
	hl(0, 'NvimTreeFileMerge', { link = "NvimTreeGitMerge" })
	hl(0, 'NvimTreeFileNew', { link = "NvimTreeGitNew" })
	hl(0, 'NvimTreeFileRenamed', { link = "NvimTreeGitRenamed" })
	hl(0, 'NvimTreeFileStaged', { link = "NvimTreeGitStaged" })
	hl(0, 'NvimTreeFolderDeleted', { link = "NvimTreeFileDeleted" })
	hl(0, 'NvimTreeFolderDirty', { link = "NvimTreeFileDirty" })
	hl(0, 'NvimTreeFolderIcon', { link = "Orange" })
	hl(0, 'NvimTreeFolderIgnored', { link = "NvimTreeFileIgnored" })
	hl(0, 'NvimTreeFolderMerge', { link = "NvimTreeFileMerge" })
	hl(0, 'NvimTreeFolderName', { link = "Green" })
	hl(0, 'NvimTreeFolderNew', { link = "NvimTreeFileNew" })
	hl(0, 'NvimTreeFolderRenamed', { link = "NvimTreeFileRenamed" })
	hl(0, 'NvimTreeFolderStaged', { link = "NvimTreeFileStaged" })
	hl(0, 'NvimTreeGitDeleted', { link = "Red" })
	hl(0, 'NvimTreeGitDirty', { link = "Yellow" })
	hl(0, 'NvimTreeGitIgnored', { link = "Comment" })
	hl(0, 'NvimTreeGitMerge', { link = "Orange" })
	hl(0, 'NvimTreeGitNew', { link = "Aqua" })
	hl(0, 'NvimTreeGitRenamed', { link = "Purple" })
	hl(0, 'NvimTreeGitStaged', { link = "Blue" })
	hl(0, 'NvimTreeImageFile', { link = "Fg" })
	hl(0, 'NvimTreeIndentMarker', { link = "Grey" })
	hl(0, 'NvimTreeLineNr', { link = "LineNr" })
	hl(0, 'NvimTreeLiveFilterPrefix', { bold = true, fg = 14064054 })
	hl(0, 'NvimTreeLiveFilterValue', { bold = true })
	hl(0, 'NvimTreeLspDiagnosticsError', { link = "RedSign" })
	hl(0, 'NvimTreeLspDiagnosticsErrorFolderText', { link = "NvimTreeLspDiagnosticsErrorText" })
	hl(0, 'NvimTreeLspDiagnosticsErrorText', { link = "NvimTreeLspDiagnosticsError" })
	hl(0, 'NvimTreeLspDiagnosticsHint', { link = "GreenSign" })
	hl(0, 'NvimTreeLspDiagnosticsHintFolderText', { link = "NvimTreeLspDiagnosticsHintFileText" })
	hl(0, 'NvimTreeLspDiagnosticsHintText', { link = "NvimTreeLspDiagnosticsHintFile" })
	hl(0, 'NvimTreeLspDiagnosticsInformation', { link = "BlueSign" })
	hl(0, 'NvimTreeLspDiagnosticsInformationFolderText', { link = "NvimTreeLspDiagnosticsInformationText" })
	hl(0, 'NvimTreeLspDiagnosticsInformationText', { link = "NvimTreeLspDiagnosticsInformation" })
	hl(0, 'NvimTreeLspDiagnosticsWarning', { link = "YellowSign" })
	hl(0, 'NvimTreeLspDiagnosticsWarningFolderText', { link = "NvimTreeLspDiagnosticsWarningText" })
	hl(0, 'NvimTreeLspDiagnosticsWarningText', { link = "NvimTreeLspDiagnosticsWarning" })
	hl(0, 'NvimTreeMarkdownFile', { link = "Fg" })
	hl(0, 'NvimTreeModifiedFile', { fg = 10993792 })
	hl(0, 'NvimTreeNormal', { bg = 2304558, fg = 13878954 })
	hl(0, 'NvimTreeNormalFloat', { link = "NormalFloat" })
	hl(0, 'NvimTreeNormalNC', { link = "NvimTreeNormal" })
	hl(0, 'NvimTreeOpenedFile', { link = "Fg" })
	hl(0, 'NvimTreeOpenedFileIcon', { link = "NvimTreeOpenedFile" })
	hl(0, 'NvimTreeOpenedFolderIcon', { link = "NvimTreeFolderIcon" })
	hl(0, 'NvimTreeOpenedFolderName', { link = "Green" })
	hl(0, 'NvimTreePopup', { link = "Normal" })
	hl(0, 'NvimTreeRootFolder', { link = "Grey" })
	hl(0, 'NvimTreeSignColumn', { link = "NvimTreeNormal" })
	hl(0, 'NvimTreeSpecialFile', { link = "Fg" })
	hl(0, 'NvimTreeStatusLine', { link = "StatusLine" })
	hl(0, 'NvimTreeStatusLineNC', { link = "StatusLineNC" })
	hl(0, 'NvimTreeSymlink', { link = "Fg" })
	hl(0, 'NvimTreeSymlinkFolderName', { link = "Directory" })
	hl(0, 'NvimTreeVertSplit', { bg = 2962747, fg = 2962747 })
	hl(0, 'NvimTreeWinSeparator', { link = "WinSeparator" })
	hl(0, 'NvimTreeWindowPicker', { bg = 4494280, bold = true, fg = 15592941 })
	hl(0, 'NvimUnaryMinus', { link = "NvimUnaryOperator" })
	hl(0, 'NvimUnaryOperator', { link = "NvimOperator" })
	hl(0, 'NvimUnaryPlus', { link = "NvimUnaryOperator" })
	hl(0, 'OctoBlue', { link = "Blue" })
	hl(0, 'OctoBlueFloat', { bg = 4016205, fg = 8371123 })
	hl(0, 'OctoBubbleBlue', { bg = 8371123, fg = 2962747 })
	hl(0, 'OctoBubbleDelimiterBlue', { link = "Blue" })
	hl(0, 'OctoBubbleDelimiterGreen', { link = "Green" })
	hl(0, 'OctoBubbleDelimiterGrey', { link = "Grey" })
	hl(0, 'OctoBubbleDelimiterPurple', { link = "Purple" })
	hl(0, 'OctoBubbleDelimiterRed', { link = "Red" })
	hl(0, 'OctoBubbleDelimiterYellow', { link = "Yellow" })
	hl(0, 'OctoBubbleGreen', { bg = 10993792, fg = 2962747 })
	hl(0, 'OctoBubbleGrey', { bg = 8753801, fg = 2962747 })
	hl(0, 'OctoBubblePurple', { bg = 14064054, fg = 2962747 })
	hl(0, 'OctoBubbleRed', { bg = 15105664, fg = 2962747 })
	hl(0, 'OctoBubbleYellow', { bg = 14400639, fg = 2962747 })
	hl(0, 'OctoGreen', { link = "Green" })
	hl(0, 'OctoGreenFloat', { bg = 4016205, fg = 10993792 })
	hl(0, 'OctoGrey', { link = "Grey" })
	hl(0, 'OctoGreyFloat', { bg = 4016205, fg = 8753801 })
	hl(0, 'OctoPurple', { link = "Purple" })
	hl(0, 'OctoPurpleFloat', { bg = 4016205, fg = 14064054 })
	hl(0, 'OctoRed', { link = "Red" })
	hl(0, 'OctoRedFloat', { bg = 4016205, fg = 15105664 })
	hl(0, 'OctoViewer', { bg = 8371123, fg = 2962747 })
	hl(0, 'OctoYellow', { link = "Yellow" })
	hl(0, 'OctoYellowFloat', { bg = 4016205, fg = 14400639 })
	hl(0, 'Operator', { fg = 15112309 })
	hl(0, 'Orange', { fg = 15112309 })
	hl(0, 'OrangeBold', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'OrangeItalic', { fg = 15112309 })
	hl(0, 'OrangeSign', { fg = 15112309 })
	hl(0, 'Pmenu', { bg = 4016205, fg = 13878954 })
	hl(0, 'PmenuExtra', { link = "Pmenu" })
	hl(0, 'PmenuExtraSel', { link = "PmenuSel" })
	hl(0, 'PmenuKind', { link = "Pmenu" })
	hl(0, 'PmenuKindSel', { link = "PmenuSel" })
	hl(0, 'PmenuSbar', { bg = 4016205 })
	hl(0, 'PmenuSel', { bg = 10993792, fg = 2962747 })
	hl(0, 'PmenuThumb', { bg = 8029304 })
	hl(0, 'PreCondit', { fg = 14064054 })
	hl(0, 'PreProc', { fg = 14064054 })
	hl(0, 'Purple', { fg = 14064054 })
	hl(0, 'PurpleBold', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'PurpleItalic', { fg = 14064054 })
	hl(0, 'PurpleSign', { fg = 14064054 })
	hl(0, 'Question', { fg = 14400639 })
	hl(0, 'QuickFixLine', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'QuickScopePrimary', { cterm = { underline = true }, fg = 8634514, underline = true })
	hl(0, 'QuickScopeSecondary', { cterm = { underline = true }, fg = 8371123, underline = true })
	hl(0, 'QuickmenuBracket', { link = "Grey" })
	hl(0, 'QuickmenuHeader', { link = "Orange" })
	hl(0, 'QuickmenuHelp', { link = "Green" })
	hl(0, 'QuickmenuNumber', { link = "Red" })
	hl(0, 'QuickmenuOption', { link = "Green" })
	hl(0, 'QuickmenuSpecial', { link = "Purple" })
	hl(0, 'RainbowDelimiterBlue', { link = "rainbowcol6" })
	hl(0, 'RainbowDelimiterCyan', { link = "rainbowcol5" })
	hl(0, 'RainbowDelimiterGreen', { link = "rainbowcol4" })
	hl(0, 'RainbowDelimiterOrange', { link = "rainbowcol2" })
	hl(0, 'RainbowDelimiterRed', { link = "rainbowcol1" })
	hl(0, 'RainbowDelimiterViolet', { link = "rainbowcol7" })
	hl(0, 'RainbowDelimiterYellow', { link = "rainbowcol3" })
	hl(0, 'RainbowLevel0', { link = "Red" })
	hl(0, 'RainbowLevel1', { link = "Orange" })
	hl(0, 'RainbowLevel2', { link = "Yellow" })
	hl(0, 'RainbowLevel3', { link = "Green" })
	hl(0, 'RainbowLevel4', { link = "Aqua" })
	hl(0, 'RainbowLevel5', { link = "Blue" })
	hl(0, 'RainbowLevel6', { link = "Purple" })
	hl(0, 'RainbowLevel7', { link = "Yellow" })
	hl(0, 'RainbowLevel8', { link = "Green" })
	hl(0, 'Red', { fg = 15105664 })
	hl(0, 'RedBold', { bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'RedItalic', { fg = 15105664 })
	hl(0, 'RedSign', { fg = 15105664 })
	hl(0, 'RedrawDebugClear', { bg = 16776960, ctermbg = 11 })
	hl(0, 'RedrawDebugComposed', { bg = 32768, ctermbg = 10 })
	hl(0, 'RedrawDebugNormal', { cterm = { reverse = true }, reverse = true })
	hl(0, 'RedrawDebugRecompose', { bg = 16711680, ctermbg = 9 })
	hl(0, 'RenameBorder', { link = "Purple" })
	hl(0, 'Repeat', { fg = 15105664 })
	hl(0, 'SagaBorder', { link = "Blue" })
	hl(0, 'ScrollbarError', { fg = 15105664 })
	hl(0, 'ScrollbarErrorHandle', { bg = 3424068, fg = 15105664 })
	hl(0, 'ScrollbarHandle', { bg = 3424068 })
	hl(0, 'ScrollbarHint', { fg = 8371123 })
	hl(0, 'ScrollbarHintHandle', { bg = 3424068, fg = 8371123 })
	hl(0, 'ScrollbarInfo', { fg = 10993792 })
	hl(0, 'ScrollbarInfoHandle', { bg = 3424068, fg = 10993792 })
	hl(0, 'ScrollbarMisc', { fg = 14064054 })
	hl(0, 'ScrollbarMiscHandle', { bg = 3424068, fg = 14064054 })
	hl(0, 'ScrollbarSearch', { fg = 15112309 })
	hl(0, 'ScrollbarSearchHandle', { bg = 3424068, fg = 15112309 })
	hl(0, 'ScrollbarWarn', { fg = 14400639 })
	hl(0, 'ScrollbarWarnHandle', { bg = 3424068, fg = 14400639 })
	hl(0, 'Search', { bg = 10993792, fg = 2962747 })
	hl(0, 'SignColumn', { fg = 13878954 })
	hl(0, 'SignatureMarkText', { link = "BlueSign" })
	hl(0, 'SignatureMarkerText', { link = "PurpleSign" })
	hl(0, 'SignifyLineAdd', { link = "DiffAdd" })
	hl(0, 'SignifyLineChange', { link = "DiffChange" })
	hl(0, 'SignifyLineChangeDelete', { link = "DiffChange" })
	hl(0, 'SignifyLineDelete', { link = "DiffDelete" })
	hl(0, 'SignifySignAdd', { link = "GreenSign" })
	hl(0, 'SignifySignChange', { link = "BlueSign" })
	hl(0, 'SignifySignChangeDelete', { link = "PurpleSign" })
	hl(0, 'SignifySignDelete', { link = "RedSign" })
	hl(0, 'Sneak', { link = "Search" })
	hl(0, 'SneakLabel', { link = "Search" })
	hl(0, 'SneakLabelMask', { bg = 15112309, fg = 15112309 })
	hl(0, 'SneakScope', { link = "DiffText" })
	hl(0, 'Special', { fg = 14400639 })
	hl(0, 'SpecialChar', { fg = 14400639 })
	hl(0, 'SpecialComment', { cterm = { italic = true }, fg = 8753801, italic = true })
	hl(0, 'SpecialKey', { fg = 4674136 })
	hl(0, 'SpellBad', { cterm = { undercurl = true }, sp = 15105664, undercurl = true })
	hl(0, 'SpellCap', { cterm = { undercurl = true }, sp = 8371123, undercurl = true })
	hl(0, 'SpellLocal', { cterm = { undercurl = true }, sp = 8634514, undercurl = true })
	hl(0, 'SpellRare', { cterm = { undercurl = true }, sp = 14064054, undercurl = true })
	hl(0, 'StartifyBracket', { link = "Grey" })
	hl(0, 'StartifyFile', { link = "Fg" })
	hl(0, 'StartifyFooter', { link = "Grey" })
	hl(0, 'StartifyHeader', { link = "Aqua" })
	hl(0, 'StartifyNumber', { link = "Orange" })
	hl(0, 'StartifyPath', { link = "Green" })
	hl(0, 'StartifySection', { link = "Yellow" })
	hl(0, 'StartifySlash', { link = "Green" })
	hl(0, 'StartifySpecial', { link = "Grey" })
	hl(0, 'Statement', { fg = 15105664 })
	hl(0, 'StatusLine', { bg = 4016205, fg = 8753801 })
	hl(0, 'StatusLineNC', { bg = 3424068, fg = 8753801 })
	hl(0, 'StatusLineTerm', { bg = 3424068, fg = 8753801 })
	hl(0, 'StatusLineTermNC', { bg = 2962747, fg = 8753801 })
	hl(0, 'StorageClass', { fg = 15112309 })
	hl(0, 'String', { fg = 10993792 })
	hl(0, 'Structure', { fg = 15112309 })
	hl(0, 'Substitute', { bg = 14400639, fg = 2962747 })
	hl(0, 'SyntasticError', { link = "ErrorText" })
	hl(0, 'SyntasticErrorLine', { link = "ErrorLine" })
	hl(0, 'SyntasticErrorSign', { link = "RedSign" })
	hl(0, 'SyntasticWarning', { link = "WarningText" })
	hl(0, 'SyntasticWarningLine', { link = "WarningLine" })
	hl(0, 'SyntasticWarningSign', { link = "YellowSign" })
	hl(0, 'TSAnnotation', { link = "Purple" })
	hl(0, 'TSAttribute', { link = "Purple" })
	hl(0, 'TSBoolean', { link = "Purple" })
	hl(0, 'TSCharacter', { link = "Aqua" })
	hl(0, 'TSCharacterSpecial', { link = "SpecialChar" })
	hl(0, 'TSComment', { link = "Comment" })
	hl(0, 'TSConditional', { link = "Red" })
	hl(0, 'TSConstBuiltin', { link = "PurpleItalic" })
	hl(0, 'TSConstMacro', { link = "PurpleItalic" })
	hl(0, 'TSConstant', { link = "Constant" })
	hl(0, 'TSConstructor', { link = "Green" })
	hl(0, 'TSDanger', { bg = 15105664, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'TSDebug', { link = "Debug" })
	hl(0, 'TSDefine', { link = "Define" })
	hl(0, 'TSEmphasis', { cterm = { italic = true }, italic = true })
	hl(0, 'TSEnvironment', { link = "Macro" })
	hl(0, 'TSEnvironmentName', { link = "Type" })
	hl(0, 'TSError', { link = "Error" })
	hl(0, 'TSException', { link = "Red" })
	hl(0, 'TSField', { link = "Blue" })
	hl(0, 'TSFloat', { link = "Purple" })
	hl(0, 'TSFuncBuiltin', { link = "Green" })
	hl(0, 'TSFuncMacro', { link = "Green" })
	hl(0, 'TSFunction', { link = "Green" })
	hl(0, 'TSFunctionCall', { link = "Green" })
	hl(0, 'TSInclude', { link = "Red" })
	hl(0, 'TSKeyword', { link = "Red" })
	hl(0, 'TSKeywordFunction', { link = "Red" })
	hl(0, 'TSKeywordOperator', { link = "Orange" })
	hl(0, 'TSKeywordReturn', { link = "Red" })
	hl(0, 'TSLabel', { link = "Orange" })
	hl(0, 'TSLiteral', { link = "String" })
	hl(0, 'TSMath', { link = "Blue" })
	hl(0, 'TSMethod', { link = "Green" })
	hl(0, 'TSMethodCall', { link = "Green" })
	hl(0, 'TSModuleInfoBad', { link = "Red" })
	hl(0, 'TSModuleInfoGood', { link = "Green" })
	hl(0, 'TSNamespace', { link = "YellowItalic" })
	hl(0, 'TSNone', { link = "Fg" })
	hl(0, 'TSNote', { bg = 8371123, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'TSNumber', { link = "Purple" })
	hl(0, 'TSOperator', { link = "Orange" })
	hl(0, 'TSParameter', { link = "Fg" })
	hl(0, 'TSParameterReference', { link = "Fg" })
	hl(0, 'TSPreProc', { link = "PreProc" })
	hl(0, 'TSProperty', { link = "Blue" })
	hl(0, 'TSPunctBracket', { link = "Fg" })
	hl(0, 'TSPunctDelimiter', { link = "Grey" })
	hl(0, 'TSPunctSpecial', { link = "Blue" })
	hl(0, 'TSRainbowBlue', { link = "rainbowcol6" })
	hl(0, 'TSRainbowCyan', { link = "rainbowcol5" })
	hl(0, 'TSRainbowGreen', { link = "rainbowcol4" })
	hl(0, 'TSRainbowOrange', { link = "rainbowcol2" })
	hl(0, 'TSRainbowRed', { link = "rainbowcol1" })
	hl(0, 'TSRainbowViolet', { link = "rainbowcol7" })
	hl(0, 'TSRainbowYellow', { link = "rainbowcol3" })
	hl(0, 'TSRepeat', { link = "Red" })
	hl(0, 'TSStorageClass', { link = "Orange" })
	hl(0, 'TSStorageClassLifetime', { link = "Orange" })
	hl(0, 'TSStrike', { cterm = { strikethrough = true }, strikethrough = true })
	hl(0, 'TSString', { link = "Aqua" })
	hl(0, 'TSStringEscape', { link = "Green" })
	hl(0, 'TSStringRegex', { link = "Green" })
	hl(0, 'TSStringSpecial', { link = "SpecialChar" })
	hl(0, 'TSStrong', { bold = true, cterm = { bold = true } })
	hl(0, 'TSSymbol', { link = "Aqua" })
	hl(0, 'TSTag', { link = "Orange" })
	hl(0, 'TSTagAttribute', { link = "Green" })
	hl(0, 'TSTagDelimiter', { link = "Green" })
	hl(0, 'TSText', { link = "Green" })
	hl(0, 'TSTextReference', { link = "Constant" })
	hl(0, 'TSTitle', { link = "Title" })
	hl(0, 'TSTodo', { link = "Todo" })
	hl(0, 'TSType', { link = "YellowItalic" })
	hl(0, 'TSTypeBuiltin', { link = "YellowItalic" })
	hl(0, 'TSTypeDefinition', { link = "YellowItalic" })
	hl(0, 'TSTypeQualifier', { link = "Orange" })
	hl(0, 'TSURI', { link = "markdownUrl" })
	hl(0, 'TSUnderline', { cterm = { underline = true }, underline = true })
	hl(0, 'TSVariable', { link = "Fg" })
	hl(0, 'TSVariableBuiltin', { link = "PurpleItalic" })
	hl(0, 'TSWarning', { bg = 14400639, bold = true, cterm = { bold = true }, fg = 2962747 })
	hl(0, 'TabLine', { bg = 4674136, fg = 10332576 })
	hl(0, 'TabLineFill', { bg = 3424068, fg = 8753801 })
	hl(0, 'TabLineSel', { bg = 10993792, fg = 2962747 })
	hl(0, 'Tag', { fg = 15112309 })
	hl(0, 'TagbarFoldIcon', { link = "Green" })
	hl(0, 'TagbarKind', { link = "Red" })
	hl(0, 'TagbarNestedKind', { link = "Aqua" })
	hl(0, 'TagbarScope', { link = "Orange" })
	hl(0, 'TagbarSignature', { link = "Green" })
	hl(0, 'TagbarVisibilityPrivate', { link = "Red" })
	hl(0, 'TagbarVisibilityPublic', { link = "Blue" })
	hl(0, 'TelescopeBorder', { link = "Grey" })
	hl(0, 'TelescopeMatching', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'TelescopeMultiIcon', { link = "Identifier" })
	hl(0, 'TelescopeMultiSelection', { link = "Type" })
	hl(0, 'TelescopeNormal', { link = "Normal" })
	hl(0, 'TelescopePreviewBlock', { link = "Constant" })
	hl(0, 'TelescopePreviewBorder', { link = "TelescopeBorder" })
	hl(0, 'TelescopePreviewCharDev', { link = "Constant" })
	hl(0, 'TelescopePreviewDate', { link = "Directory" })
	hl(0, 'TelescopePreviewDirectory', { link = "Directory" })
	hl(0, 'TelescopePreviewExecute', { link = "String" })
	hl(0, 'TelescopePreviewGroup', { link = "Constant" })
	hl(0, 'TelescopePreviewHyphen', { link = "NonText" })
	hl(0, 'TelescopePreviewLine', { link = "Visual" })
	hl(0, 'TelescopePreviewLink', { link = "Special" })
	hl(0, 'TelescopePreviewMatch', { link = "Search" })
	hl(0, 'TelescopePreviewMessage', { link = "TelescopePreviewNormal" })
	hl(0, 'TelescopePreviewMessageFillchar', { link = "TelescopePreviewMessage" })
	hl(0, 'TelescopePreviewNormal', { link = "TelescopeNormal" })
	hl(0, 'TelescopePreviewPipe', { link = "Constant" })
	hl(0, 'TelescopePreviewRead', { link = "Constant" })
	hl(0, 'TelescopePreviewSize', { link = "String" })
	hl(0, 'TelescopePreviewSocket', { link = "Statement" })
	hl(0, 'TelescopePreviewSticky', { link = "Keyword" })
	hl(0, 'TelescopePreviewTitle', { link = "TelescopeTitle" })
	hl(0, 'TelescopePreviewUser', { link = "Constant" })
	hl(0, 'TelescopePreviewWrite', { link = "Statement" })
	hl(0, 'TelescopePromptBorder', { link = "TelescopeBorder" })
	hl(0, 'TelescopePromptCounter', { link = "NonText" })
	hl(0, 'TelescopePromptNormal', { link = "TelescopeNormal" })
	hl(0, 'TelescopePromptPrefix', { link = "Orange" })
	hl(0, 'TelescopePromptTitle', { link = "TelescopeTitle" })
	hl(0, 'TelescopeResultsBorder', { link = "TelescopeBorder" })
	hl(0, 'TelescopeResultsClass', vim.empty_dict())
	hl(0, 'TelescopeResultsComment', { link = "Comment" })
	hl(0, 'TelescopeResultsConstant', { link = "Constant" })
	hl(0, 'TelescopeResultsDiffAdd', { link = "DiffAdd" })
	hl(0, 'TelescopeResultsDiffChange', { link = "DiffChange" })
	hl(0, 'TelescopeResultsDiffDelete', { link = "DiffDelete" })
	hl(0, 'TelescopeResultsDiffUntracked', { link = "NonText" })
	hl(0, 'TelescopeResultsField', vim.empty_dict())
	hl(0, 'TelescopeResultsFunction', { link = "Function" })
	hl(0, 'TelescopeResultsIdentifier', { link = "Identifier" })
	hl(0, 'TelescopeResultsLineNr', { link = "LineNr" })
	hl(0, 'TelescopeResultsMethod', vim.empty_dict())
	hl(0, 'TelescopeResultsNormal', { link = "TelescopeNormal" })
	hl(0, 'TelescopeResultsNumber', { link = "Number" })
	hl(0, 'TelescopeResultsOperator', { link = "Operator" })
	hl(0, 'TelescopeResultsSpecialComment', { link = "SpecialComment" })
	hl(0, 'TelescopeResultsStruct', vim.empty_dict())
	hl(0, 'TelescopeResultsTitle', { link = "TelescopeTitle" })
	hl(0, 'TelescopeResultsVariable', vim.empty_dict())
	hl(0, 'TelescopeSelection', { link = "DiffAdd" })
	hl(0, 'TelescopeSelectionCaret', vim.empty_dict())
	hl(0, 'TermCursor', { link = "Cursor" })
	hl(0, 'Terminal', { bg = 2962747, fg = 13878954 })
	hl(0, 'Title', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'Todo', { cterm = { italic = true }, fg = 14064054, italic = true })
	hl(0, 'ToolbarButton', { bg = 10993792, fg = 2962747 })
	hl(0, 'ToolbarLine', { bg = 4016205, fg = 13878954 })
	hl(0, 'TreesitterContext', vim.empty_dict())
	hl(0, 'TroubleCode', { link = "Grey" })
	hl(0, 'TroubleSource', { link = "Grey" })
	hl(0, 'TroubleText', { link = "Fg" })
	hl(0, 'Type', { fg = 14400639 })
	hl(0, 'Typedef', { fg = 15105664 })
	hl(0, 'Underlined', { cterm = { underline = true }, underline = true })
	hl(0, 'UndotreeBranch', { link = "Yellow" })
	hl(0, 'UndotreeCurrent', { link = "Aqua" })
	hl(0, 'UndotreeHead', { link = "Yellow" })
	hl(0, 'UndotreeNext', { link = "Blue" })
	hl(0, 'UndotreeNode', { link = "Orange" })
	hl(0, 'UndotreeNodeCurrent', { link = "Red" })
	hl(0, 'UndotreeSavedBig', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'UndotreeSavedSmall', { link = "Purple" })
	hl(0, 'UndotreeSeq', { link = "Green" })
	hl(0, 'UndotreeTimeStamp', { link = "Grey" })
	hl(0, 'VertSplit', { fg = 5199966 })
	hl(0, 'VirtualTextError', { link = "Red" })
	hl(0, 'VirtualTextHint', { link = "Green" })
	hl(0, 'VirtualTextInfo', { link = "Blue" })
	hl(0, 'VirtualTextWarning', { link = "Yellow" })
	hl(0, 'VistaBracket', { link = "Grey" })
	hl(0, 'VistaChildrenNr', { link = "Orange" })
	hl(0, 'VistaColon', { link = "Grey" })
	hl(0, 'VistaHeadNr', { link = "Fg" })
	hl(0, 'VistaIcon', { link = "Orange" })
	hl(0, 'VistaLineNr', { link = "Grey" })
	hl(0, 'VistaPrefix', { link = "Grey" })
	hl(0, 'VistaPrivate', { link = "Red" })
	hl(0, 'VistaProtected', { link = "Yellow" })
	hl(0, 'VistaPublic', { link = "Green" })
	hl(0, 'VistaScope', { link = "Red" })
	hl(0, 'VistaScopeKind', { link = "Yellow" })
	hl(0, 'VistaTag', { link = "Green" })
	hl(0, 'Visual', { bg = 5519944 })
	hl(0, 'VisualNOS', { bg = 5519944 })
	hl(0, 'WarningFloat', { fg = 14400639 })
	hl(0, 'WarningLine', vim.empty_dict())
	hl(0, 'WarningMsg', { bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'WarningText', { cterm = { undercurl = true }, sp = 14400639, undercurl = true })
	hl(0, 'WhichKey', { link = "Red" })
	hl(0, 'WhichKeyDesc', { link = "Blue" })
	hl(0, 'WhichKeyFloat', { bg = 3424068 })
	hl(0, 'WhichKeyGroup', { link = "Yellow" })
	hl(0, 'WhichKeySeparator', { link = "Green" })
	hl(0, 'WhichKeyValue', { fg = 13878954 })
	hl(0, 'Whitespace', { fg = 5199966 })
	hl(0, 'WildMenu', { link = "PmenuSel" })
	hl(0, 'WinBar', { bold = true, cterm = { bold = true } })
	hl(0, 'WinBarNC', { link = "Grey" })
	hl(0, 'WinSeparator', { link = "VertSplit" })
	hl(0, 'YankyPut', { link = "IncSearch" })
	hl(0, 'YankyYanked', { link = "IncSearch" })
	hl(0, 'YcmErrorLine', { link = "ErrorLine" })
	hl(0, 'YcmErrorSection', { link = "ErrorText" })
	hl(0, 'YcmErrorSign', { link = "RedSign" })
	hl(0, 'YcmInlayHint', { link = "LineNr" })
	hl(0, 'YcmWarningLine', { link = "WarningLine" })
	hl(0, 'YcmWarningSection', { link = "WarningText" })
	hl(0, 'YcmWarningSign', { link = "YellowSign" })
	hl(0, 'Yellow', { fg = 14400639 })
	hl(0, 'YellowBold', { bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'YellowItalic', { fg = 14400639 })
	hl(0, 'YellowSign', { fg = 14400639 })
	hl(0, 'agitDate', { link = "Green" })
	hl(0, 'agitDiffAdd', { link = "Green" })
	hl(0, 'agitDiffHeader', { link = "Purple" })
	hl(0, 'agitDiffRemove', { link = "Red" })
	hl(0, 'agitHead', { link = "Orange" })
	hl(0, 'agitRef', { link = "Aqua" })
	hl(0, 'agitRemote', { link = "Red" })
	hl(0, 'agitStatAdded', { link = "Green" })
	hl(0, 'agitStatFile', { link = "Blue" })
	hl(0, 'agitStatMessage', { link = "Orange" })
	hl(0, 'agitStatRemoved', { link = "Red" })
	hl(0, 'agitTag', { link = "Orange" })
	hl(0, 'agitTree', { link = "Grey" })
	hl(0, 'bashStatement', { link = "Orange" })
	hl(0, 'cssAttr', { link = "Orange" })
	hl(0, 'cssAttrComma', { link = "Fg" })
	hl(0, 'cssAttributeSelector', { link = "Aqua" })
	hl(0, 'cssBraces', { link = "Fg" })
	hl(0, 'cssClassName', { link = "RedItalic" })
	hl(0, 'cssClassNameDot', { link = "Red" })
	hl(0, 'cssColor', { link = "Green" })
	hl(0, 'cssCommonAttr', { link = "Yellow" })
	hl(0, 'cssFunctionName', { link = "Yellow" })
	hl(0, 'cssImportant', { link = "RedItalic" })
	hl(0, 'cssNoise', { link = "Grey" })
	hl(0, 'cssProp', { link = "Aqua" })
	hl(0, 'cssPseudoClass', { link = "Purple" })
	hl(0, 'cssPseudoClassFn', { link = "Green" })
	hl(0, 'cssPseudoClassId', { link = "Blue" })
	hl(0, 'cssSelectorOp', { link = "Orange" })
	hl(0, 'cssSelectorOp2', { link = "Orange" })
	hl(0, 'cssTagName', { link = "PurpleItalic" })
	hl(0, 'cssUnitDecorators', { link = "Orange" })
	hl(0, 'cssValueAngle', { link = "Green" })
	hl(0, 'cssValueFrequency', { link = "Green" })
	hl(0, 'cssValueInteger', { link = "Green" })
	hl(0, 'cssValueLength', { link = "Green" })
	hl(0, 'cssValueNumber', { link = "Green" })
	hl(0, 'cssValueTime', { link = "Green" })
	hl(0, 'cssVendor', { link = "Grey" })
	hl(0, 'debugBreakpoint', { bg = 15105664, fg = 2962747 })
	hl(0, 'debugPC', { bg = 10993792, fg = 2962747 })
	hl(0, 'deniteInput', { bg = 4674136, bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'deniteMatchedChar', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'deniteMatchedRange', { bold = true, cterm = { bold = true, underline = true }, fg = 10993792, underline = true })
	hl(0, 'deniteSelectedLin', { link = "Green" })
	hl(0, 'deniteStatusLineNumber', { bg = 4674136, fg = 14064054 })
	hl(0, 'deniteStatusLinePath', { bg = 4674136, fg = 13878954 })
	hl(0, 'diffAdded', { link = "Green" })
	hl(0, 'diffChanged', { link = "Blue" })
	hl(0, 'diffFile', { link = "Aqua" })
	hl(0, 'diffIndexLine', { link = "Purple" })
	hl(0, 'diffLine', { link = "Grey" })
	hl(0, 'diffNewFile', { link = "Orange" })
	hl(0, 'diffOldFile', { link = "Yellow" })
	hl(0, 'diffRemoved', { link = "Red" })
	hl(0, 'elixirBlockDefinition', { link = "RedItalic" })
	hl(0, 'elixirCallbackDefine', { link = "RedItalic" })
	hl(0, 'elixirDefine', { link = "RedItalic" })
	hl(0, 'elixirDelegateDefine', { link = "RedItalic" })
	hl(0, 'elixirExUnitMacro', { link = "RedItalic" })
	hl(0, 'elixirExceptionDefine', { link = "RedItalic" })
	hl(0, 'elixirGuard', { link = "RedItalic" })
	hl(0, 'elixirImplDefine', { link = "RedItalic" })
	hl(0, 'elixirInterpolation', { link = "Yellow" })
	hl(0, 'elixirInterpolationDelimiter', { link = "Yellow" })
	hl(0, 'elixirKeyword', { link = "Orange" })
	hl(0, 'elixirMacroDefine', { link = "RedItalic" })
	hl(0, 'elixirModuleDefine', { link = "PurpleItalic" })
	hl(0, 'elixirOverridableDefine', { link = "RedItalic" })
	hl(0, 'elixirPrivateDefine', { link = "RedItalic" })
	hl(0, 'elixirPrivateGuard', { link = "RedItalic" })
	hl(0, 'elixirPrivateMacroDefine', { link = "RedItalic" })
	hl(0, 'elixirPrivateRecordDefine', { link = "RedItalic" })
	hl(0, 'elixirProtocolDefine', { link = "RedItalic" })
	hl(0, 'elixirPseudoVariable', { link = "Purple" })
	hl(0, 'elixirRecordDefine', { link = "RedItalic" })
	hl(0, 'elixirSelf', { link = "Purple" })
	hl(0, 'elixirStringDelimiter', { link = "Green" })
	hl(0, 'elixirStructDefine', { link = "RedItalic" })
	hl(0, 'gitcommitArrow', { link = "Grey" })
	hl(0, 'gitcommitDiscarded', { link = "Grey" })
	hl(0, 'gitcommitFile', { link = "Green" })
	hl(0, 'gitcommitOnBranch', { link = "Grey" })
	hl(0, 'gitcommitSelected', { link = "Grey" })
	hl(0, 'gitcommitSummary', { link = "Green" })
	hl(0, 'gitcommitUnmerged', { link = "Grey" })
	hl(0, 'gitcommitUntracked', { link = "Grey" })
	hl(0, 'goBuiltins', { link = "Function" })
	hl(0, 'goComplexes', { link = "goType" })
	hl(0, 'goConst', { link = "goVar" })
	hl(0, 'goDeclType', { link = "OrangeItalic" })
	hl(0, 'goFloats', { link = "goType" })
	hl(0, 'goFunctionCall', { link = "Function" })
	hl(0, 'goImport', { link = "Include" })
	hl(0, 'goPackage', { link = "Define" })
	hl(0, 'goPredefinedIdentifiers', { link = "Aqua" })
	hl(0, 'goSignedInts', { link = "goType" })
	hl(0, 'goTSConstBuiltin', { link = "AquaItalic" })
	hl(0, 'goTSInclude', { link = "Purple" })
	hl(0, 'goTSNamespace', { link = "Fg" })
	hl(0, 'goType', { link = "Yellow" })
	hl(0, 'goUnsignedInts', { link = "goType" })
	hl(0, 'goVar', { link = "OrangeItalic" })
	hl(0, 'goVarArgs', { link = "Grey" })
	hl(0, 'goVarDefs', { link = "Aqua" })
	hl(0, 'healthError', { link = "Red" })
	hl(0, 'healthSuccess', { link = "Green" })
	hl(0, 'healthWarning', { link = "Yellow" })
	hl(0, 'helpCommand', { link = "Aqua" })
	hl(0, 'helpExample', { link = "Green" })
	hl(0, 'helpHeader', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'helpHeadline', { bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'helpHyperTextEntry', { bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'helpHyperTextJump', { link = "Yellow" })
	hl(0, 'helpNote', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'helpSectionDelim', { link = "Grey" })
	hl(0, 'helpSpecial', { link = "Blue" })
	hl(0, 'helpURL', { cterm = { underline = true }, fg = 10993792, underline = true })
	hl(0, 'htmlArg', { link = "Aqua" })
	hl(0, 'htmlBold', { bold = true, cterm = { bold = true } })
	hl(0, 'htmlBoldItalic', { bold = true, cterm = { bold = true, italic = true }, italic = true })
	hl(0, 'htmlBoldUnderline', { bold = true, cterm = { bold = true, underline = true }, underline = true })
	hl(0, 'htmlBoldUnderlineItalic', { bold = true, cterm = { bold = true, italic = true, underline = true }, italic = true, underline = true })
	hl(0, 'htmlEndTag', { link = "Blue" })
	hl(0, 'htmlH1', { bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'htmlH2', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'htmlH3', { bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'htmlH4', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'htmlH5', { bold = true, cterm = { bold = true }, fg = 8371123 })
	hl(0, 'htmlH6', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'htmlItalic', { cterm = { italic = true }, italic = true })
	hl(0, 'htmlLink', { cterm = { underline = true }, underline = true })
	hl(0, 'htmlScriptTag', { link = "Purple" })
	hl(0, 'htmlSpecialTagName', { link = "RedItalic" })
	hl(0, 'htmlTSText', { link = "TSNone" })
	hl(0, 'htmlTag', { link = "Green" })
	hl(0, 'htmlTagN', { link = "OrangeItalic" })
	hl(0, 'htmlTagName', { link = "OrangeItalic" })
	hl(0, 'htmlUnderline', { cterm = { underline = true }, underline = true })
	hl(0, 'htmlUnderlineItalic', { cterm = { italic = true, underline = true }, italic = true, underline = true })
	hl(0, 'illuminatedWord', { link = "CurrentWord" })
	hl(0, 'javaAnnotation', { link = "Blue" })
	hl(0, 'javaClassDecl', { link = "RedItalic" })
	hl(0, 'javaMethodDecl', { link = "RedItalic" })
	hl(0, 'javaParen', { link = "Fg" })
	hl(0, 'javaParen1', { link = "Fg" })
	hl(0, 'javaParen2', { link = "Fg" })
	hl(0, 'javaParen3', { link = "Fg" })
	hl(0, 'javaParen4', { link = "Fg" })
	hl(0, 'javaParen5', { link = "Fg" })
	hl(0, 'javaScriptFunction', { link = "Keyword" })
	hl(0, 'javaScriptGlobal', { link = "Purple" })
	hl(0, 'javaScriptIdentifier', { link = "Orange" })
	hl(0, 'javaScriptMember', { link = "Aqua" })
	hl(0, 'javaScriptMessage', { link = "Yellow" })
	hl(0, 'javaScriptNull', { link = "Aqua" })
	hl(0, 'javaScriptNumber', { link = "Number" })
	hl(0, 'javaScriptOperator', { link = "Orange" })
	hl(0, 'javaTypedef', { link = "Aqua" })
	hl(0, 'javaUserLabel', { link = "Purple" })
	hl(0, 'javaVarArg', { link = "Green" })
	hl(0, 'javascriptTSInclude', { link = "Purple" })
	hl(0, 'jsonKeyword', { link = "Green" })
	hl(0, 'jsonQuote', { link = "Grey" })
	hl(0, 'jsonString', { link = "Fg" })
	hl(0, 'jsonTSLabel', { link = "jsonKeyword" })
	hl(0, 'jsonTSString', { link = "jsonString" })
	hl(0, 'jsonTSStringEscape', { link = "SpecialChar" })
	hl(0, 'lCursor', { link = "Cursor" })
	hl(0, 'lessAmpersandChar', { link = "Orange" })
	hl(0, 'lessClass', { link = "RedItalic" })
	hl(0, 'lessFunction', { link = "Yellow" })
	hl(0, 'lessMixinChar', { link = "Grey" })
	hl(0, 'lessVariable', { link = "Blue" })
	hl(0, 'lspInlayHintsParameter', { link = "LineNr" })
	hl(0, 'lspInlayHintsType', { link = "LineNr" })
	hl(0, 'lspReference', { link = "CurrentWord" })
	hl(0, 'luaBraces', { link = "Fg" })
	hl(0, 'luaComment', { link = "Comment" })
	hl(0, 'luaCommentDelimiter', { link = "luaComment" })
	hl(0, 'luaCond', { link = "Conditional" })
	hl(0, 'luaCondElse', { link = "Conditional" })
	hl(0, 'luaConstant', { link = "Constant" })
	hl(0, 'luaError', { link = "Error" })
	hl(0, 'luaFor', { link = "Repeat" })
	hl(0, 'luaFunc', { link = "Green" })
	hl(0, 'luaFunction', { link = "Aqua" })
	hl(0, 'luaIn', { link = "RedItalic" })
	hl(0, 'luaLabel', { link = "Label" })
	hl(0, 'luaMetaMethod', { link = "Function" })
	hl(0, 'luaNumber', { link = "Number" })
	hl(0, 'luaOperator', { link = "Operator" })
	hl(0, 'luaParenError', { link = "Error" })
	hl(0, 'luaRepeat', { link = "Repeat" })
	hl(0, 'luaSpecial', { link = "SpecialChar" })
	hl(0, 'luaStatement', { link = "Statement" })
	hl(0, 'luaString', { link = "String" })
	hl(0, 'luaString2', { link = "String" })
	hl(0, 'luaStringDelimiter', { link = "luaString" })
	hl(0, 'luaSymbolOperator', { link = "luaOperator" })
	hl(0, 'luaTSConstructor', { link = "luaBraces" })
	hl(0, 'luaTable', { link = "Fg" })
	hl(0, 'luaTodo', { link = "Todo" })
	hl(0, 'lualine_a_command', { bg = 8634514, bold = true, fg = 2962747 })
	hl(0, 'lualine_a_inactive', { bg = 3424068, fg = 8753801 })
	hl(0, 'lualine_a_insert', { bg = 13878954, bold = true, fg = 2962747 })
	hl(0, 'lualine_a_normal', { bg = 10993792, bold = true, fg = 2962747 })
	hl(0, 'lualine_a_replace', { bg = 15112309, bold = true, fg = 2962747 })
	hl(0, 'lualine_a_terminal', { bg = 14064054, bold = true, fg = 2962747 })
	hl(0, 'lualine_a_visual', { bg = 15105664, bold = true, fg = 2962747 })
	hl(0, 'lualine_b_command', { bg = 4674136, fg = 13878954 })
	hl(0, 'lualine_b_diagnostics_error_command', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diagnostics_error_inactive', { bg = 3424068, fg = 15105664 })
	hl(0, 'lualine_b_diagnostics_error_insert', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diagnostics_error_normal', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diagnostics_error_replace', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diagnostics_error_terminal', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diagnostics_error_visual', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diagnostics_hint_command', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diagnostics_hint_inactive', { bg = 3424068, fg = 10993792 })
	hl(0, 'lualine_b_diagnostics_hint_insert', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diagnostics_hint_normal', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diagnostics_hint_replace', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diagnostics_hint_terminal', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diagnostics_hint_visual', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diagnostics_info_command', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diagnostics_info_inactive', { bg = 3424068, fg = 8371123 })
	hl(0, 'lualine_b_diagnostics_info_insert', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diagnostics_info_normal', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diagnostics_info_replace', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diagnostics_info_terminal', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diagnostics_info_visual', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diagnostics_warn_command', { bg = 4674136, fg = 14400639 })
	hl(0, 'lualine_b_diagnostics_warn_inactive', { bg = 3424068, fg = 14400639 })
	hl(0, 'lualine_b_diagnostics_warn_insert', { bg = 4674136, fg = 14400639 })
	hl(0, 'lualine_b_diagnostics_warn_normal', { bg = 4674136, fg = 14400639 })
	hl(0, 'lualine_b_diagnostics_warn_replace', { bg = 4674136, fg = 14400639 })
	hl(0, 'lualine_b_diagnostics_warn_terminal', { bg = 4674136, fg = 14400639 })
	hl(0, 'lualine_b_diagnostics_warn_visual', { bg = 4674136, fg = 14400639 })
	hl(0, 'lualine_b_diff_added_command', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diff_added_inactive', { bg = 3424068, fg = 10993792 })
	hl(0, 'lualine_b_diff_added_insert', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diff_added_normal', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diff_added_replace', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diff_added_terminal', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diff_added_visual', { bg = 4674136, fg = 10993792 })
	hl(0, 'lualine_b_diff_modified_command', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diff_modified_inactive', { bg = 3424068, fg = 8371123 })
	hl(0, 'lualine_b_diff_modified_insert', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diff_modified_normal', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diff_modified_replace', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diff_modified_terminal', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diff_modified_visual', { bg = 4674136, fg = 8371123 })
	hl(0, 'lualine_b_diff_removed_command', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diff_removed_inactive', { bg = 3424068, fg = 15105664 })
	hl(0, 'lualine_b_diff_removed_insert', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diff_removed_normal', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diff_removed_replace', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diff_removed_terminal', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_diff_removed_visual', { bg = 4674136, fg = 15105664 })
	hl(0, 'lualine_b_inactive', { bg = 3424068, fg = 8753801 })
	hl(0, 'lualine_b_insert', { bg = 4674136, fg = 13878954 })
	hl(0, 'lualine_b_normal', { bg = 4674136, fg = 10332576 })
	hl(0, 'lualine_b_replace', { bg = 4674136, fg = 13878954 })
	hl(0, 'lualine_b_terminal', { bg = 4674136, fg = 13878954 })
	hl(0, 'lualine_b_visual', { bg = 4674136, fg = 13878954 })
	hl(0, 'lualine_c_command', { bg = 3424068, fg = 13878954 })
	hl(0, 'lualine_c_inactive', { bg = 3424068, fg = 8753801 })
	hl(0, 'lualine_c_insert', { bg = 3424068, fg = 13878954 })
	hl(0, 'lualine_c_normal', { bg = 3424068, fg = 8753801 })
	hl(0, 'lualine_c_replace', { bg = 3424068, fg = 13878954 })
	hl(0, 'lualine_c_terminal', { bg = 3424068, fg = 13878954 })
	hl(0, 'lualine_c_visual', { bg = 3424068, fg = 13878954 })
	hl(0, 'lualine_transitional_lualine_a_command_to_lualine_b_command', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_a_command_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_a_insert_to_lualine_b_insert', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_a_normal_to_lualine_b_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_a_normal_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_command_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_diff_added_command_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_diff_added_normal_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_insert_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_normal_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_command', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_inactive', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_insert', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_normal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_replace', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_terminal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_visual', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_command', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_inactive', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_insert', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_normal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_replace', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_terminal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_visual', vim.empty_dict())
	hl(0, 'makeCommands', { link = "Orange" })
	hl(0, 'makeIdent', { link = "Aqua" })
	hl(0, 'makeSpecTarget', { link = "Yellow" })
	hl(0, 'makeTarget', { link = "Blue" })
	hl(0, 'markdownBlockquote', { link = "Grey" })
	hl(0, 'markdownBold', { bold = true, cterm = { bold = true } })
	hl(0, 'markdownBoldDelimiter', { link = "Grey" })
	hl(0, 'markdownCode', { link = "Green" })
	hl(0, 'markdownCodeBlock', { link = "Aqua" })
	hl(0, 'markdownCodeDelimiter', { link = "Aqua" })
	hl(0, 'markdownH1', { bold = true, cterm = { bold = true }, fg = 15105664 })
	hl(0, 'markdownH2', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'markdownH3', { bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'markdownH4', { bold = true, cterm = { bold = true }, fg = 10993792 })
	hl(0, 'markdownH5', { bold = true, cterm = { bold = true }, fg = 8371123 })
	hl(0, 'markdownH6', { bold = true, cterm = { bold = true }, fg = 14064054 })
	hl(0, 'markdownHeadingDelimiter', { link = "Grey" })
	hl(0, 'markdownHeadingRule', { link = "Grey" })
	hl(0, 'markdownId', { link = "Yellow" })
	hl(0, 'markdownIdDeclaration', { link = "markdownLinkText" })
	hl(0, 'markdownItalic', { cterm = { italic = true }, italic = true })
	hl(0, 'markdownItalicDelimiter', { cterm = { italic = true }, fg = 8753801, italic = true })
	hl(0, 'markdownLinkDelimiter', { link = "Grey" })
	hl(0, 'markdownLinkText', { link = "Purple" })
	hl(0, 'markdownLinkTextDelimiter', { link = "Grey" })
	hl(0, 'markdownListMarker', { link = "Red" })
	hl(0, 'markdownOrderedListMarker', { link = "Red" })
	hl(0, 'markdownRule', { link = "Purple" })
	hl(0, 'markdownUrl', { cterm = { underline = true }, fg = 8371123, underline = true })
	hl(0, 'markdownUrlDelimiter', { link = "Grey" })
	hl(0, 'markdownUrlTitleDelimiter', { link = "Green" })
	hl(0, 'netrwClassify', { link = "Green" })
	hl(0, 'netrwCmdSep', { link = "Grey" })
	hl(0, 'netrwComment', { link = "Grey" })
	hl(0, 'netrwDir', { link = "Green" })
	hl(0, 'netrwExe', { link = "Yellow" })
	hl(0, 'netrwHelpCmd', { link = "Blue" })
	hl(0, 'netrwLink', { link = "Grey" })
	hl(0, 'netrwList', { link = "Aqua" })
	hl(0, 'netrwSymLink', { link = "Fg" })
	hl(0, 'netrwVersion', { link = "Orange" })
	hl(0, 'packerFail', { link = "Red" })
	hl(0, 'packerHash', { link = "Green" })
	hl(0, 'packerOutput', { link = "Orange" })
	hl(0, 'packerPackageName', { link = "Green" })
	hl(0, 'packerPackageNotLoaded', { link = "Grey" })
	hl(0, 'packerRelDate', { link = "Grey" })
	hl(0, 'packerStatusFail', { link = "Fg" })
	hl(0, 'packerStatusSuccess', { link = "Fg" })
	hl(0, 'packerString', { link = "Yellow" })
	hl(0, 'packerSuccess', { link = "Aqua" })
	hl(0, 'packerTimeHigh', { link = "Red" })
	hl(0, 'packerTimeLow', { link = "Green" })
	hl(0, 'packerTimeMedium', { link = "Yellow" })
	hl(0, 'packerTimeTrivial', { link = "Blue" })
	hl(0, 'packerWorking', { link = "Yellow" })
	hl(0, 'phpComparison', { link = "Orange" })
	hl(0, 'phpDefine', { link = "OrangeItalic" })
	hl(0, 'phpInterpSimpleCurly', { link = "Yellow" })
	hl(0, 'phpMemberSelector', { link = "Green" })
	hl(0, 'phpMethodsVar', { link = "Aqua" })
	hl(0, 'phpSpecialFunction', { link = "Green" })
	hl(0, 'phpStructure', { link = "RedItalic" })
	hl(0, 'phpVarSelector', { link = "Blue" })
	hl(0, 'plug1', { bold = true, cterm = { bold = true }, fg = 15112309 })
	hl(0, 'plug2', { link = "Green" })
	hl(0, 'plugBracket', { link = "Grey" })
	hl(0, 'plugDash', { link = "Orange" })
	hl(0, 'plugDeleted', { link = "Grey" })
	hl(0, 'plugEdge', { link = "Yellow" })
	hl(0, 'plugError', { link = "Red" })
	hl(0, 'plugH2', { link = "Orange" })
	hl(0, 'plugMessage', { link = "Orange" })
	hl(0, 'plugName', { link = "Aqua" })
	hl(0, 'plugNotLoaded', { link = "Grey" })
	hl(0, 'plugNumber', { bold = true, cterm = { bold = true }, fg = 14400639 })
	hl(0, 'plugRelDate', { link = "Grey" })
	hl(0, 'plugSha', { link = "Green" })
	hl(0, 'plugStar', { link = "Red" })
	hl(0, 'plugUpdate', { link = "Blue" })
	hl(0, 'pythonBuiltin', { link = "Yellow" })
	hl(0, 'pythonDecoratorName', { link = "Blue" })
	hl(0, 'pythonExceptions', { link = "Purple" })
	hl(0, 'qfFileName', vim.empty_dict())
	hl(0, 'qfLineNr', vim.empty_dict())
	hl(0, 'rainbowcol1', { fg = 15105664 })
	hl(0, 'rainbowcol2', { fg = 15112309 })
	hl(0, 'rainbowcol3', { fg = 14400639 })
	hl(0, 'rainbowcol4', { fg = 10993792 })
	hl(0, 'rainbowcol5', { fg = 8634514 })
	hl(0, 'rainbowcol6', { fg = 8371123 })
	hl(0, 'rainbowcol7', { fg = 14064054 })
	hl(0, 'rubyAccess', { link = "Orange" })
	hl(0, 'rubyAttribute', { link = "Yellow" })
	hl(0, 'rubyBlockParameterList', { link = "Blue" })
	hl(0, 'rubyDefine', { link = "RedItalic" })
	hl(0, 'rubyInterpolation', { link = "Yellow" })
	hl(0, 'rubyInterpolationDelimiter', { link = "Yellow" })
	hl(0, 'rubyKeywordAsMethod', { link = "Green" })
	hl(0, 'rubyMacro', { link = "RedItalic" })
	hl(0, 'rubyModuleName', { link = "Purple" })
	hl(0, 'rubyStringDelimiter', { link = "Green" })
	hl(0, 'rustAssert', { link = "Aqua" })
	hl(0, 'rustDeriveTrait', { link = "PurpleItalic" })
	hl(0, 'rustEnumVariant', { link = "Purple" })
	hl(0, 'rustIdentifier', { link = "Purple" })
	hl(0, 'rustMacroVariable', { link = "Blue" })
	hl(0, 'rustModPath', { link = "Orange" })
	hl(0, 'rustModPathSep', { link = "Grey" })
	hl(0, 'rustPanic', { link = "Aqua" })
	hl(0, 'rustPubScopeCrate', { link = "PurpleItalic" })
	hl(0, 'rustSelf', { link = "Blue" })
	hl(0, 'rustStructure', { link = "Orange" })
	hl(0, 'rustSuper', { link = "Blue" })
	hl(0, 'sassAmpersand', { link = "Orange" })
	hl(0, 'sassClass', { link = "RedItalic" })
	hl(0, 'sassClassChar', { link = "Red" })
	hl(0, 'sassControl', { link = "RedItalic" })
	hl(0, 'sassCssAttribute', { link = "Yellow" })
	hl(0, 'sassFor', { link = "RedItalic" })
	hl(0, 'sassFunction', { link = "Yellow" })
	hl(0, 'sassFunctionName', { link = "Green" })
	hl(0, 'sassInterpolationDelimiter', { link = "Green" })
	hl(0, 'sassMixinName', { link = "Orange" })
	hl(0, 'sassMixing', { link = "PurpleItalic" })
	hl(0, 'sassProperty', { link = "Aqua" })
	hl(0, 'scssAttribute', { link = "Orange" })
	hl(0, 'scssBoolean', { link = "Purple" })
	hl(0, 'scssForKeyword', { link = "PurpleItalic" })
	hl(0, 'scssFunctionName', { link = "Yellow" })
	hl(0, 'scssInterpolationDelimiter', { link = "Green" })
	hl(0, 'scssMixinName', { link = "Yellow" })
	hl(0, 'scssNull', { link = "Purple" })
	hl(0, 'scssSelectorChar', { link = "Red" })
	hl(0, 'scssSelectorName', { link = "RedItalic" })
	hl(0, 'scssVariableAssignment', { link = "Grey" })
	hl(0, 'scssVariableValue', { link = "Green" })
	hl(0, 'shCmdSubRegion', { link = "Green" })
	hl(0, 'shCommandSub', { link = "Orange" })
	hl(0, 'shFunctionKey', { link = "RedItalic" })
	hl(0, 'shFunctionOne', { link = "Green" })
	hl(0, 'shOperator', { link = "Orange" })
	hl(0, 'shOption', { link = "Aqua" })
	hl(0, 'shQuote', { link = "Green" })
	hl(0, 'shRange', { link = "Fg" })
	hl(0, 'shSet', { link = "Orange" })
	hl(0, 'shSetList', { link = "Blue" })
	hl(0, 'shSnglCase', { link = "Orange" })
	hl(0, 'shTestOpr', { link = "Orange" })
	hl(0, 'shVarAssign', { link = "Orange" })
	hl(0, 'shVariable', { link = "Blue" })
	hl(0, 'tomlKey', { link = "Green" })
	hl(0, 'tomlString', { link = "Fg" })
	hl(0, 'tomlTSProperty', { link = "tomlKey" })
	hl(0, 'tomlTSString', { link = "tomlString" })
	hl(0, 'tsxTSConstructor', { link = "TSType" })
	hl(0, 'typescriptTSInclude', { link = "Purple" })
	hl(0, 'vimAutoCmdSfxList', { link = "Aqua" })
	hl(0, 'vimContinue', { link = "Grey" })
	hl(0, 'vimFuncName', { link = "Green" })
	hl(0, 'vimFunction', { link = "Green" })
	hl(0, 'vimHiBang', { link = "Orange" })
	hl(0, 'vimIsCommand', { link = "Fg" })
	hl(0, 'vimLet', { link = "Orange" })
	hl(0, 'vimMap', { link = "PurpleItalic" })
	hl(0, 'vimMapLhs', { link = "Green" })
	hl(0, 'vimMapRhs', { link = "Green" })
	hl(0, 'vimNotation', { link = "Aqua" })
	hl(0, 'vimOption', { link = "Aqua" })
	hl(0, 'vimSet', { link = "Yellow" })
	hl(0, 'vimSetEqual', { link = "Yellow" })
	hl(0, 'vimSetSep', { link = "Grey" })
	hl(0, 'vimSynType', { link = "Orange" })
	hl(0, 'vimUserAttrb', { link = "Green" })
	hl(0, 'vimUserAttrbKey', { link = "Yellow" })
	hl(0, 'vimUserFunc', { link = "Green" })
	hl(0, 'xmlAttrib', { link = "Aqua" })
	hl(0, 'xmlCdataCdata', { link = "Purple" })
	hl(0, 'xmlCdataStart', { link = "Grey" })
	hl(0, 'xmlDocTypeDecl', { link = "Grey" })
	hl(0, 'xmlDocTypeKeyword', { link = "PurpleItalic" })
	hl(0, 'xmlEndTag', { link = "Blue" })
	hl(0, 'xmlEntity', { link = "Red" })
	hl(0, 'xmlEntityPunct', { link = "Red" })
	hl(0, 'xmlEqual', { link = "Orange" })
	hl(0, 'xmlTag', { link = "Green" })
	hl(0, 'xmlTagName', { link = "OrangeItalic" })
	hl(0, 'yamlBlockMappingKey', { link = "Green" })
	hl(0, 'yamlConstant', { link = "OrangeItalic" })
	hl(0, 'yamlKeyValueDelimiter', { link = "Grey" })
	hl(0, 'yamlString', { link = "Fg" })
	hl(0, 'yamlTSBoolean', { link = "yamlConstant" })
	hl(0, 'yamlTSConstBuiltin', { link = "yamlConstant" })
	hl(0, 'yamlTSField', { link = "yamlBlockMappingKey" })
	hl(0, 'yamlTSString', { link = "yamlString" })
	hl(0, 'yamlTSStringEscape', { link = "SpecialChar" })
	hl(0, 'zshDeref', { link = "Blue" })
	hl(0, 'zshFunction', { link = "Green" })
	hl(0, 'zshOptStart', { link = "PurpleItalic" })
	hl(0, 'zshOption', { link = "Blue" })
	hl(0, 'zshSubst', { link = "Yellow" })
	hl(0, 'zshTypes', { link = "Orange" })
	hl(0, 'zshVariableDef', { link = "Blue" })

	g.terminal_color_0 = "#d3c6aa"
	g.terminal_color_1 = "#e67e80"
	g.terminal_color_2 = "#a7c080"
	g.terminal_color_3 = "#dbbc7f"
	g.terminal_color_4 = "#7fbbb3"
	g.terminal_color_5 = "#d699b6"
	g.terminal_color_6 = "#83c092"
	g.terminal_color_7 = "#475258"
	g.terminal_color_8 = "#d3c6aa"
	g.terminal_color_9 = "#e67e80"
	g.terminal_color_10 = "#a7c080"
	g.terminal_color_11 = "#dbbc7f"
	g.terminal_color_12 = "#7fbbb3"
	g.terminal_color_13 = "#d699b6"
	g.terminal_color_14 = "#83c092"
	g.terminal_color_15 = "#475258"
else
	hl(0, '@annotation', { link = "TSAnnotation" })
	hl(0, '@attribute', { link = "TSAttribute" })
	hl(0, '@boolean', { link = "TSBoolean" })
	hl(0, '@boolean.yaml', { link = "yamlTSBoolean" })
	hl(0, '@character', { link = "TSCharacter" })
	hl(0, '@character.special', { link = "TSCharacterSpecial" })
	hl(0, '@comment', { link = "TSComment" })
	hl(0, '@conceal', { link = "Grey" })
	hl(0, '@conditional', { link = "TSConditional" })
	hl(0, '@constant', { link = "TSConstant" })
	hl(0, '@constant.builtin', { link = "TSConstBuiltin" })
	hl(0, '@constant.builtin.go', { link = "goTSConstBuiltin" })
	hl(0, '@constant.builtin.yaml', { link = "yamlTSConstBuiltin" })
	hl(0, '@constant.macro', { link = "TSConstMacro" })
	hl(0, '@constant.regex', { link = "TSConstBuiltin" })
	hl(0, '@constructor', { link = "TSConstructor" })
	hl(0, '@constructor.lua', { link = "luaTSConstructor" })
	hl(0, '@constructor.tsx', { link = "tsxTSConstructor" })
	hl(0, '@debug', { link = "TSDebug" })
	hl(0, '@define', { link = "TSDefine" })
	hl(0, '@error', { link = "TSError" })
	hl(0, '@exception', { link = "TSException" })
	hl(0, '@field', { link = "TSField" })
	hl(0, '@field.yaml', { link = "yamlTSField" })
	hl(0, '@float', { link = "TSFloat" })
	hl(0, '@function', { link = "TSFunction" })
	hl(0, '@function.builtin', { link = "TSFuncBuiltin" })
	hl(0, '@function.call', { link = "TSFunctionCall" })
	hl(0, '@function.macro', { link = "TSFuncMacro" })
	hl(0, '@ibl.indent.char.1', { cterm = { nocombine = true }, fg = 14736583, nocombine = true })
	hl(0, '@ibl.scope.char.1', { cterm = { nocombine = true }, fg = 9674641, nocombine = true })
	hl(0, '@ibl.scope.underline.1', { cterm = { underline = true }, sp = 9674641, underline = true })
	hl(0, '@ibl.whitespace.char.1', { cterm = { nocombine = true }, fg = 14736583, nocombine = true })
	hl(0, '@include', { link = "TSInclude" })
	hl(0, '@include.go', { link = "goTSInclude" })
	hl(0, '@include.javascript', { link = "javascriptTSInclude" })
	hl(0, '@include.typescript', { link = "typescriptTSInclude" })
	hl(0, '@keyword', { link = "TSKeyword" })
	hl(0, '@keyword.function', { link = "TSKeywordFunction" })
	hl(0, '@keyword.luap', vim.empty_dict())
	hl(0, '@keyword.operator', { link = "TSKeywordOperator" })
	hl(0, '@keyword.return', { link = "TSKeywordReturn" })
	hl(0, '@label', { link = "TSLabel" })
	hl(0, '@label.json', { link = "jsonTSLabel" })
	hl(0, '@lsp.mod.readonly', vim.empty_dict())
	hl(0, '@lsp.mod.typeHint', vim.empty_dict())
	hl(0, '@lsp.type.boolean', { link = "@boolean" })
	hl(0, '@lsp.type.builtinConstant', { link = "@constant.builtin" })
	hl(0, '@lsp.type.builtinType', { link = "@type.builtin" })
	hl(0, '@lsp.type.class', { link = "@type" })
	hl(0, '@lsp.type.comment', { link = "@comment" })
	hl(0, '@lsp.type.decorator', { link = "@function" })
	hl(0, '@lsp.type.derive', { link = "@constructor" })
	hl(0, '@lsp.type.deriveHelper', { link = "@attribute" })
	hl(0, '@lsp.type.enum', { link = "@type" })
	hl(0, '@lsp.type.enumMember', { link = "@property" })
	hl(0, '@lsp.type.escapeSequence', { link = "@string.escape" })
	hl(0, '@lsp.type.formatSpecifier', { link = "@punctuation.special" })
	hl(0, '@lsp.type.function', { link = "@function" })
	hl(0, '@lsp.type.generic', { link = "@text" })
	hl(0, '@lsp.type.interface', { link = "@type" })
	hl(0, '@lsp.type.keyword', { link = "@keyword" })
	hl(0, '@lsp.type.lifetime', { link = "@storageclass.lifetime" })
	hl(0, '@lsp.type.macro', { link = "@constant.macro" })
	hl(0, '@lsp.type.magicFunction', { link = "@function.builtin" })
	hl(0, '@lsp.type.method', { link = "@method" })
	hl(0, '@lsp.type.modifier', { link = "@type.qualifier" })
	hl(0, '@lsp.type.namespace', { link = "@namespace" })
	hl(0, '@lsp.type.namespace.go', { link = "@namespace.go" })
	hl(0, '@lsp.type.number', { link = "@number" })
	hl(0, '@lsp.type.operator', { link = "@operator" })
	hl(0, '@lsp.type.parameter', { link = "@parameter" })
	hl(0, '@lsp.type.property', { link = "@property" })
	hl(0, '@lsp.type.regexp', { link = "@string.regex" })
	hl(0, '@lsp.type.selfKeyword', { link = "@variable.builtin" })
	hl(0, '@lsp.type.selfParameter', vim.empty_dict())
	hl(0, '@lsp.type.selfTypeKeyword', { link = "@type" })
	hl(0, '@lsp.type.string', { link = "@string" })
	hl(0, '@lsp.type.struct', { link = "@type" })
	hl(0, '@lsp.type.type', { link = "@type" })
	hl(0, '@lsp.type.typeAlias', { link = "@type.definition" })
	hl(0, '@lsp.type.typeParameter', { link = "@type.definition" })
	hl(0, '@lsp.type.variable', { link = "@variable" })
	hl(0, '@lsp.typemod.class.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.enum.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.enumMember.defaultLibrary', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.function.builtin', vim.empty_dict())
	hl(0, '@lsp.typemod.function.defaultLibrary', { link = "@function.builtin" })
	hl(0, '@lsp.typemod.function.readonly', { link = "@method" })
	hl(0, '@lsp.typemod.keyword.async', { link = "@keyword" })
	hl(0, '@lsp.typemod.keyword.documentation', vim.empty_dict())
	hl(0, '@lsp.typemod.keyword.injected', { link = "@keyword" })
	hl(0, '@lsp.typemod.macro.defaultLibrary', { link = "@function.builtin" })
	hl(0, '@lsp.typemod.method.defaultLibrary', { link = "@function.builtin" })
	hl(0, '@lsp.typemod.method.readonly', { link = "@method" })
	hl(0, '@lsp.typemod.operator.controlFlow', vim.empty_dict())
	hl(0, '@lsp.typemod.operator.injected', { link = "@operator" })
	hl(0, '@lsp.typemod.string.injected', { link = "@string" })
	hl(0, '@lsp.typemod.struct.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.type.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.typeAlias.defaultLibrary', { link = "@type.builtin" })
	hl(0, '@lsp.typemod.variable.callable', { link = "@function" })
	hl(0, '@lsp.typemod.variable.constant.rust', { link = "@constant" })
	hl(0, '@lsp.typemod.variable.defaultLibrary', { link = "@variable.builtin" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.go', { link = "@constant.builtin.go" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.javascript', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.javascriptreact', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.typescript', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.variable.defaultLibrary.typescriptreact', { link = "@constant.builtin" })
	hl(0, '@lsp.typemod.variable.global', vim.empty_dict())
	hl(0, '@lsp.typemod.variable.injected', { link = "@variable" })
	hl(0, '@lsp.typemod.variable.static', { link = "Red" })
	hl(0, '@macro', { link = "Macro" })
	hl(0, '@math', { link = "TSMath" })
	hl(0, '@method', { link = "TSMethod" })
	hl(0, '@method.call', { link = "TSMethodCall" })
	hl(0, '@namespace', { link = "TSNamespace" })
	hl(0, '@namespace.go', { link = "goTSNamespace" })
	hl(0, '@none', { link = "TSNone" })
	hl(0, '@number', { link = "TSNumber" })
	hl(0, '@operator', { link = "TSOperator" })
	hl(0, '@parameter', { link = "TSParameter" })
	hl(0, '@parameter.reference', { link = "TSParameterReference" })
	hl(0, '@preproc', { link = "TSPreProc" })
	hl(0, '@property', { link = "TSProperty" })
	hl(0, '@property.toml', { link = "tomlTSProperty" })
	hl(0, '@punctuation', { link = "Delimiter" })
	hl(0, '@punctuation.bracket', { link = "TSPunctBracket" })
	hl(0, '@punctuation.bracket.regex', { link = "TSStringRegex" })
	hl(0, '@punctuation.delimiter', { link = "TSPunctDelimiter" })
	hl(0, '@punctuation.special', { link = "TSPunctSpecial" })
	hl(0, '@repeat', { link = "TSRepeat" })
	hl(0, '@storageclass', { link = "TSStorageClass" })
	hl(0, '@storageclass.lifetime', { link = "TSStorageClassLifetime" })
	hl(0, '@strike', { link = "TSStrike" })
	hl(0, '@string', { link = "TSString" })
	hl(0, '@string.escape', { link = "TSStringEscape" })
	hl(0, '@string.escape.yaml', { link = "yamlTSStringEscape" })
	hl(0, '@string.json', { link = "jsonTSString" })
	hl(0, '@string.regex', { link = "TSStringRegex" })
	hl(0, '@string.special', { link = "TSStringSpecial" })
	hl(0, '@string.toml', { link = "tomlTSString" })
	hl(0, '@string.yaml', { link = "yamlTSString" })
	hl(0, '@symbol', { link = "TSSymbol" })
	hl(0, '@tag', { link = "TSTag" })
	hl(0, '@tag.attribute', { link = "TSTagAttribute" })
	hl(0, '@tag.delimiter', { link = "TSTagDelimiter" })
	hl(0, '@text', { link = "TSText" })
	hl(0, '@text.danger', { link = "TSDanger" })
	hl(0, '@text.diff.add', { link = "diffAdded" })
	hl(0, '@text.diff.delete', { link = "diffRemoved" })
	hl(0, '@text.emphasis', { link = "TSEmphasis" })
	hl(0, '@text.environment', { link = "TSEnvironment" })
	hl(0, '@text.environment.name', { link = "TSEnvironmentName" })
	hl(0, '@text.gitcommit', { link = "TSNone" })
	hl(0, '@text.html', { link = "htmlTSText" })
	hl(0, '@text.literal', { link = "TSLiteral" })
	hl(0, '@text.math', { link = "TSMath" })
	hl(0, '@text.note', { link = "TSNote" })
	hl(0, '@text.quote', vim.empty_dict())
	hl(0, '@text.reference', { link = "TSTextReference" })
	hl(0, '@text.strike', { link = "TSStrike" })
	hl(0, '@text.strong', { link = "TSStrong" })
	hl(0, '@text.title', { link = "TSTitle" })
	hl(0, '@text.todo', { link = "TSTodo" })
	hl(0, '@text.todo.checked', { link = "Green" })
	hl(0, '@text.todo.unchecked', { link = "Ignore" })
	hl(0, '@text.underline', { link = "TSUnderline" })
	hl(0, '@text.uri', { link = "TSURI" })
	hl(0, '@text.warning', { link = "TSWarning" })
	hl(0, '@todo', { link = "TSTodo" })
	hl(0, '@type', { link = "TSType" })
	hl(0, '@type.builtin', { link = "TSTypeBuiltin" })
	hl(0, '@type.definition', { link = "TSTypeDefinition" })
	hl(0, '@type.qualifier', { link = "TSTypeQualifier" })
	hl(0, '@uri', { link = "TSURI" })
	hl(0, '@variable', { link = "TSVariable" })
	hl(0, '@variable.builtin', { link = "TSVariableBuiltin" })
	hl(0, 'ALEError', { link = "ErrorText" })
	hl(0, 'ALEErrorLine', { link = "ErrorLine" })
	hl(0, 'ALEErrorSign', { link = "RedSign" })
	hl(0, 'ALEInfo', { link = "InfoText" })
	hl(0, 'ALEInfoLine', { link = "InfoLine" })
	hl(0, 'ALEInfoSign', { link = "BlueSign" })
	hl(0, 'ALEVirtualTextError', { link = "VirtualTextError" })
	hl(0, 'ALEVirtualTextInfo', { link = "VirtualTextInfo" })
	hl(0, 'ALEVirtualTextStyleError', { link = "VirtualTextHint" })
	hl(0, 'ALEVirtualTextStyleWarning', { link = "VirtualTextHint" })
	hl(0, 'ALEVirtualTextWarning', { link = "VirtualTextWarning" })
	hl(0, 'ALEWarning', { link = "WarningText" })
	hl(0, 'ALEWarningLine', { link = "WarningLine" })
	hl(0, 'ALEWarningSign', { link = "YellowSign" })
	hl(0, 'AerialArrayIcon', { link = "Aqua" })
	hl(0, 'AerialBooleanIcon', { link = "Aqua" })
	hl(0, 'AerialClassIcon', { link = "Red" })
	hl(0, 'AerialConstantIcon', { link = "Blue" })
	hl(0, 'AerialConstructorIcon', { link = "Green" })
	hl(0, 'AerialEnumIcon', { link = "Yellow" })
	hl(0, 'AerialEnumMemberIcon', { link = "Aqua" })
	hl(0, 'AerialEventIcon', { link = "Orange" })
	hl(0, 'AerialFieldIcon', { link = "Green" })
	hl(0, 'AerialFileIcon', { link = "Green" })
	hl(0, 'AerialFunctionIcon', { link = "Green" })
	hl(0, 'AerialGuide', { link = "LineNr" })
	hl(0, 'AerialInterfaceIcon', { link = "Yellow" })
	hl(0, 'AerialKeyIcon', { link = "Red" })
	hl(0, 'AerialLine', { link = "CursorLine" })
	hl(0, 'AerialMethodIcon', { link = "Green" })
	hl(0, 'AerialModuleIcon', { link = "Purple" })
	hl(0, 'AerialNamespaceIcon', { link = "Purple" })
	hl(0, 'AerialNullIcon', { link = "Aqua" })
	hl(0, 'AerialNumberIcon', { link = "Aqua" })
	hl(0, 'AerialObjectIcon', { link = "Aqua" })
	hl(0, 'AerialOperatorIcon', { link = "Orange" })
	hl(0, 'AerialPackageIcon', { link = "Purple" })
	hl(0, 'AerialPropertyIcon', { link = "Blue" })
	hl(0, 'AerialStringIcon', { link = "Aqua" })
	hl(0, 'AerialStructIcon', { link = "Yellow" })
	hl(0, 'AerialTypeParameterIcon', { link = "Yellow" })
	hl(0, 'AerialVariableIcon', { link = "Blue" })
	hl(0, 'Aqua', { fg = 3516284 })
	hl(0, 'AquaBold', { bold = true, cterm = { bold = true }, fg = 3516284 })
	hl(0, 'AquaItalic', { fg = 3516284 })
	hl(0, 'AquaSign', { fg = 3516284 })
	hl(0, 'Blamer', { link = "Grey" })
	hl(0, 'Blue', { fg = 3839173 })
	hl(0, 'BlueBold', { bold = true, cterm = { bold = true }, fg = 3839173 })
	hl(0, 'BlueItalic', { fg = 3839173 })
	hl(0, 'BlueSign', { fg = 3839173 })
	hl(0, 'BookmarkAnnotationLine', { link = "DiffAdd" })
	hl(0, 'BookmarkAnnotationSign', { link = "GreenSign" })
	hl(0, 'BookmarkLine', { link = "DiffChange" })
	hl(0, 'BookmarkSign', { link = "BlueSign" })
	hl(0, 'Boolean', { fg = 14641594 })
	hl(0, 'BufTabLineActive', { link = "TabLine" })
	hl(0, 'BufTabLineCurrent', { link = "TabLineSel" })
	hl(0, 'BufTabLineFill', { link = "TabLineFill" })
	hl(0, 'BufTabLineHidden', { link = "TabLineFill" })
	hl(0, 'BufferCurrent', { bg = 16643811, fg = 6056562 })
	hl(0, 'BufferCurrentIndex', { bg = 16643811, fg = 6056562 })
	hl(0, 'BufferCurrentMod', { bg = 16643811, fg = 3839173 })
	hl(0, 'BufferCurrentSign', { bg = 16643811, fg = 9679449 })
	hl(0, 'BufferCurrentTarget', { bg = 16643811, bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'BufferInactive', { bg = 15723476, fg = 9674641 })
	hl(0, 'BufferInactiveIndex', { bg = 15723476, fg = 9674641 })
	hl(0, 'BufferInactiveMod', { bg = 15723476, fg = 9674641 })
	hl(0, 'BufferInactiveSign', { bg = 15723476, fg = 10924192 })
	hl(0, 'BufferInactiveTarget', { bg = 15723476, bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'BufferLineBackground', { bg = 14604487, default = true, fg = 9674641 })
	hl(0, 'BufferLineBuffer', { bg = 14604487, default = true, fg = 9674641 })
	hl(0, 'BufferLineBufferSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 6056562, italic = true })
	hl(0, 'BufferLineBufferVisible', { bg = 15262416, default = true, fg = 9674641 })
	hl(0, 'BufferLineCloseButton', { bg = 14604487, default = true, fg = 9674641 })
	hl(0, 'BufferLineCloseButtonSelected', { bg = 16643811, default = true, fg = 6056562 })
	hl(0, 'BufferLineCloseButtonVisible', { bg = 15262416, default = true, fg = 9674641 })
	hl(0, 'BufferLineDiagnostic', { bg = 14604487, default = true, fg = 8489855 })
	hl(0, 'BufferLineDiagnosticSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 5266788, italic = true })
	hl(0, 'BufferLineDiagnosticVisible', { bg = 15262416, default = true, fg = 8489855 })
	hl(0, 'BufferLineDuplicate', { bg = 14604487, cterm = { italic = true }, default = true, fg = 9148297, italic = true })
	hl(0, 'BufferLineDuplicateSelected', { bg = 16643811, cterm = { italic = true }, default = true, fg = 9148297, italic = true })
	hl(0, 'BufferLineDuplicateVisible', { bg = 15262416, cterm = { italic = true }, default = true, fg = 9148297, italic = true })
	hl(0, 'BufferLineError', { bg = 14604487, default = true, fg = 9674641, sp = 16274770 })
	hl(0, 'BufferLineErrorDiagnostic', { bg = 14604487, default = true, fg = 8489855, sp = 14305864 })
	hl(0, 'BufferLineErrorDiagnosticSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 14305864, italic = true, sp = 14305864 })
	hl(0, 'BufferLineErrorDiagnosticVisible', { bg = 15262416, default = true, fg = 8489855 })
	hl(0, 'BufferLineErrorSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 16274770, italic = true, sp = 16274770 })
	hl(0, 'BufferLineErrorVisible', { bg = 15262416, default = true, fg = 9674641 })
	hl(0, 'BufferLineFill', { bg = 13288629, default = true, fg = 9674641 })
	hl(0, 'BufferLineGroupLabel', { bg = 9674641, default = true, fg = 13288629 })
	hl(0, 'BufferLineGroupSeparator', { bg = 13288629, default = true, fg = 9674641 })
	hl(0, 'BufferLineHint', { bg = 14604487, default = true, fg = 9674641, sp = 9281793 })
	hl(0, 'BufferLineHintDiagnostic', { bg = 14604487, default = true, fg = 8489855, sp = 8162560 })
	hl(0, 'BufferLineHintDiagnosticSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 8162560, italic = true, sp = 8162560 })
	hl(0, 'BufferLineHintDiagnosticVisible', { bg = 15262416, default = true, fg = 8489855 })
	hl(0, 'BufferLineHintSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 9281793, italic = true, sp = 9281793 })
	hl(0, 'BufferLineHintVisible', { bg = 15262416, default = true, fg = 9674641 })
	hl(0, 'BufferLineIndicatorSelected', { link = "GreenSign" })
	hl(0, 'BufferLineIndicatorVisible', { bg = 15262416, default = true, fg = 15262416 })
	hl(0, 'BufferLineInfo', { bg = 14604487, default = true, fg = 9674641, sp = 3839173 })
	hl(0, 'BufferLineInfoDiagnostic', { bg = 14604487, default = true, fg = 8489855, sp = 3375789 })
	hl(0, 'BufferLineInfoDiagnosticSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 3375789, italic = true, sp = 3375789 })
	hl(0, 'BufferLineInfoDiagnosticVisible', { bg = 15262416, default = true, fg = 8489855 })
	hl(0, 'BufferLineInfoSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 3839173, italic = true, sp = 3839173 })
	hl(0, 'BufferLineInfoVisible', { bg = 15262416, default = true, fg = 9674641 })
	hl(0, 'BufferLineModified', { bg = 14604487, default = true, fg = 9281793 })
	hl(0, 'BufferLineModifiedSelected', { bg = 16643811, default = true, fg = 9281793 })
	hl(0, 'BufferLineModifiedVisible', { bg = 15262416, default = true, fg = 9281793 })
	hl(0, 'BufferLineNumbers', { bg = 14604487, default = true, fg = 9674641 })
	hl(0, 'BufferLineNumbersSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 6056562, italic = true })
	hl(0, 'BufferLineNumbersVisible', { bg = 15262416, default = true, fg = 9674641 })
	hl(0, 'BufferLineOffsetSeparator', { bg = 13288629, default = true, fg = 14736583 })
	hl(0, 'BufferLinePick', { bg = 14604487, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 16274770, italic = true })
	hl(0, 'BufferLinePickSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 16274770, italic = true })
	hl(0, 'BufferLinePickVisible', { bg = 15262416, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 16274770, italic = true })
	hl(0, 'BufferLineSeparator', { bg = 14604487, default = true, fg = 13288629 })
	hl(0, 'BufferLineSeparatorSelected', { bg = 16643811, default = true, fg = 13288629 })
	hl(0, 'BufferLineSeparatorVisible', { bg = 15262416, default = true, fg = 13288629 })
	hl(0, 'BufferLineTab', { bg = 14604487, default = true, fg = 9674641 })
	hl(0, 'BufferLineTabClose', { bg = 14604487, default = true, fg = 9674641 })
	hl(0, 'BufferLineTabSelected', { bg = 16643811, default = true, fg = 9679449 })
	hl(0, 'BufferLineTabSeparator', { bg = 14604487, default = true, fg = 13288629 })
	hl(0, 'BufferLineTabSeparatorSelected', { bg = 16643811, default = true, fg = 13288629 })
	hl(0, 'BufferLineTruncMarker', { bg = 13288629, default = true, fg = 9674641 })
	hl(0, 'BufferLineWarning', { bg = 14604487, default = true, fg = 9674641, sp = 14655488 })
	hl(0, 'BufferLineWarningDiagnostic', { bg = 14604487, default = true, fg = 8489855, sp = 12880896 })
	hl(0, 'BufferLineWarningDiagnosticSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 12880896, italic = true, sp = 12880896 })
	hl(0, 'BufferLineWarningDiagnosticVisible', { bg = 15262416, default = true, fg = 8489855 })
	hl(0, 'BufferLineWarningSelected', { bg = 16643811, bold = true, cterm = { bold = true, italic = true }, default = true, fg = 14655488, italic = true, sp = 14655488 })
	hl(0, 'BufferLineWarningVisible', { bg = 15262416, default = true, fg = 9674641 })
	hl(0, 'BufferTabpageFill', { bg = 15723476, fg = 15723476 })
	hl(0, 'BufferTabpages', { bg = 15723476, bold = true, cterm = { bold = true }, fg = 9674641 })
	hl(0, 'BufferVisible', { bg = 15723476, fg = 6056562 })
	hl(0, 'BufferVisibleIndex', { bg = 15723476, fg = 6056562 })
	hl(0, 'BufferVisibleMod', { bg = 15723476, fg = 3839173 })
	hl(0, 'BufferVisibleSign', { bg = 15723476, fg = 9679449 })
	hl(0, 'BufferVisibleTarget', { bg = 15723476, bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'Character', { fg = 9281793 })
	hl(0, 'ClapBlines', { fg = 6056562 })
	hl(0, 'ClapBlinesLineNr', { link = "Grey" })
	hl(0, 'ClapCurrentSelection', { bg = 16052441, bold = true, cterm = { bold = true } })
	hl(0, 'ClapDisplay', { link = "Pmenu" })
	hl(0, 'ClapFile', { link = "Fg" })
	hl(0, 'ClapFuzzyMatches', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'ClapFuzzyMatches1', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches10', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches11', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches12', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches2', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches3', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches4', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches5', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches6', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches7', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches8', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapFuzzyMatches9', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapInput', { link = "Pmenu" })
	hl(0, 'ClapMatches1', { bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'ClapMatches2', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'ClapMatches3', { bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'ClapMatches4', { bold = true, cterm = { bold = true }, fg = 3516284 })
	hl(0, 'ClapMatches5', { bold = true, cterm = { bold = true }, fg = 3839173 })
	hl(0, 'ClapMatches6', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'ClapNoMatchesFound', { bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'ClapPreview', { link = "Pmenu" })
	hl(0, 'ClapProviderAbout', { link = "ClapBlines" })
	hl(0, 'ClapProviderColon', { link = "ClapBlines" })
	hl(0, 'ClapProviderId', { bold = true, cterm = { bold = true }, fg = 6056562 })
	hl(0, 'ClapSearchText', { link = "ClapFuzzyMatches" })
	hl(0, 'ClapSelected', { bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'ClapSpinner', { bg = 15723476, bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'CleverFDefaultLabel', { link = "Search" })
	hl(0, 'CmpCompletion', vim.empty_dict())
	hl(0, 'CmpCompletionSbar', vim.empty_dict())
	hl(0, 'CmpCompletionThumb', vim.empty_dict())
	hl(0, 'CmpDocumentation', vim.empty_dict())
	hl(0, 'CmpDocumentationBorder', vim.empty_dict())
	hl(0, 'CmpItemAbbr', { link = "Fg" })
	hl(0, 'CmpItemAbbrDefault', { fg = 6056562 })
	hl(0, 'CmpItemAbbrDeprecated', { link = "Grey" })
	hl(0, 'CmpItemAbbrDeprecatedDefault', { fg = 9674641 })
	hl(0, 'CmpItemAbbrMatch', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'CmpItemAbbrMatchDefault', { fg = 6056562 })
	hl(0, 'CmpItemAbbrMatchFuzzy', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'CmpItemAbbrMatchFuzzyDefault', { fg = 6056562 })
	hl(0, 'CmpItemKind', { link = "Yellow" })
	hl(0, 'CmpItemKindClass', { link = "Yellow" })
	hl(0, 'CmpItemKindClassDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindColor', { link = "Aqua" })
	hl(0, 'CmpItemKindColorDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindConstant', { link = "Blue" })
	hl(0, 'CmpItemKindConstantDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindConstructor', { link = "Green" })
	hl(0, 'CmpItemKindConstructorDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindCopilot', vim.empty_dict())
	hl(0, 'CmpItemKindDefault', { fg = 14655488 })
	hl(0, 'CmpItemKindEnum', { link = "Yellow" })
	hl(0, 'CmpItemKindEnumDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindEnumMember', { link = "Purple" })
	hl(0, 'CmpItemKindEnumMemberDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindEvent', { link = "Orange" })
	hl(0, 'CmpItemKindEventDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindField', { link = "Green" })
	hl(0, 'CmpItemKindFieldDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindFile', { link = "Aqua" })
	hl(0, 'CmpItemKindFileDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindFolder', { link = "Aqua" })
	hl(0, 'CmpItemKindFolderDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindFunction', { link = "Green" })
	hl(0, 'CmpItemKindFunctionDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindInterface', { link = "Yellow" })
	hl(0, 'CmpItemKindInterfaceDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindKeyword', { link = "Red" })
	hl(0, 'CmpItemKindKeywordDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindMethod', { link = "Green" })
	hl(0, 'CmpItemKindMethodDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindModule', { link = "Yellow" })
	hl(0, 'CmpItemKindModuleDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindOperator', { link = "Orange" })
	hl(0, 'CmpItemKindOperatorDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindProperty', { link = "Blue" })
	hl(0, 'CmpItemKindPropertyDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindReference', { link = "Aqua" })
	hl(0, 'CmpItemKindReferenceDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindSnippet', { link = "Aqua" })
	hl(0, 'CmpItemKindSnippetDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindStruct', { link = "Yellow" })
	hl(0, 'CmpItemKindStructDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindText', { link = "Fg" })
	hl(0, 'CmpItemKindTextDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindTypeParameter', { link = "Yellow" })
	hl(0, 'CmpItemKindTypeParameterDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindUnit', { link = "Purple" })
	hl(0, 'CmpItemKindUnitDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindValue', { link = "Purple" })
	hl(0, 'CmpItemKindValueDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemKindVariable', { link = "Blue" })
	hl(0, 'CmpItemKindVariableDefault', { link = "CmpItemKind" })
	hl(0, 'CmpItemMenu', { link = "Fg" })
	hl(0, 'CmpItemMenuDefault', { fg = 6056562 })
	hl(0, 'CocCodeLens', { link = "Grey" })
	hl(0, 'CocDisabled', { link = "Grey" })
	hl(0, 'CocErrorFloat', { link = "ErrorFloat" })
	hl(0, 'CocErrorHighlight', { link = "ErrorText" })
	hl(0, 'CocErrorLine', { link = "ErrorLine" })
	hl(0, 'CocErrorSign', { link = "RedSign" })
	hl(0, 'CocErrorVirtualText', { link = "VirtualTextError" })
	hl(0, 'CocExplorerBufferBufname', { link = "Grey" })
	hl(0, 'CocExplorerBufferBufnr', { link = "Purple" })
	hl(0, 'CocExplorerBufferExpandIcon', { link = "Aqua" })
	hl(0, 'CocExplorerBufferFullpath', { link = "Grey" })
	hl(0, 'CocExplorerBufferModified', { link = "Yellow" })
	hl(0, 'CocExplorerBufferReadonly', { link = "Red" })
	hl(0, 'CocExplorerBufferRoot', { link = "Orange" })
	hl(0, 'CocExplorerDiagnosticError', { link = "Red" })
	hl(0, 'CocExplorerDiagnosticWarning', { link = "Yellow" })
	hl(0, 'CocExplorerFileDirectory', { link = "Green" })
	hl(0, 'CocExplorerFileExpandIcon', { link = "Aqua" })
	hl(0, 'CocExplorerFileFullpath', { link = "Grey" })
	hl(0, 'CocExplorerFileGitRootStaged', { link = "Purple" })
	hl(0, 'CocExplorerFileGitRootUnstaged', { link = "Yellow" })
	hl(0, 'CocExplorerFileGitStaged', { link = "Purple" })
	hl(0, 'CocExplorerFileGitUnstaged', { link = "Yellow" })
	hl(0, 'CocExplorerFileHidden', { link = "Grey" })
	hl(0, 'CocExplorerFileRoot', { link = "Orange" })
	hl(0, 'CocExplorerFileRootName', { link = "Green" })
	hl(0, 'CocExplorerFileSize', { link = "Blue" })
	hl(0, 'CocExplorerGitAdded', { link = "Green" })
	hl(0, 'CocExplorerGitContentChange', { link = "Fg" })
	hl(0, 'CocExplorerGitCopied', { link = "Fg" })
	hl(0, 'CocExplorerGitDeleted', { link = "Red" })
	hl(0, 'CocExplorerGitIgnored', { link = "Grey" })
	hl(0, 'CocExplorerGitMixed', { link = "Aqua" })
	hl(0, 'CocExplorerGitModified', { link = "Yellow" })
	hl(0, 'CocExplorerGitPathChange', { link = "Fg" })
	hl(0, 'CocExplorerGitRenamed', { link = "Purple" })
	hl(0, 'CocExplorerGitUnmerged', { link = "Orange" })
	hl(0, 'CocExplorerGitUnmodified', { link = "Fg" })
	hl(0, 'CocExplorerGitUntracked', { link = "Blue" })
	hl(0, 'CocExplorerHelpDescription', { link = "Grey" })
	hl(0, 'CocExplorerHelpHint', { link = "Grey" })
	hl(0, 'CocExplorerIndentLine', { link = "Conceal" })
	hl(0, 'CocExplorerTimeAccessed', { link = "Aqua" })
	hl(0, 'CocExplorerTimeCreated', { link = "Aqua" })
	hl(0, 'CocExplorerTimeModified', { link = "Aqua" })
	hl(0, 'CocFadeOut', { link = "Grey" })
	hl(0, 'CocFloatDividingLine', { link = "Grey" })
	hl(0, 'CocFloating', { link = "NormalFloat" })
	hl(0, 'CocGitAddedSign', { link = "GreenSign" })
	hl(0, 'CocGitChangeRemovedSign', { link = "PurpleSign" })
	hl(0, 'CocGitChangedSign', { link = "BlueSign" })
	hl(0, 'CocGitRemovedSign', { link = "RedSign" })
	hl(0, 'CocGitTopRemovedSign', { link = "RedSign" })
	hl(0, 'CocHighlightText', { link = "CurrentWord" })
	hl(0, 'CocHintFloat', { link = "HintFloat" })
	hl(0, 'CocHintHighlight', { link = "HintText" })
	hl(0, 'CocHintLine', { link = "HintLine" })
	hl(0, 'CocHintSign', { link = "GreenSign" })
	hl(0, 'CocHintVirtualText', { link = "VirtualTextHint" })
	hl(0, 'CocHoverRange', { bold = true, cterm = { bold = true, underline = true }, underline = true })
	hl(0, 'CocInfoFloat', { link = "InfoFloat" })
	hl(0, 'CocInfoHighlight', { link = "InfoText" })
	hl(0, 'CocInfoLine', { link = "InfoLine" })
	hl(0, 'CocInfoSign', { link = "BlueSign" })
	hl(0, 'CocInfoVirtualText', { link = "VirtualTextInfo" })
	hl(0, 'CocInlayHint', { link = "LineNr" })
	hl(0, 'CocListMode', { link = "StatusLine" })
	hl(0, 'CocListPath', { link = "StatusLine" })
	hl(0, 'CocListsDesc', { link = "Grey" })
	hl(0, 'CocListsLine', { link = "Fg" })
	hl(0, 'CocMarkdownCode', { link = "Green" })
	hl(0, 'CocMarkdownHeader', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'CocMarkdownLink', { cterm = { underline = true }, fg = 9281793, underline = true })
	hl(0, 'CocMenuSel', { link = "PmenuSel" })
	hl(0, 'CocNotificationButton', { link = "PmenuSel" })
	hl(0, 'CocNotificationProgress', { link = "Green" })
	hl(0, 'CocPumMenu', { link = "Pmenu" })
	hl(0, 'CocPumSearch', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'CocPumShortcut', { link = "Grey" })
	hl(0, 'CocPumVirtualText', { link = "Grey" })
	hl(0, 'CocSearch', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'CocSelectedText', { link = "Orange" })
	hl(0, 'CocSemClass', { link = "TSType" })
	hl(0, 'CocSemEnum', { link = "TSType" })
	hl(0, 'CocSemEnumMember', { link = "TSVariableBuiltin" })
	hl(0, 'CocSemEvent', { link = "TSLabel" })
	hl(0, 'CocSemInterface', { link = "TSType" })
	hl(0, 'CocSemModifier', { link = "TSOperator" })
	hl(0, 'CocSemStruct', { link = "TSType" })
	hl(0, 'CocSemTypeParameter', { link = "TSType" })
	hl(0, 'CocSemVariable', { link = "TSVariable" })
	hl(0, 'CocSnippetVisual', { link = "DiffAdd" })
	hl(0, 'CocStrikeThrough', { link = "TSStrike" })
	hl(0, 'CocSymbolArray', { link = "Aqua" })
	hl(0, 'CocSymbolBoolean', { link = "Aqua" })
	hl(0, 'CocSymbolClass', { link = "Red" })
	hl(0, 'CocSymbolConstant', { link = "Blue" })
	hl(0, 'CocSymbolConstructor', { link = "Green" })
	hl(0, 'CocSymbolDefault', { link = "Aqua" })
	hl(0, 'CocSymbolEnum', { link = "Yellow" })
	hl(0, 'CocSymbolEnumMember', { link = "Aqua" })
	hl(0, 'CocSymbolEvent', { link = "Orange" })
	hl(0, 'CocSymbolField', { link = "Green" })
	hl(0, 'CocSymbolFile', { link = "Green" })
	hl(0, 'CocSymbolFunction', { link = "Green" })
	hl(0, 'CocSymbolInterface', { link = "Yellow" })
	hl(0, 'CocSymbolKey', { link = "Red" })
	hl(0, 'CocSymbolMethod', { link = "Green" })
	hl(0, 'CocSymbolModule', { link = "Purple" })
	hl(0, 'CocSymbolNamespace', { link = "Purple" })
	hl(0, 'CocSymbolNull', { link = "Aqua" })
	hl(0, 'CocSymbolNumber', { link = "Aqua" })
	hl(0, 'CocSymbolObject', { link = "Aqua" })
	hl(0, 'CocSymbolOperator', { link = "Orange" })
	hl(0, 'CocSymbolPackage', { link = "Purple" })
	hl(0, 'CocSymbolProperty', { link = "Blue" })
	hl(0, 'CocSymbolString', { link = "Aqua" })
	hl(0, 'CocSymbolStruct', { link = "Yellow" })
	hl(0, 'CocSymbolTypeParameter', { link = "Yellow" })
	hl(0, 'CocSymbolVariable', { link = "Blue" })
	hl(0, 'CocTreeDescription', { link = "Grey" })
	hl(0, 'CocTreeOpenClose', { link = "Aqua" })
	hl(0, 'CocWarningFloat', { link = "WarningFloat" })
	hl(0, 'CocWarningHighlight', { link = "WarningText" })
	hl(0, 'CocWarningLine', { link = "WarningLine" })
	hl(0, 'CocWarningSign', { link = "YellowSign" })
	hl(0, 'CocWarningVirtualText', { link = "VirtualTextWarning" })
	hl(0, 'CodeActionBorder', { link = "Purple" })
	hl(0, 'ColorColumn', { bg = 16052441 })
	hl(0, 'Comment', { cterm = { italic = true }, fg = 9674641, italic = true })
	hl(0, 'Conceal', { fg = 12436399 })
	hl(0, 'Conditional', { fg = 16274770 })
	hl(0, 'Constant', { fg = 3516284 })
	hl(0, 'CtrlPLinePre', { fg = 15131340 })
	hl(0, 'CtrlPMatch', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'CtrlPMode1', { bg = 15131340, bold = true, cterm = { bold = true }, fg = 3839173 })
	hl(0, 'CtrlPMode2', { bg = 3839173, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'CtrlPNoEntries', { link = "Red" })
	hl(0, 'CtrlPPrtBase', { fg = 15131340 })
	hl(0, 'CtrlPPrtCursor', { link = "Blue" })
	hl(0, 'CtrlPStats', { bg = 15131340, bold = true, cterm = { bold = true }, fg = 9674641 })
	hl(0, 'CurSearch', { link = "Search" })
	hl(0, 'CurrentWord', { bold = true, cterm = { bold = true } })
	hl(0, 'CurrentWordTwins', { link = "CurrentWord" })
	hl(0, 'Cursor', { cterm = { reverse = true }, reverse = true })
	hl(0, 'CursorColumn', { bg = 16052441 })
	hl(0, 'CursorIM', { link = "Cursor" })
	hl(0, 'CursorLine', { bg = 16052441 })
	hl(0, 'CursorLineFold', { link = "FoldColumn" })
	hl(0, 'CursorLineNr', { fg = 9674641 })
	hl(0, 'CursorLineSign', { link = "SignColumn" })
	hl(0, 'CursorWord0', { link = "CurrentWord" })
	hl(0, 'CursorWord1', { link = "CurrentWord" })
	hl(0, 'DapUIBreakpointsCurrentLine', { bold = true, cterm = { bold = true }, fg = 3839173 })
	hl(0, 'DapUIBreakpointsDisabledLine', { fg = 4342338 })
	hl(0, 'DapUIBreakpointsInfo', { link = "Green" })
	hl(0, 'DapUIBreakpointsLine', { link = "DapUILineNumber" })
	hl(0, 'DapUIBreakpointsPath', { link = "Blue" })
	hl(0, 'DapUICurrentFrameName', { link = "DapUIBreakpointsCurrentLine" })
	hl(0, 'DapUIDecoration', { link = "Blue" })
	hl(0, 'DapUIEndofBuffer', { link = "EndOfBuffer" })
	hl(0, 'DapUIFloatBorder', { link = "Blue" })
	hl(0, 'DapUIFloatNormal', { link = "NormalFloat" })
	hl(0, 'DapUIFrameName', { link = "Normal" })
	hl(0, 'DapUILineNumber', { link = "Blue" })
	hl(0, 'DapUIModifiedValue', { bold = true, cterm = { bold = true }, fg = 3839173 })
	hl(0, 'DapUINormal', { link = "Normal" })
	hl(0, 'DapUINormalNC', { default = true, link = "Normal" })
	hl(0, 'DapUIPlayPause', { fg = 11140968 })
	hl(0, 'DapUIPlayPauseNC', { default = true, fg = 11140968 })
	hl(0, 'DapUIRestart', { fg = 11140968 })
	hl(0, 'DapUIRestartNC', { default = true, fg = 11140968 })
	hl(0, 'DapUIScope', { link = "Blue" })
	hl(0, 'DapUISource', { link = "Purple" })
	hl(0, 'DapUIStepBack', { fg = 61941 })
	hl(0, 'DapUIStepBackNC', { default = true, fg = 61941 })
	hl(0, 'DapUIStepInto', { fg = 61941 })
	hl(0, 'DapUIStepIntoNC', { default = true, fg = 61941 })
	hl(0, 'DapUIStepOut', { fg = 61941 })
	hl(0, 'DapUIStepOutNC', { default = true, fg = 61941 })
	hl(0, 'DapUIStepOver', { fg = 61941 })
	hl(0, 'DapUIStepOverNC', { default = true, fg = 61941 })
	hl(0, 'DapUIStop', { fg = 16187495 })
	hl(0, 'DapUIStopNC', { default = true, fg = 16187495 })
	hl(0, 'DapUIStoppedThread', { link = "Blue" })
	hl(0, 'DapUIThread', { link = "Green" })
	hl(0, 'DapUIType', { link = "Purple" })
	hl(0, 'DapUIUnavailable', { fg = 4342338 })
	hl(0, 'DapUIUnavailableNC', { default = true, fg = 4342338 })
	hl(0, 'DapUIValue', { link = "Normal" })
	hl(0, 'DapUIVariable', { link = "Normal" })
	hl(0, 'DapUIWatchesEmpty', { link = "Red" })
	hl(0, 'DapUIWatchesError', { link = "Red" })
	hl(0, 'DapUIWatchesValue', { link = "Green" })
	hl(0, 'DapUIWinSelect', { bold = true, ctermfg = 14, fg = 61941 })
	hl(0, 'DashboardCenter', { link = "Green" })
	hl(0, 'DashboardFooter', { link = "Orange" })
	hl(0, 'DashboardHeader', { link = "Yellow" })
	hl(0, 'DashboardShortCut', { link = "Red" })
	hl(0, 'Debug', { fg = 16088358 })
	hl(0, 'Define', { fg = 14641594 })
	hl(0, 'Delimiter', { fg = 6056562 })
	hl(0, 'DiagnosticBorder', { link = "Orange" })
	hl(0, 'DiagnosticDeprecated', { cterm = { strikethrough = true }, sp = 16711680, strikethrough = true })
	hl(0, 'DiagnosticError', { link = "ErrorText" })
	hl(0, 'DiagnosticFloatingError', { link = "ErrorFloat" })
	hl(0, 'DiagnosticFloatingHint', { link = "HintFloat" })
	hl(0, 'DiagnosticFloatingInfo', { link = "InfoFloat" })
	hl(0, 'DiagnosticFloatingOk', { link = "DiagnosticOk" })
	hl(0, 'DiagnosticFloatingWarn', { link = "WarningFloat" })
	hl(0, 'DiagnosticHint', { link = "HintText" })
	hl(0, 'DiagnosticInfo', { link = "InfoText" })
	hl(0, 'DiagnosticOk', { ctermfg = 10, fg = 9498256 })
	hl(0, 'DiagnosticShowBorder', { link = "Orange" })
	hl(0, 'DiagnosticSignError', { link = "RedSign" })
	hl(0, 'DiagnosticSignHint', { link = "GreenSign" })
	hl(0, 'DiagnosticSignInfo', { link = "BlueSign" })
	hl(0, 'DiagnosticSignOk', { link = "DiagnosticOk" })
	hl(0, 'DiagnosticSignWarn', { link = "YellowSign" })
	hl(0, 'DiagnosticSource', { link = "Orange" })
	hl(0, 'DiagnosticUnderlineError', { link = "ErrorText" })
	hl(0, 'DiagnosticUnderlineHint', { link = "HintText" })
	hl(0, 'DiagnosticUnderlineInfo', { link = "InfoText" })
	hl(0, 'DiagnosticUnderlineOk', { cterm = { underline = true }, sp = 9498256, underline = true })
	hl(0, 'DiagnosticUnderlineWarn', { link = "WarningText" })
	hl(0, 'DiagnosticUnnecessary', { link = "Comment" })
	hl(0, 'DiagnosticVirtualTextError', { link = "VirtualTextError" })
	hl(0, 'DiagnosticVirtualTextHint', { link = "VirtualTextHint" })
	hl(0, 'DiagnosticVirtualTextInfo', { link = "VirtualTextInfo" })
	hl(0, 'DiagnosticVirtualTextOk', { link = "DiagnosticOk" })
	hl(0, 'DiagnosticVirtualTextWarn', { link = "VirtualTextWarning" })
	hl(0, 'DiagnosticWarn', { link = "WarningText" })
	hl(0, 'DiffAdd', { bg = 15790546 })
	hl(0, 'DiffChange', { bg = 15331561 })
	hl(0, 'DiffDelete', { bg = 16507866 })
	hl(0, 'DiffText', { bg = 3839173, fg = 16643811 })
	hl(0, 'Directory', { fg = 9281793 })
	hl(0, 'DirvishArg', { link = "Yellow" })
	hl(0, 'DirvishPathTail', { link = "Aqua" })
	hl(0, 'EasyMotionShade', { link = "Grey" })
	hl(0, 'EasyMotionTarget', { link = "Search" })
	hl(0, 'EndOfBuffer', { fg = 14736583 })
	hl(0, 'Error', { fg = 16274770 })
	hl(0, 'ErrorFloat', { fg = 16274770 })
	hl(0, 'ErrorLine', vim.empty_dict())
	hl(0, 'ErrorMsg', { bold = true, cterm = { bold = true, underline = true }, fg = 16274770, underline = true })
	hl(0, 'ErrorText', { cterm = { undercurl = true }, sp = 16274770, undercurl = true })
	hl(0, 'Exception', { fg = 16274770 })
	hl(0, 'FSPrefix', { bg = 16643811, bold = true, cterm = { bold = true }, fg = 6056562 })
	hl(0, 'FSSuffix', { fg = 9674641 })
	hl(0, 'FernBranchSymbol', { link = "FernBranchText" })
	hl(0, 'FernBranchText', { link = "Green" })
	hl(0, 'FernLeafSymbol', { link = "FernLeafText" })
	hl(0, 'FernLeafText', { link = "Fg" })
	hl(0, 'FernMarkedLine', { link = "Purple" })
	hl(0, 'FernMarkedText', { link = "Purple" })
	hl(0, 'FernRootSymbol', { link = "FernRootText" })
	hl(0, 'FernRootText', { link = "Orange" })
	hl(0, 'FernWindowSelectIndicator', { link = "TabLineSel" })
	hl(0, 'FernWindowSelectStatusLine', { link = "TabLine" })
	hl(0, 'Fg', { fg = 6056562 })
	hl(0, 'FidgetTask', { link = "NonText" })
	hl(0, 'FidgetTitle', { link = "Title" })
	hl(0, 'FlashBackdrop', { fg = 9674641 })
	hl(0, 'FlashLabel', { bold = true, cterm = { bold = true, italic = true }, fg = 14641594, italic = true })
	hl(0, 'Float', { fg = 14641594 })
	hl(0, 'FloatBorder', { bg = 15723476, fg = 9674641 })
	hl(0, 'FloatShadow', { bg = 0, blend = 80 })
	hl(0, 'FloatShadowThrough', { bg = 0, blend = 100 })
	hl(0, 'FloatTitle', { bg = 15723476, bold = true, cterm = { bold = true }, fg = 9674641 })
	hl(0, 'FloatermBorder', { link = "Grey" })
	hl(0, 'FocusedSymbol', { link = "NormalFloat" })
	hl(0, 'FoldColumn', { fg = 12436399 })
	hl(0, 'Folded', { bg = 16052441, fg = 9674641 })
	hl(0, 'Function', { fg = 9281793 })
	hl(0, 'GitGutterAdd', { link = "GreenSign" })
	hl(0, 'GitGutterAddLine', { link = "DiffAdd" })
	hl(0, 'GitGutterAddLineNr', { link = "Green" })
	hl(0, 'GitGutterChange', { link = "BlueSign" })
	hl(0, 'GitGutterChangeDelete', { link = "PurpleSign" })
	hl(0, 'GitGutterChangeDeleteLine', { link = "DiffChange" })
	hl(0, 'GitGutterChangeDeleteLineNr', { link = "Purple" })
	hl(0, 'GitGutterChangeLine', { link = "DiffChange" })
	hl(0, 'GitGutterChangeLineNr', { link = "Blue" })
	hl(0, 'GitGutterDelete', { link = "RedSign" })
	hl(0, 'GitGutterDeleteLine', { link = "DiffDelete" })
	hl(0, 'GitGutterDeleteLineNr', { link = "Red" })
	hl(0, 'GitSignsAdd', { link = "GreenSign" })
	hl(0, 'GitSignsAddInline', { link = "TermCursor" })
	hl(0, 'GitSignsAddLn', { link = "DiffAdd" })
	hl(0, 'GitSignsAddLnInline', { link = "GitSignsAddInline" })
	hl(0, 'GitSignsAddNr', { link = "Green" })
	hl(0, 'GitSignsAddPreview', { link = "DiffAdd" })
	hl(0, 'GitSignsChange', { link = "BlueSign" })
	hl(0, 'GitSignsChangeInline', { link = "TermCursor" })
	hl(0, 'GitSignsChangeLn', { link = "DiffChange" })
	hl(0, 'GitSignsChangeLnInline', { link = "GitSignsChangeInline" })
	hl(0, 'GitSignsChangeNr', { link = "Blue" })
	hl(0, 'GitSignsChangedelete', { link = "GitSignsChange" })
	hl(0, 'GitSignsChangedeleteLn', { link = "GitSignsChangeLn" })
	hl(0, 'GitSignsChangedeleteNr', { link = "GitSignsChangeNr" })
	hl(0, 'GitSignsCurrentLineBlame', { link = "Grey" })
	hl(0, 'GitSignsDelete', { link = "RedSign" })
	hl(0, 'GitSignsDeleteInline', { link = "TermCursor" })
	hl(0, 'GitSignsDeleteLn', { link = "DiffDelete" })
	hl(0, 'GitSignsDeleteLnInline', { link = "GitSignsDeleteInline" })
	hl(0, 'GitSignsDeleteNr', { link = "Red" })
	hl(0, 'GitSignsDeletePreview', { link = "DiffDelete" })
	hl(0, 'GitSignsDeleteVirtLn', { link = "DiffDelete" })
	hl(0, 'GitSignsDeleteVirtLnInLine', { link = "GitSignsDeleteLnInline" })
	hl(0, 'GitSignsStagedAdd', { default = true, fg = 4608000 })
	hl(0, 'GitSignsStagedAddLn', { bg = 15790546, default = true })
	hl(0, 'GitSignsStagedAddNr', { default = true, fg = 4608000 })
	hl(0, 'GitSignsStagedChange', { default = true, fg = 1919586 })
	hl(0, 'GitSignsStagedChangeLn', { bg = 15331561, default = true })
	hl(0, 'GitSignsStagedChangeNr', { default = true, fg = 1919586 })
	hl(0, 'GitSignsStagedChangedelete', { default = true, fg = 1919586 })
	hl(0, 'GitSignsStagedChangedeleteLn', { bg = 15331561, default = true })
	hl(0, 'GitSignsStagedChangedeleteNr', { default = true, fg = 1919586 })
	hl(0, 'GitSignsStagedDelete', { default = true, fg = 8137257 })
	hl(0, 'GitSignsStagedDeleteLn', { bg = 16507866, default = true })
	hl(0, 'GitSignsStagedDeleteNr', { default = true, fg = 8137257 })
	hl(0, 'GitSignsStagedTopdelete', { default = true, fg = 8137257 })
	hl(0, 'GitSignsStagedTopdeleteNr', { default = true, fg = 8137257 })
	hl(0, 'GitSignsTopdelete', { link = "GitSignsDelete" })
	hl(0, 'GitSignsTopdeleteNr', { link = "GitSignsDeleteNr" })
	hl(0, 'GitSignsUntracked', { link = "GitSignsAdd" })
	hl(0, 'GitSignsUntrackedLn', { link = "GitSignsAddLn" })
	hl(0, 'GitSignsUntrackedNr', { link = "GitSignsAddNr" })
	hl(0, 'GitSignsVirtLnum', { link = "GitSignsDeleteVirtLn" })
	hl(0, 'GlanceBorderTop', { bg = 14933194, default = true, fg = 9674641 })
	hl(0, 'GlanceFoldIcon', { default = true, fg = 2503482 })
	hl(0, 'GlanceIndent', { default = true, fg = 11449505 })
	hl(0, 'GlanceListBorderBottom', { bg = 15262159, default = true, fg = 9674641 })
	hl(0, 'GlanceListCount', { link = "Number" })
	hl(0, 'GlanceListCursorLine', { bg = 14671045, default = true })
	hl(0, 'GlanceListEndOfBuffer', { bg = 15262159, default = true, fg = 15262159 })
	hl(0, 'GlanceListFilename', { link = "Directory" })
	hl(0, 'GlanceListFilepath', { default = true, fg = 2503482 })
	hl(0, 'GlanceListMatch', { link = "Search" })
	hl(0, 'GlanceListNormal', { bg = 15262159, default = true, fg = 6056562 })
	hl(0, 'GlancePreviewBorderBottom', { bg = 15788502, default = true, fg = 9674641 })
	hl(0, 'GlancePreviewCursorLine', { bg = 15197132, default = true })
	hl(0, 'GlancePreviewEndOfBuffer', { bg = 15788502, default = true, fg = 15788502 })
	hl(0, 'GlancePreviewMatch', { bg = 9281793, default = true, fg = 16643811 })
	hl(0, 'GlancePreviewNormal', { bg = 15788502, default = true })
	hl(0, 'GlancePreviewSignColumn', { default = true, fg = 15788502 })
	hl(0, 'GlanceWinBarFilename', { bg = 14933194, default = true, fg = 6056562 })
	hl(0, 'GlanceWinBarFilepath', { bg = 14933194, default = true, fg = 2766654 })
	hl(0, 'GlanceWinBarTitle', { bg = 14933194, default = true, fg = 6056562 })
	hl(0, 'GlyphPalette1', { fg = 16274770 })
	hl(0, 'GlyphPalette2', { fg = 9281793 })
	hl(0, 'GlyphPalette3', { fg = 14655488 })
	hl(0, 'GlyphPalette4', { fg = 3839173 })
	hl(0, 'GlyphPalette6', { fg = 9281793 })
	hl(0, 'GlyphPalette7', { fg = 6056562 })
	hl(0, 'GlyphPalette9', { fg = 16274770 })
	hl(0, 'Green', { fg = 9281793 })
	hl(0, 'GreenBold', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'GreenItalic', { fg = 9281793 })
	hl(0, 'GreenSign', { fg = 9281793 })
	hl(0, 'Grey', { fg = 9674641 })
	hl(0, 'HighlightedyankRegion', { link = "Visual" })
	hl(0, 'HintFloat', { fg = 9281793 })
	hl(0, 'HintLine', vim.empty_dict())
	hl(0, 'HintText', { cterm = { undercurl = true }, sp = 9281793, undercurl = true })
	hl(0, 'HopNextKey', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'HopNextKey1', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'HopNextKey2', { link = "Green" })
	hl(0, 'HopUnmatched', { link = "Grey" })
	hl(0, 'HoverBorder', { link = "Green" })
	hl(0, 'IblIndent', { cterm = { nocombine = true }, fg = 14736583, nocombine = true })
	hl(0, 'IblScope', { cterm = { nocombine = true }, fg = 9674641, nocombine = true })
	hl(0, 'IblWhitespace', { fg = 14736583 })
	hl(0, 'Identifier', { fg = 3839173 })
	hl(0, 'Ignore', { fg = 9674641 })
	hl(0, 'IlluminatedWordRead', { link = "Visual" })
	hl(0, 'IlluminatedWordText', { link = "Visual" })
	hl(0, 'IlluminatedWordWrite', { link = "Visual" })
	hl(0, 'IncSearch', { bg = 16274770, fg = 16643811 })
	hl(0, 'InclineNormalNC', { bg = 15723476, fg = 9674641 })
	hl(0, 'Include', { fg = 14641594 })
	hl(0, 'IndentBlanklineChar', { link = "IblIndent" })
	hl(0, 'IndentBlanklineContextChar', { link = "IblScope" })
	hl(0, 'IndentBlanklineSpaceChar', { link = "IndentBlanklineChar" })
	hl(0, 'IndentBlanklineSpaceCharBlankline', { link = "IndentBlanklineChar" })
	hl(0, 'InfoFloat', { fg = 3839173 })
	hl(0, 'InfoLine', vim.empty_dict())
	hl(0, 'InfoText', { cterm = { undercurl = true }, sp = 3839173, undercurl = true })
	hl(0, 'Keyword', { fg = 16274770 })
	hl(0, 'Label', { fg = 16088358 })
	hl(0, 'LeapBackdrop', { fg = 9674641 })
	hl(0, 'LeapLabelPrimary', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'LeapLabelSecondary', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'LeapMatch', { bg = 14641594, bold = true, cterm = { bold = true }, fg = 6056562 })
	hl(0, 'LightspeedGreyWash', { link = "Grey" })
	hl(0, 'LightspeedLabel', { bold = true, cterm = { bold = true, underline = true }, fg = 16274770, underline = true })
	hl(0, 'LightspeedLabelDistant', { bold = true, cterm = { bold = true, underline = true }, fg = 3839173, underline = true })
	hl(0, 'LightspeedMaskedChar', { link = "Purple" })
	hl(0, 'LightspeedPendingOpArea', { bg = 9281793, fg = 16643811 })
	hl(0, 'LightspeedShortcut', { bg = 16274770, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'LightspeedUnlabeledMatch', { bold = true, cterm = { bold = true }, fg = 6056562 })
	hl(0, 'LineNr', { fg = 12436399 })
	hl(0, 'LineNrAbove', { link = "LineNr" })
	hl(0, 'LineNrBelow', { link = "LineNr" })
	hl(0, 'LspCodeLens', { link = "VirtualTextInfo" })
	hl(0, 'LspCodeLensSeparator', { link = "VirtualTextHint" })
	hl(0, 'LspDiagnosticsDefaultError', { link = "DiagnosticError" })
	hl(0, 'LspDiagnosticsDefaultHint', { link = "DiagnosticHint" })
	hl(0, 'LspDiagnosticsDefaultInformation', { link = "DiagnosticInfo" })
	hl(0, 'LspDiagnosticsDefaultWarning', { link = "DiagnosticWarn" })
	hl(0, 'LspDiagnosticsFloatingError', { link = "DiagnosticFloatingError" })
	hl(0, 'LspDiagnosticsFloatingHint', { link = "DiagnosticFloatingHint" })
	hl(0, 'LspDiagnosticsFloatingInformation', { link = "DiagnosticFloatingInfo" })
	hl(0, 'LspDiagnosticsFloatingWarning', { link = "DiagnosticFloatingWarn" })
	hl(0, 'LspDiagnosticsSignError', { link = "DiagnosticSignError" })
	hl(0, 'LspDiagnosticsSignHint', { link = "DiagnosticSignHint" })
	hl(0, 'LspDiagnosticsSignInformation', { link = "DiagnosticSignInfo" })
	hl(0, 'LspDiagnosticsSignWarning', { link = "DiagnosticSignWarn" })
	hl(0, 'LspDiagnosticsUnderlineError', { link = "DiagnosticUnderlineError" })
	hl(0, 'LspDiagnosticsUnderlineHint', { link = "DiagnosticUnderlineHint" })
	hl(0, 'LspDiagnosticsUnderlineInformation', { link = "DiagnosticUnderlineInfo" })
	hl(0, 'LspDiagnosticsUnderlineWarning', { link = "DiagnosticUnderlineWarn" })
	hl(0, 'LspDiagnosticsVirtualTextError', { link = "DiagnosticVirtualTextError" })
	hl(0, 'LspDiagnosticsVirtualTextHint', { link = "DiagnosticVirtualTextHint" })
	hl(0, 'LspDiagnosticsVirtualTextInformation', { link = "DiagnosticVirtualTextInfo" })
	hl(0, 'LspDiagnosticsVirtualTextWarning', { link = "DiagnosticVirtualTextWarn" })
	hl(0, 'LspErrorHighlight', { link = "ErrorText" })
	hl(0, 'LspErrorVirtual', { link = "VirtualTextError" })
	hl(0, 'LspHintHighlight', { link = "HintText" })
	hl(0, 'LspHintVirtual', { link = "VirtualTextHint" })
	hl(0, 'LspInfoBorder', { link = "Label" })
	hl(0, 'LspInfoFiletype', { link = "Type" })
	hl(0, 'LspInfoList', { link = "Function" })
	hl(0, 'LspInfoTip', { link = "Comment" })
	hl(0, 'LspInfoTitle', { link = "Title" })
	hl(0, 'LspInformationHighlight', { link = "InfoText" })
	hl(0, 'LspInformationVirtual', { link = "VirtualTextInfo" })
	hl(0, 'LspReferenceRead', { link = "CurrentWord" })
	hl(0, 'LspReferenceText', { link = "CurrentWord" })
	hl(0, 'LspReferenceWrite', { link = "CurrentWord" })
	hl(0, 'LspSemanticClass', { link = "TSType" })
	hl(0, 'LspSemanticComment', { link = "TSComment" })
	hl(0, 'LspSemanticEnum', { link = "TSType" })
	hl(0, 'LspSemanticEnumMember', { link = "TSVariableBuiltin" })
	hl(0, 'LspSemanticEvents', { link = "TSLabel" })
	hl(0, 'LspSemanticFunction', { link = "TSFunction" })
	hl(0, 'LspSemanticInterface', { link = "TSType" })
	hl(0, 'LspSemanticKeyword', { link = "TSKeyword" })
	hl(0, 'LspSemanticMethod', { link = "TSMethod" })
	hl(0, 'LspSemanticModifier', { link = "TSOperator" })
	hl(0, 'LspSemanticNumber', { link = "TSNumber" })
	hl(0, 'LspSemanticOperator', { link = "TSOperator" })
	hl(0, 'LspSemanticParameter', { link = "TSParameter" })
	hl(0, 'LspSemanticProperty', { link = "TSProperty" })
	hl(0, 'LspSemanticRegexp', { link = "TSStringRegex" })
	hl(0, 'LspSemanticString', { link = "TSString" })
	hl(0, 'LspSemanticStruct', { link = "TSType" })
	hl(0, 'LspSemanticType', { link = "TSType" })
	hl(0, 'LspSemanticTypeParameter', { link = "TSType" })
	hl(0, 'LspSemanticVariable', { link = "TSVariable" })
	hl(0, 'LspSignatureActiveParameter', { link = "Search" })
	hl(0, 'LspWarningHighlight', { link = "WarningText" })
	hl(0, 'LspWarningVirtual', { link = "VirtualTextWarning" })
	hl(0, 'Macro', { fg = 3516284 })
	hl(0, 'MatchParen', { bg = 14736583 })
	hl(0, 'MatchParenCur', { bold = true, cterm = { bold = true } })
	hl(0, 'MatchWord', { cterm = { underline = true }, underline = true })
	hl(0, 'MatchWordCur', { cterm = { underline = true }, underline = true })
	hl(0, 'MiniCompletionActiveParameter', { link = "LspSignatureActiveParameter" })
	hl(0, 'MiniCursorword', { link = "CurrentWord" })
	hl(0, 'MiniCursorwordCurrent', { link = "CurrentWord" })
	hl(0, 'MiniIndentscopePrefix', { cterm = { nocombine = true }, nocombine = true })
	hl(0, 'MiniIndentscopeSymbol', { link = "Grey" })
	hl(0, 'MiniJump', { link = "Search" })
	hl(0, 'MiniJump2dSpot', { bold = true, cterm = { bold = true, nocombine = true }, fg = 16088358, nocombine = true })
	hl(0, 'MiniStarterCurrent', { cterm = { nocombine = true }, nocombine = true })
	hl(0, 'MiniStarterFooter', { link = "Orange" })
	hl(0, 'MiniStarterHeader', { link = "Yellow" })
	hl(0, 'MiniStarterInactive', { link = "Comment" })
	hl(0, 'MiniStarterItem', { link = "Normal" })
	hl(0, 'MiniStarterItemBullet', { link = "Grey" })
	hl(0, 'MiniStarterItemPrefix', { link = "Yellow" })
	hl(0, 'MiniStarterQuery', { link = "Blue" })
	hl(0, 'MiniStarterSection', { link = "Title" })
	hl(0, 'MiniStatuslineDevinfo', { bg = 16052441, fg = 9674641 })
	hl(0, 'MiniStatuslineFileinfo', { bg = 16052441, fg = 9674641 })
	hl(0, 'MiniStatuslineFilename', { link = "Grey" })
	hl(0, 'MiniStatuslineModeCommand', { bg = 3516284, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'MiniStatuslineModeInactive', { link = "Grey" })
	hl(0, 'MiniStatuslineModeInsert', { bg = 7372937, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'MiniStatuslineModeNormal', { bg = 9679449, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'MiniStatuslineModeOther', { bg = 14641594, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'MiniStatuslineModeReplace', { bg = 16088358, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'MiniStatuslineModeVisual', { bg = 15100008, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'MiniSurround', { link = "IncSearch" })
	hl(0, 'MiniTablineCurrent', { bg = 14736583, fg = 6056562 })
	hl(0, 'MiniTablineFill', { link = "TabLineFill" })
	hl(0, 'MiniTablineHidden', { bg = 15723476, fg = 9674641 })
	hl(0, 'MiniTablineModifiedCurrent', { bg = 14736583, fg = 3839173 })
	hl(0, 'MiniTablineModifiedHidden', { bg = 15723476, fg = 9674641 })
	hl(0, 'MiniTablineModifiedVisible', { bg = 15723476, fg = 3839173 })
	hl(0, 'MiniTablineTabpagesection', { bg = 9679449, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'MiniTablineVisible', { bg = 15723476, fg = 6056562 })
	hl(0, 'MiniTestEmphasis', { bold = true, cterm = { bold = true } })
	hl(0, 'MiniTestFail', { bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'MiniTestPass', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'MiniTrailspace', { bg = 16274770 })
	hl(0, 'ModeMsg', { bold = true, cterm = { bold = true }, fg = 6056562 })
	hl(0, 'MoreMsg', { bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'MsgSeparator', { link = "StatusLine" })
	hl(0, 'NERDTreeCWD', { link = "Aqua" })
	hl(0, 'NERDTreeClosable', { link = "Orange" })
	hl(0, 'NERDTreeDir', { link = "Green" })
	hl(0, 'NERDTreeDirSlash', { link = "Aqua" })
	hl(0, 'NERDTreeExecFile', { link = "Yellow" })
	hl(0, 'NERDTreeFile', { link = "Fg" })
	hl(0, 'NERDTreeFlags', { link = "Orange" })
	hl(0, 'NERDTreeHelp', { link = "LightGrey" })
	hl(0, 'NERDTreeLinkFile', { link = "Grey" })
	hl(0, 'NERDTreeLinkTarget', { link = "Green" })
	hl(0, 'NERDTreeOpenable', { link = "Orange" })
	hl(0, 'NERDTreeToggleOff', { link = "Red" })
	hl(0, 'NERDTreeToggleOn', { link = "Green" })
	hl(0, 'NERDTreeUp', { link = "Grey" })
	hl(0, 'NavicIconsArray', { fg = 16088358 })
	hl(0, 'NavicIconsBoolean', { fg = 16088358 })
	hl(0, 'NavicIconsClass', { fg = 16088358 })
	hl(0, 'NavicIconsConstant', { fg = 14641594 })
	hl(0, 'NavicIconsConstructor', { fg = 16088358 })
	hl(0, 'NavicIconsEnum', { fg = 16088358 })
	hl(0, 'NavicIconsEnumMember', { fg = 9281793 })
	hl(0, 'NavicIconsEvent', { fg = 16088358 })
	hl(0, 'NavicIconsField', { fg = 9281793 })
	hl(0, 'NavicIconsFile', { fg = 6056562 })
	hl(0, 'NavicIconsFunction', { fg = 3839173 })
	hl(0, 'NavicIconsInterface', { fg = 16088358 })
	hl(0, 'NavicIconsKey', { fg = 14641594 })
	hl(0, 'NavicIconsKeyword', { fg = 14641594 })
	hl(0, 'NavicIconsMethod', { fg = 3839173 })
	hl(0, 'NavicIconsModule', { fg = 14655488 })
	hl(0, 'NavicIconsNamespace', { fg = 6056562 })
	hl(0, 'NavicIconsNull', { fg = 16088358 })
	hl(0, 'NavicIconsNumber', { fg = 16088358 })
	hl(0, 'NavicIconsObject', { fg = 16088358 })
	hl(0, 'NavicIconsOperator', { fg = 6056562 })
	hl(0, 'NavicIconsPackage', { fg = 6056562 })
	hl(0, 'NavicIconsProperty', { fg = 9281793 })
	hl(0, 'NavicIconsString', { fg = 9281793 })
	hl(0, 'NavicIconsStruct', { fg = 16088358 })
	hl(0, 'NavicIconsTypeParameter', { fg = 9281793 })
	hl(0, 'NavicIconsVariable', { fg = 14641594 })
	hl(0, 'NavicSeparator', { fg = 6056562 })
	hl(0, 'NavicText', { fg = 6056562 })
	hl(0, 'NeoTreeDimText', { link = "Grey" })
	hl(0, 'NeoTreeDirectoryIcon', { link = "Orange" })
	hl(0, 'NeoTreeEndOfBuffer', { bg = 15723476, fg = 15723476 })
	hl(0, 'NeoTreeGitAdded', { link = "Green" })
	hl(0, 'NeoTreeGitConflict', { link = "Yellow" })
	hl(0, 'NeoTreeGitDeleted', { link = "Red" })
	hl(0, 'NeoTreeGitIgnored', { link = "Grey" })
	hl(0, 'NeoTreeGitModified', { link = "Blue" })
	hl(0, 'NeoTreeGitStaged', { link = "Purple" })
	hl(0, 'NeoTreeGitUnstaged', { link = "Purple" })
	hl(0, 'NeoTreeGitUntracked', { link = "Fg" })
	hl(0, 'NeoTreeIndentMarker', { link = "NonText" })
	hl(0, 'NeoTreeModified', vim.empty_dict())
	hl(0, 'NeoTreeNormal', { bg = 15723476, fg = 6056562 })
	hl(0, 'NeoTreeNormalNC', { link = "NeoTreeNormal" })
	hl(0, 'NeoTreeRootName', { link = "Title" })
	hl(0, 'NeoTreeSignColumn', { link = "NeoTreeNormal" })
	hl(0, 'NeoTreeTabActive', vim.empty_dict())
	hl(0, 'NeoTreeTabInactive', vim.empty_dict())
	hl(0, 'NeoTreeTabSeparatorActive', vim.empty_dict())
	hl(0, 'NeoTreeTabSeparatorInactive', vim.empty_dict())
	hl(0, 'NeoTreeVertSplit', { bg = 16643811, fg = 16643811 })
	hl(0, 'NeogitBranch', { link = "Green" })
	hl(0, 'NeogitChangeAdded', { link = "GreenBold" })
	hl(0, 'NeogitChangeBothModified', { link = "YellowBold" })
	hl(0, 'NeogitChangeCopied', { link = "AquaBold" })
	hl(0, 'NeogitChangeDeleted', { link = "RedBold" })
	hl(0, 'NeogitChangeModified', { link = "OrangeBold" })
	hl(0, 'NeogitChangeNewFile', { link = "GreenBold" })
	hl(0, 'NeogitChangeRenamed', { link = "BlueBold" })
	hl(0, 'NeogitChangeUpdated', { link = "YellowBold" })
	hl(0, 'NeogitCommandCodeError', { link = "Red" })
	hl(0, 'NeogitCommandCodeNormal', { link = "Green" })
	hl(0, 'NeogitCommitViewHeader', { link = "Purple" })
	hl(0, 'NeogitDiffAdd', { link = "DiffAdd" })
	hl(0, 'NeogitDiffAddHighlight', { link = "DiffAdd" })
	hl(0, 'NeogitDiffContextHighlight', { link = "CursorLine" })
	hl(0, 'NeogitDiffDelete', { link = "DiffDelete" })
	hl(0, 'NeogitDiffDeleteHighlight', { link = "DiffDelete" })
	hl(0, 'NeogitFilePath', { link = "Aqua" })
	hl(0, 'NeogitFold', { link = "FoldColumn" })
	hl(0, 'NeogitHunkHeader', { link = "TabLineFill" })
	hl(0, 'NeogitHunkHeaderHighlight', { link = "TabLine" })
	hl(0, 'NeogitNotificationError', { link = "ErrorFloat" })
	hl(0, 'NeogitNotificationInfo', { link = "InfoFloat" })
	hl(0, 'NeogitNotificationWarning', { link = "WarningFloat" })
	hl(0, 'NeogitObjectId', { bold = true, cterm = { bold = true, italic = true }, fg = 9281793, italic = true })
	hl(0, 'NeogitRecentCommits', { link = "AquaBold" })
	hl(0, 'NeogitRemote', { link = "Purple" })
	hl(0, 'NeogitStashes', { link = "BlueBold" })
	hl(0, 'NeogitUnmergedInto', { link = "PurpleItalic" })
	hl(0, 'NeogitUnpushedTo', { link = "PurpleItalic" })
	hl(0, 'NeogitUnstagedchanges', { link = "Aqua" })
	hl(0, 'NeogitUntrackedfiles', { link = "PurpleItalic" })
	hl(0, 'NeomakeError', { link = "ErrorText" })
	hl(0, 'NeomakeErrorSign', { link = "RedSign" })
	hl(0, 'NeomakeInfo', { link = "InfoText" })
	hl(0, 'NeomakeInfoSign', { link = "BlueSign" })
	hl(0, 'NeomakeMessage', { link = "HintText" })
	hl(0, 'NeomakeMessageSign', { link = "AquaSign" })
	hl(0, 'NeomakeVirtualtextError', { link = "VirtualTextError" })
	hl(0, 'NeomakeVirtualtextInfo', { link = "VirtualTextInfo" })
	hl(0, 'NeomakeVirtualtextMessag', { link = "VirtualTextHint" })
	hl(0, 'NeomakeVirtualtextWarning', { link = "VirtualTextWarning" })
	hl(0, 'NeomakeWarning', { link = "WarningText" })
	hl(0, 'NeomakeWarningSign', { link = "YellowSign" })
	hl(0, 'NeotestAdapterName', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'NeotestBorder', { fg = 3839173 })
	hl(0, 'NeotestDir', { fg = 3839173 })
	hl(0, 'NeotestExpandMarker', { fg = 9674641 })
	hl(0, 'NeotestFailed', { fg = 16274770 })
	hl(0, 'NeotestFile', { fg = 3516284 })
	hl(0, 'NeotestFocused', { fg = 14655488 })
	hl(0, 'NeotestIndent', { fg = 9674641 })
	hl(0, 'NeotestMarked', { fg = 3839173 })
	hl(0, 'NeotestNamespace', { fg = 15790546 })
	hl(0, 'NeotestPassed', { fg = 9281793 })
	hl(0, 'NeotestRunning', { fg = 14655488 })
	hl(0, 'NeotestSkipped', { fg = 3839173 })
	hl(0, 'NeotestTarget', { fg = 3839173 })
	hl(0, 'NeotestWinSelect', { fg = 3839173 })
	hl(0, 'NoiceCompletionItemKindClass', { fg = 16088358 })
	hl(0, 'NoiceCompletionItemKindConstant', { fg = 15100008 })
	hl(0, 'NoiceCompletionItemKindConstructor', { fg = 3839173 })
	hl(0, 'NoiceCompletionItemKindDefault', { fg = 9674641 })
	hl(0, 'NoiceCompletionItemKindEnum', { fg = 16088358 })
	hl(0, 'NoiceCompletionItemKindEnumMember', { fg = 9281793 })
	hl(0, 'NoiceCompletionItemKindEvent', { fg = 16088358 })
	hl(0, 'NoiceCompletionItemKindField', { fg = 9281793 })
	hl(0, 'NoiceCompletionItemKindFunction', { fg = 3839173 })
	hl(0, 'NoiceCompletionItemKindInterface', { fg = 16088358 })
	hl(0, 'NoiceCompletionItemKindKeyword', { fg = 3516284 })
	hl(0, 'NoiceCompletionItemKindMethod', { fg = 3839173 })
	hl(0, 'NoiceCompletionItemKindModule', { fg = 14655488 })
	hl(0, 'NoiceCompletionItemKindOperator', { fg = 9281793 })
	hl(0, 'NoiceCompletionItemKindProperty', { fg = 9281793 })
	hl(0, 'NoiceCompletionItemKindReference', { fg = 15100008 })
	hl(0, 'NoiceCompletionItemKindSnippet', { fg = 9674641 })
	hl(0, 'NoiceCompletionItemKindStruct', { fg = 16088358 })
	hl(0, 'NoiceCompletionItemKindTypeParameter', { fg = 9281793 })
	hl(0, 'NoiceCompletionItemKindUnit', { fg = 16088358 })
	hl(0, 'NoiceCompletionItemKindValue', { fg = 15100008 })
	hl(0, 'NoiceCompletionItemKindVariable', { fg = 15100008 })
	hl(0, 'NonText', { fg = 14736583 })
	hl(0, 'Normal', { bg = 16643811, fg = 6056562 })
	hl(0, 'NormalFloat', { bg = 15723476, fg = 6056562 })
	hl(0, 'NormalNC', { bg = 16643811, fg = 6056562 })
	hl(0, 'NotifyBackground', { bg = 16643811, fg = 6056562 })
	hl(0, 'NotifyDEBUGBorder', { link = "Grey" })
	hl(0, 'NotifyDEBUGIcon', { link = "Grey" })
	hl(0, 'NotifyDEBUGTitle', { link = "Grey" })
	hl(0, 'NotifyERRORBorder', { link = "Red" })
	hl(0, 'NotifyERRORIcon', { link = "Red" })
	hl(0, 'NotifyERRORTitle', { link = "Red" })
	hl(0, 'NotifyHINTBorder', vim.empty_dict())
	hl(0, 'NotifyHINTIcon', vim.empty_dict())
	hl(0, 'NotifyHINTTitle', vim.empty_dict())
	hl(0, 'NotifyINFOBorder', { link = "Green" })
	hl(0, 'NotifyINFOIcon', { link = "Green" })
	hl(0, 'NotifyINFOTitle', { link = "Green" })
	hl(0, 'NotifyTRACEBorder', { link = "Purple" })
	hl(0, 'NotifyTRACEIcon', { link = "Purple" })
	hl(0, 'NotifyTRACETitle', { link = "Purple" })
	hl(0, 'NotifyWARNBorder', { link = "Yellow" })
	hl(0, 'NotifyWARNIcon', { link = "Yellow" })
	hl(0, 'NotifyWARNTitle', { link = "Yellow" })
	hl(0, 'Number', { fg = 14641594 })
	hl(0, 'NvimAnd', { link = "NvimBinaryOperator" })
	hl(0, 'NvimArrow', { link = "Delimiter" })
	hl(0, 'NvimAssignment', { link = "Operator" })
	hl(0, 'NvimAssignmentWithAddition', { link = "NvimAugmentedAssignment" })
	hl(0, 'NvimAssignmentWithConcatenation', { link = "NvimAugmentedAssignment" })
	hl(0, 'NvimAssignmentWithSubtraction', { link = "NvimAugmentedAssignment" })
	hl(0, 'NvimAugmentedAssignment', { link = "NvimAssignment" })
	hl(0, 'NvimBinaryMinus', { link = "NvimBinaryOperator" })
	hl(0, 'NvimBinaryOperator', { link = "NvimOperator" })
	hl(0, 'NvimBinaryPlus', { link = "NvimBinaryOperator" })
	hl(0, 'NvimCallingParenthesis', { link = "NvimParenthesis" })
	hl(0, 'NvimColon', { link = "Delimiter" })
	hl(0, 'NvimComma', { link = "Delimiter" })
	hl(0, 'NvimComparison', { link = "NvimBinaryOperator" })
	hl(0, 'NvimComparisonModifier', { link = "NvimComparison" })
	hl(0, 'NvimConcat', { link = "NvimBinaryOperator" })
	hl(0, 'NvimConcatOrSubscript', { link = "NvimConcat" })
	hl(0, 'NvimContainer', { link = "NvimParenthesis" })
	hl(0, 'NvimCurly', { link = "NvimSubscript" })
	hl(0, 'NvimDapVirtualText', { link = "Comment" })
	hl(0, 'NvimDapVirtualTextChanged', { link = "DiagnosticVirtualTextWarn" })
	hl(0, 'NvimDapVirtualTextError', { link = "DiagnosticVirtualTextError" })
	hl(0, 'NvimDapVirtualTextInfo', { link = "DiagnosticVirtualTextInfo" })
	hl(0, 'NvimDict', { link = "NvimContainer" })
	hl(0, 'NvimDivision', { link = "NvimBinaryOperator" })
	hl(0, 'NvimDoubleQuote', { link = "NvimStringQuote" })
	hl(0, 'NvimDoubleQuotedBody', { link = "NvimStringBody" })
	hl(0, 'NvimDoubleQuotedEscape', { link = "NvimStringSpecial" })
	hl(0, 'NvimDoubleQuotedUnknownEscape', { link = "NvimInvalidValue" })
	hl(0, 'NvimEnvironmentName', { link = "NvimIdentifier" })
	hl(0, 'NvimEnvironmentSigil', { link = "NvimOptionSigil" })
	hl(0, 'NvimFigureBrace', { link = "NvimInternalError" })
	hl(0, 'NvimFloat', { link = "NvimNumber" })
	hl(0, 'NvimIdentifier', { link = "Identifier" })
	hl(0, 'NvimIdentifierKey', { link = "NvimIdentifier" })
	hl(0, 'NvimIdentifierName', { link = "NvimIdentifier" })
	hl(0, 'NvimIdentifierScope', { link = "NvimIdentifier" })
	hl(0, 'NvimIdentifierScopeDelimiter', { link = "NvimIdentifier" })
	hl(0, 'NvimInternalError', { bg = 16711680, ctermbg = 9, ctermfg = 9, fg = 16711680 })
	hl(0, 'NvimInvalid', { link = "Error" })
	hl(0, 'NvimInvalidAnd', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidArrow', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidAssignment', { link = "NvimInvalid" })
	hl(0, 'NvimInvalidAssignmentWithAddition', { link = "NvimInvalidAugmentedAssignment" })
	hl(0, 'NvimInvalidAssignmentWithConcatenation', { link = "NvimInvalidAugmentedAssignment" })
	hl(0, 'NvimInvalidAssignmentWithSubtraction', { link = "NvimInvalidAugmentedAssignment" })
	hl(0, 'NvimInvalidAugmentedAssignment', { link = "NvimInvalidAssignment" })
	hl(0, 'NvimInvalidBinaryMinus', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidBinaryOperator', { link = "NvimInvalidOperator" })
	hl(0, 'NvimInvalidBinaryPlus', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidCallingParenthesis', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidColon', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidComma', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidComparison', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidComparisonModifier', { link = "NvimInvalidComparison" })
	hl(0, 'NvimInvalidConcat', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidConcatOrSubscript', { link = "NvimInvalidConcat" })
	hl(0, 'NvimInvalidContainer', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidCurly', { link = "NvimInvalidSubscript" })
	hl(0, 'NvimInvalidDelimiter', { link = "NvimInvalid" })
	hl(0, 'NvimInvalidDict', { link = "NvimInvalidContainer" })
	hl(0, 'NvimInvalidDivision', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidDoubleQuote', { link = "NvimInvalidStringQuote" })
	hl(0, 'NvimInvalidDoubleQuotedBody', { link = "NvimInvalidStringBody" })
	hl(0, 'NvimInvalidDoubleQuotedEscape', { link = "NvimInvalidStringSpecial" })
	hl(0, 'NvimInvalidDoubleQuotedUnknownEscape', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidEnvironmentName', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidEnvironmentSigil', { link = "NvimInvalidOptionSigil" })
	hl(0, 'NvimInvalidFigureBrace', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidFloat', { link = "NvimInvalidNumber" })
	hl(0, 'NvimInvalidIdentifier', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidIdentifierKey', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidIdentifierName', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidIdentifierScope', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidIdentifierScopeDelimiter', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidLambda', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidList', { link = "NvimInvalidContainer" })
	hl(0, 'NvimInvalidMod', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidMultiplication', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidNestingParenthesis', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidNot', { link = "NvimInvalidUnaryOperator" })
	hl(0, 'NvimInvalidNumber', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidNumberPrefix', { link = "NvimInvalidNumber" })
	hl(0, 'NvimInvalidOperator', { link = "NvimInvalid" })
	hl(0, 'NvimInvalidOptionName', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidOptionScope', { link = "NvimInvalidIdentifierScope" })
	hl(0, 'NvimInvalidOptionScopeDelimiter', { link = "NvimInvalidIdentifierScopeDelimiter" })
	hl(0, 'NvimInvalidOptionSigil', { link = "NvimInvalidIdentifier" })
	hl(0, 'NvimInvalidOr', { link = "NvimInvalidBinaryOperator" })
	hl(0, 'NvimInvalidParenthesis', { link = "NvimInvalidDelimiter" })
	hl(0, 'NvimInvalidPlainAssignment', { link = "NvimInvalidAssignment" })
	hl(0, 'NvimInvalidRegister', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidSingleQuote', { link = "NvimInvalidStringQuote" })
	hl(0, 'NvimInvalidSingleQuotedBody', { link = "NvimInvalidStringBody" })
	hl(0, 'NvimInvalidSingleQuotedQuote', { link = "NvimInvalidStringSpecial" })
	hl(0, 'NvimInvalidSingleQuotedUnknownEscape', { link = "NvimInternalError" })
	hl(0, 'NvimInvalidSpacing', { link = "ErrorMsg" })
	hl(0, 'NvimInvalidString', { link = "NvimInvalidValue" })
	hl(0, 'NvimInvalidStringBody', { link = "NvimStringBody" })
	hl(0, 'NvimInvalidStringQuote', { link = "NvimInvalidString" })
	hl(0, 'NvimInvalidStringSpecial', { link = "NvimStringSpecial" })
	hl(0, 'NvimInvalidSubscript', { link = "NvimInvalidParenthesis" })
	hl(0, 'NvimInvalidSubscriptBracket', { link = "NvimInvalidSubscript" })
	hl(0, 'NvimInvalidSubscriptColon', { link = "NvimInvalidSubscript" })
	hl(0, 'NvimInvalidTernary', { link = "NvimInvalidOperator" })
	hl(0, 'NvimInvalidTernaryColon', { link = "NvimInvalidTernary" })
	hl(0, 'NvimInvalidUnaryMinus', { link = "NvimInvalidUnaryOperator" })
	hl(0, 'NvimInvalidUnaryOperator', { link = "NvimInvalidOperator" })
	hl(0, 'NvimInvalidUnaryPlus', { link = "NvimInvalidUnaryOperator" })
	hl(0, 'NvimInvalidValue', { link = "NvimInvalid" })
	hl(0, 'NvimLambda', { link = "NvimParenthesis" })
	hl(0, 'NvimList', { link = "NvimContainer" })
	hl(0, 'NvimMod', { link = "NvimBinaryOperator" })
	hl(0, 'NvimMultiplication', { link = "NvimBinaryOperator" })
	hl(0, 'NvimNestingParenthesis', { link = "NvimParenthesis" })
	hl(0, 'NvimNot', { link = "NvimUnaryOperator" })
	hl(0, 'NvimNumber', { link = "Number" })
	hl(0, 'NvimNumberPrefix', { link = "Type" })
	hl(0, 'NvimOperator', { link = "Operator" })
	hl(0, 'NvimOptionName', { link = "NvimIdentifier" })
	hl(0, 'NvimOptionScope', { link = "NvimIdentifierScope" })
	hl(0, 'NvimOptionScopeDelimiter', { link = "NvimIdentifierScopeDelimiter" })
	hl(0, 'NvimOptionSigil', { link = "Type" })
	hl(0, 'NvimOr', { link = "NvimBinaryOperator" })
	hl(0, 'NvimParenthesis', { link = "Delimiter" })
	hl(0, 'NvimPlainAssignment', { link = "NvimAssignment" })
	hl(0, 'NvimRegister', { link = "SpecialChar" })
	hl(0, 'NvimSingleQuote', { link = "NvimStringQuote" })
	hl(0, 'NvimSingleQuotedBody', { link = "NvimStringBody" })
	hl(0, 'NvimSingleQuotedQuote', { link = "NvimStringSpecial" })
	hl(0, 'NvimSingleQuotedUnknownEscape', { link = "NvimInternalError" })
	hl(0, 'NvimSpacing', { link = "Normal" })
	hl(0, 'NvimString', { link = "String" })
	hl(0, 'NvimStringBody', { link = "NvimString" })
	hl(0, 'NvimStringQuote', { link = "NvimString" })
	hl(0, 'NvimStringSpecial', { link = "SpecialChar" })
	hl(0, 'NvimSubscript', { link = "NvimParenthesis" })
	hl(0, 'NvimSubscriptBracket', { link = "NvimSubscript" })
	hl(0, 'NvimSubscriptColon', { link = "NvimSubscript" })
	hl(0, 'NvimTernary', { link = "NvimOperator" })
	hl(0, 'NvimTernaryColon', { link = "NvimTernary" })
	hl(0, 'NvimTreeBookmark', { fg = 9281793 })
	hl(0, 'NvimTreeBookmarkHL', { link = "SpellLocal" })
	hl(0, 'NvimTreeClosedFolderIcon', { link = "NvimTreeFolderIcon" })
	hl(0, 'NvimTreeCopiedHL', { link = "SpellRare" })
	hl(0, 'NvimTreeCursorColumn', { link = "CursorColumn" })
	hl(0, 'NvimTreeCursorLine', { bg = 16643811 })
	hl(0, 'NvimTreeCursorLineNr', { link = "CursorLineNr" })
	hl(0, 'NvimTreeCutHL', { link = "SpellBad" })
	hl(0, 'NvimTreeEmptyFolderName', { link = "Green" })
	hl(0, 'NvimTreeEndOfBuffer', { bg = 15723476, fg = 15723476 })
	hl(0, 'NvimTreeExecFile', { link = "Fg" })
	hl(0, 'NvimTreeFileDeleted', { link = "NvimTreeGitDeleted" })
	hl(0, 'NvimTreeFileDirty', { link = "NvimTreeGitDirty" })
	hl(0, 'NvimTreeFileIgnored', { link = "NvimTreeGitIgnored" })
	hl(0, 'NvimTreeFileMerge', { link = "NvimTreeGitMerge" })
	hl(0, 'NvimTreeFileNew', { link = "NvimTreeGitNew" })
	hl(0, 'NvimTreeFileRenamed', { link = "NvimTreeGitRenamed" })
	hl(0, 'NvimTreeFileStaged', { link = "NvimTreeGitStaged" })
	hl(0, 'NvimTreeFolderDeleted', { link = "NvimTreeFileDeleted" })
	hl(0, 'NvimTreeFolderDirty', { link = "NvimTreeFileDirty" })
	hl(0, 'NvimTreeFolderIcon', { link = "Orange" })
	hl(0, 'NvimTreeFolderIgnored', { link = "NvimTreeFileIgnored" })
	hl(0, 'NvimTreeFolderMerge', { link = "NvimTreeFileMerge" })
	hl(0, 'NvimTreeFolderName', { link = "Green" })
	hl(0, 'NvimTreeFolderNew', { link = "NvimTreeFileNew" })
	hl(0, 'NvimTreeFolderRenamed', { link = "NvimTreeFileRenamed" })
	hl(0, 'NvimTreeFolderStaged', { link = "NvimTreeFileStaged" })
	hl(0, 'NvimTreeGitDeleted', { link = "Red" })
	hl(0, 'NvimTreeGitDirty', { link = "Yellow" })
	hl(0, 'NvimTreeGitIgnored', { link = "Comment" })
	hl(0, 'NvimTreeGitMerge', { link = "Orange" })
	hl(0, 'NvimTreeGitNew', { link = "Aqua" })
	hl(0, 'NvimTreeGitRenamed', { link = "Purple" })
	hl(0, 'NvimTreeGitStaged', { link = "Blue" })
	hl(0, 'NvimTreeImageFile', { link = "Fg" })
	hl(0, 'NvimTreeIndentMarker', { link = "Grey" })
	hl(0, 'NvimTreeLineNr', { link = "LineNr" })
	hl(0, 'NvimTreeLiveFilterPrefix', { bold = true, fg = 14641594 })
	hl(0, 'NvimTreeLiveFilterValue', { bold = true })
	hl(0, 'NvimTreeLspDiagnosticsError', { link = "RedSign" })
	hl(0, 'NvimTreeLspDiagnosticsErrorFolderText', { link = "NvimTreeLspDiagnosticsErrorText" })
	hl(0, 'NvimTreeLspDiagnosticsErrorText', { link = "NvimTreeLspDiagnosticsError" })
	hl(0, 'NvimTreeLspDiagnosticsHint', { link = "GreenSign" })
	hl(0, 'NvimTreeLspDiagnosticsHintFolderText', { link = "NvimTreeLspDiagnosticsHintFileText" })
	hl(0, 'NvimTreeLspDiagnosticsHintText', { link = "NvimTreeLspDiagnosticsHintFile" })
	hl(0, 'NvimTreeLspDiagnosticsInformation', { link = "BlueSign" })
	hl(0, 'NvimTreeLspDiagnosticsInformationFolderText', { link = "NvimTreeLspDiagnosticsInformationText" })
	hl(0, 'NvimTreeLspDiagnosticsInformationText', { link = "NvimTreeLspDiagnosticsInformation" })
	hl(0, 'NvimTreeLspDiagnosticsWarning', { link = "YellowSign" })
	hl(0, 'NvimTreeLspDiagnosticsWarningFolderText', { link = "NvimTreeLspDiagnosticsWarningText" })
	hl(0, 'NvimTreeLspDiagnosticsWarningText', { link = "NvimTreeLspDiagnosticsWarning" })
	hl(0, 'NvimTreeMarkdownFile', { link = "Fg" })
	hl(0, 'NvimTreeModifiedFile', { fg = 9281793 })
	hl(0, 'NvimTreeNormal', { bg = 15723476, fg = 6056562 })
	hl(0, 'NvimTreeNormalFloat', { link = "NormalFloat" })
	hl(0, 'NvimTreeNormalNC', { link = "NvimTreeNormal" })
	hl(0, 'NvimTreeOpenedFile', { link = "Fg" })
	hl(0, 'NvimTreeOpenedFileIcon', { link = "NvimTreeOpenedFile" })
	hl(0, 'NvimTreeOpenedFolderIcon', { link = "NvimTreeFolderIcon" })
	hl(0, 'NvimTreeOpenedFolderName', { link = "Green" })
	hl(0, 'NvimTreePopup', { link = "Normal" })
	hl(0, 'NvimTreeRootFolder', { link = "Grey" })
	hl(0, 'NvimTreeSignColumn', { link = "NvimTreeNormal" })
	hl(0, 'NvimTreeSpecialFile', { link = "Fg" })
	hl(0, 'NvimTreeStatusLine', { link = "StatusLine" })
	hl(0, 'NvimTreeStatusLineNC', { link = "StatusLineNC" })
	hl(0, 'NvimTreeSymlink', { link = "Fg" })
	hl(0, 'NvimTreeSymlinkFolderName', { link = "Directory" })
	hl(0, 'NvimTreeVertSplit', { bg = 16643811, fg = 16643811 })
	hl(0, 'NvimTreeWinSeparator', { link = "WinSeparator" })
	hl(0, 'NvimTreeWindowPicker', { bg = 4494280, bold = true, fg = 15592941 })
	hl(0, 'NvimUnaryMinus', { link = "NvimUnaryOperator" })
	hl(0, 'NvimUnaryOperator', { link = "NvimOperator" })
	hl(0, 'NvimUnaryPlus', { link = "NvimUnaryOperator" })
	hl(0, 'OctoBlue', { link = "Blue" })
	hl(0, 'OctoBlueFloat', { bg = 15723476, fg = 3839173 })
	hl(0, 'OctoBubbleBlue', { bg = 3839173, fg = 16643811 })
	hl(0, 'OctoBubbleDelimiterBlue', { link = "Blue" })
	hl(0, 'OctoBubbleDelimiterGreen', { link = "Green" })
	hl(0, 'OctoBubbleDelimiterGrey', { link = "Grey" })
	hl(0, 'OctoBubbleDelimiterPurple', { link = "Purple" })
	hl(0, 'OctoBubbleDelimiterRed', { link = "Red" })
	hl(0, 'OctoBubbleDelimiterYellow', { link = "Yellow" })
	hl(0, 'OctoBubbleGreen', { bg = 9281793, fg = 16643811 })
	hl(0, 'OctoBubbleGrey', { bg = 9674641, fg = 16643811 })
	hl(0, 'OctoBubblePurple', { bg = 14641594, fg = 16643811 })
	hl(0, 'OctoBubbleRed', { bg = 16274770, fg = 16643811 })
	hl(0, 'OctoBubbleYellow', { bg = 14655488, fg = 16643811 })
	hl(0, 'OctoGreen', { link = "Green" })
	hl(0, 'OctoGreenFloat', { bg = 15723476, fg = 9281793 })
	hl(0, 'OctoGrey', { link = "Grey" })
	hl(0, 'OctoGreyFloat', { bg = 15723476, fg = 9674641 })
	hl(0, 'OctoPurple', { link = "Purple" })
	hl(0, 'OctoPurpleFloat', { bg = 15723476, fg = 14641594 })
	hl(0, 'OctoRed', { link = "Red" })
	hl(0, 'OctoRedFloat', { bg = 15723476, fg = 16274770 })
	hl(0, 'OctoViewer', { bg = 3839173, fg = 16643811 })
	hl(0, 'OctoYellow', { link = "Yellow" })
	hl(0, 'OctoYellowFloat', { bg = 15723476, fg = 14655488 })
	hl(0, 'Operator', { fg = 16088358 })
	hl(0, 'Orange', { fg = 16088358 })
	hl(0, 'OrangeBold', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'OrangeItalic', { fg = 16088358 })
	hl(0, 'OrangeSign', { fg = 16088358 })
	hl(0, 'Pmenu', { bg = 15723476, fg = 6056562 })
	hl(0, 'PmenuExtra', { link = "Pmenu" })
	hl(0, 'PmenuExtraSel', { link = "PmenuSel" })
	hl(0, 'PmenuKind', { link = "Pmenu" })
	hl(0, 'PmenuKindSel', { link = "PmenuSel" })
	hl(0, 'PmenuSbar', { bg = 15723476 })
	hl(0, 'PmenuSel', { bg = 9679449, fg = 16643811 })
	hl(0, 'PmenuThumb', { bg = 10924192 })
	hl(0, 'PreCondit', { fg = 14641594 })
	hl(0, 'PreProc', { fg = 14641594 })
	hl(0, 'Purple', { fg = 14641594 })
	hl(0, 'PurpleBold', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'PurpleItalic', { fg = 14641594 })
	hl(0, 'PurpleSign', { fg = 14641594 })
	hl(0, 'Question', { fg = 14655488 })
	hl(0, 'QuickFixLine', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'QuickScopePrimary', { cterm = { underline = true }, fg = 3516284, underline = true })
	hl(0, 'QuickScopeSecondary', { cterm = { underline = true }, fg = 3839173, underline = true })
	hl(0, 'QuickmenuBracket', { link = "Grey" })
	hl(0, 'QuickmenuHeader', { link = "Orange" })
	hl(0, 'QuickmenuHelp', { link = "Green" })
	hl(0, 'QuickmenuNumber', { link = "Red" })
	hl(0, 'QuickmenuOption', { link = "Green" })
	hl(0, 'QuickmenuSpecial', { link = "Purple" })
	hl(0, 'RainbowDelimiterBlue', { link = "rainbowcol6" })
	hl(0, 'RainbowDelimiterCyan', { link = "rainbowcol5" })
	hl(0, 'RainbowDelimiterGreen', { link = "rainbowcol4" })
	hl(0, 'RainbowDelimiterOrange', { link = "rainbowcol2" })
	hl(0, 'RainbowDelimiterRed', { link = "rainbowcol1" })
	hl(0, 'RainbowDelimiterViolet', { link = "rainbowcol7" })
	hl(0, 'RainbowDelimiterYellow', { link = "rainbowcol3" })
	hl(0, 'RainbowLevel0', { link = "Red" })
	hl(0, 'RainbowLevel1', { link = "Orange" })
	hl(0, 'RainbowLevel2', { link = "Yellow" })
	hl(0, 'RainbowLevel3', { link = "Green" })
	hl(0, 'RainbowLevel4', { link = "Aqua" })
	hl(0, 'RainbowLevel5', { link = "Blue" })
	hl(0, 'RainbowLevel6', { link = "Purple" })
	hl(0, 'RainbowLevel7', { link = "Yellow" })
	hl(0, 'RainbowLevel8', { link = "Green" })
	hl(0, 'Red', { fg = 16274770 })
	hl(0, 'RedBold', { bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'RedItalic', { fg = 16274770 })
	hl(0, 'RedSign', { fg = 16274770 })
	hl(0, 'RedrawDebugClear', { bg = 16776960, ctermbg = 11 })
	hl(0, 'RedrawDebugComposed', { bg = 32768, ctermbg = 10 })
	hl(0, 'RedrawDebugNormal', { cterm = { reverse = true }, reverse = true })
	hl(0, 'RedrawDebugRecompose', { bg = 16711680, ctermbg = 9 })
	hl(0, 'RenameBorder', { link = "Purple" })
	hl(0, 'Repeat', { fg = 16274770 })
	hl(0, 'SagaBorder', { link = "Blue" })
	hl(0, 'ScrollbarError', { fg = 16274770 })
	hl(0, 'ScrollbarErrorHandle', { bg = 16052441, fg = 16274770 })
	hl(0, 'ScrollbarHandle', { bg = 16052441 })
	hl(0, 'ScrollbarHint', { fg = 3839173 })
	hl(0, 'ScrollbarHintHandle', { bg = 16052441, fg = 3839173 })
	hl(0, 'ScrollbarInfo', { fg = 9281793 })
	hl(0, 'ScrollbarInfoHandle', { bg = 16052441, fg = 9281793 })
	hl(0, 'ScrollbarMisc', { fg = 14641594 })
	hl(0, 'ScrollbarMiscHandle', { bg = 16052441, fg = 14641594 })
	hl(0, 'ScrollbarSearch', { fg = 16088358 })
	hl(0, 'ScrollbarSearchHandle', { bg = 16052441, fg = 16088358 })
	hl(0, 'ScrollbarWarn', { fg = 14655488 })
	hl(0, 'ScrollbarWarnHandle', { bg = 16052441, fg = 14655488 })
	hl(0, 'Search', { bg = 9281793, fg = 16643811 })
	hl(0, 'SignColumn', { fg = 6056562 })
	hl(0, 'SignatureMarkText', { link = "BlueSign" })
	hl(0, 'SignatureMarkerText', { link = "PurpleSign" })
	hl(0, 'SignifyLineAdd', { link = "DiffAdd" })
	hl(0, 'SignifyLineChange', { link = "DiffChange" })
	hl(0, 'SignifyLineChangeDelete', { link = "DiffChange" })
	hl(0, 'SignifyLineDelete', { link = "DiffDelete" })
	hl(0, 'SignifySignAdd', { link = "GreenSign" })
	hl(0, 'SignifySignChange', { link = "BlueSign" })
	hl(0, 'SignifySignChangeDelete', { link = "PurpleSign" })
	hl(0, 'SignifySignDelete', { link = "RedSign" })
	hl(0, 'Sneak', { link = "Search" })
	hl(0, 'SneakLabel', { link = "Search" })
	hl(0, 'SneakLabelMask', { bg = 16088358, fg = 16088358 })
	hl(0, 'SneakScope', { link = "DiffText" })
	hl(0, 'Special', { fg = 14655488 })
	hl(0, 'SpecialChar', { fg = 14655488 })
	hl(0, 'SpecialComment', { cterm = { italic = true }, fg = 9674641, italic = true })
	hl(0, 'SpecialKey', { fg = 15131340 })
	hl(0, 'SpellBad', { cterm = { undercurl = true }, sp = 16274770, undercurl = true })
	hl(0, 'SpellCap', { cterm = { undercurl = true }, sp = 3839173, undercurl = true })
	hl(0, 'SpellLocal', { cterm = { undercurl = true }, sp = 3516284, undercurl = true })
	hl(0, 'SpellRare', { cterm = { undercurl = true }, sp = 14641594, undercurl = true })
	hl(0, 'StartifyBracket', { link = "Grey" })
	hl(0, 'StartifyFile', { link = "Fg" })
	hl(0, 'StartifyFooter', { link = "Grey" })
	hl(0, 'StartifyHeader', { link = "Aqua" })
	hl(0, 'StartifyNumber', { link = "Orange" })
	hl(0, 'StartifyPath', { link = "Green" })
	hl(0, 'StartifySection', { link = "Yellow" })
	hl(0, 'StartifySlash', { link = "Green" })
	hl(0, 'StartifySpecial', { link = "Grey" })
	hl(0, 'Statement', { fg = 16274770 })
	hl(0, 'StatusLine', { bg = 15723476, fg = 9674641 })
	hl(0, 'StatusLineNC', { bg = 16052441, fg = 9674641 })
	hl(0, 'StatusLineTerm', { bg = 16052441, fg = 9674641 })
	hl(0, 'StatusLineTermNC', { bg = 16643811, fg = 9674641 })
	hl(0, 'StorageClass', { fg = 16088358 })
	hl(0, 'String', { fg = 9281793 })
	hl(0, 'Structure', { fg = 16088358 })
	hl(0, 'Substitute', { bg = 14655488, fg = 16643811 })
	hl(0, 'SyntasticError', { link = "ErrorText" })
	hl(0, 'SyntasticErrorLine', { link = "ErrorLine" })
	hl(0, 'SyntasticErrorSign', { link = "RedSign" })
	hl(0, 'SyntasticWarning', { link = "WarningText" })
	hl(0, 'SyntasticWarningLine', { link = "WarningLine" })
	hl(0, 'SyntasticWarningSign', { link = "YellowSign" })
	hl(0, 'TSAnnotation', { link = "Purple" })
	hl(0, 'TSAttribute', { link = "Purple" })
	hl(0, 'TSBoolean', { link = "Purple" })
	hl(0, 'TSCharacter', { link = "Aqua" })
	hl(0, 'TSCharacterSpecial', { link = "SpecialChar" })
	hl(0, 'TSComment', { link = "Comment" })
	hl(0, 'TSConditional', { link = "Red" })
	hl(0, 'TSConstBuiltin', { link = "PurpleItalic" })
	hl(0, 'TSConstMacro', { link = "PurpleItalic" })
	hl(0, 'TSConstant', { link = "Constant" })
	hl(0, 'TSConstructor', { link = "Green" })
	hl(0, 'TSDanger', { bg = 16274770, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'TSDebug', { link = "Debug" })
	hl(0, 'TSDefine', { link = "Define" })
	hl(0, 'TSEmphasis', { cterm = { italic = true }, italic = true })
	hl(0, 'TSEnvironment', { link = "Macro" })
	hl(0, 'TSEnvironmentName', { link = "Type" })
	hl(0, 'TSError', { link = "Error" })
	hl(0, 'TSException', { link = "Red" })
	hl(0, 'TSField', { link = "Blue" })
	hl(0, 'TSFloat', { link = "Purple" })
	hl(0, 'TSFuncBuiltin', { link = "Green" })
	hl(0, 'TSFuncMacro', { link = "Green" })
	hl(0, 'TSFunction', { link = "Green" })
	hl(0, 'TSFunctionCall', { link = "Green" })
	hl(0, 'TSInclude', { link = "Red" })
	hl(0, 'TSKeyword', { link = "Red" })
	hl(0, 'TSKeywordFunction', { link = "Red" })
	hl(0, 'TSKeywordOperator', { link = "Orange" })
	hl(0, 'TSKeywordReturn', { link = "Red" })
	hl(0, 'TSLabel', { link = "Orange" })
	hl(0, 'TSLiteral', { link = "String" })
	hl(0, 'TSMath', { link = "Blue" })
	hl(0, 'TSMethod', { link = "Green" })
	hl(0, 'TSMethodCall', { link = "Green" })
	hl(0, 'TSModuleInfoBad', { link = "Red" })
	hl(0, 'TSModuleInfoGood', { link = "Green" })
	hl(0, 'TSNamespace', { link = "YellowItalic" })
	hl(0, 'TSNone', { link = "Fg" })
	hl(0, 'TSNote', { bg = 3839173, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'TSNumber', { link = "Purple" })
	hl(0, 'TSOperator', { link = "Orange" })
	hl(0, 'TSParameter', { link = "Fg" })
	hl(0, 'TSParameterReference', { link = "Fg" })
	hl(0, 'TSPreProc', { link = "PreProc" })
	hl(0, 'TSProperty', { link = "Blue" })
	hl(0, 'TSPunctBracket', { link = "Fg" })
	hl(0, 'TSPunctDelimiter', { link = "Grey" })
	hl(0, 'TSPunctSpecial', { link = "Blue" })
	hl(0, 'TSRainbowBlue', { link = "rainbowcol6" })
	hl(0, 'TSRainbowCyan', { link = "rainbowcol5" })
	hl(0, 'TSRainbowGreen', { link = "rainbowcol4" })
	hl(0, 'TSRainbowOrange', { link = "rainbowcol2" })
	hl(0, 'TSRainbowRed', { link = "rainbowcol1" })
	hl(0, 'TSRainbowViolet', { link = "rainbowcol7" })
	hl(0, 'TSRainbowYellow', { link = "rainbowcol3" })
	hl(0, 'TSRepeat', { link = "Red" })
	hl(0, 'TSStorageClass', { link = "Orange" })
	hl(0, 'TSStorageClassLifetime', { link = "Orange" })
	hl(0, 'TSStrike', { cterm = { strikethrough = true }, strikethrough = true })
	hl(0, 'TSString', { link = "Aqua" })
	hl(0, 'TSStringEscape', { link = "Green" })
	hl(0, 'TSStringRegex', { link = "Green" })
	hl(0, 'TSStringSpecial', { link = "SpecialChar" })
	hl(0, 'TSStrong', { bold = true, cterm = { bold = true } })
	hl(0, 'TSSymbol', { link = "Aqua" })
	hl(0, 'TSTag', { link = "Orange" })
	hl(0, 'TSTagAttribute', { link = "Green" })
	hl(0, 'TSTagDelimiter', { link = "Green" })
	hl(0, 'TSText', { link = "Green" })
	hl(0, 'TSTextReference', { link = "Constant" })
	hl(0, 'TSTitle', { link = "Title" })
	hl(0, 'TSTodo', { link = "Todo" })
	hl(0, 'TSType', { link = "YellowItalic" })
	hl(0, 'TSTypeBuiltin', { link = "YellowItalic" })
	hl(0, 'TSTypeDefinition', { link = "YellowItalic" })
	hl(0, 'TSTypeQualifier', { link = "Orange" })
	hl(0, 'TSURI', { link = "markdownUrl" })
	hl(0, 'TSUnderline', { cterm = { underline = true }, underline = true })
	hl(0, 'TSVariable', { link = "Fg" })
	hl(0, 'TSVariableBuiltin', { link = "PurpleItalic" })
	hl(0, 'TSWarning', { bg = 14655488, bold = true, cterm = { bold = true }, fg = 16643811 })
	hl(0, 'TabLine', { bg = 15131340, fg = 8556929 })
	hl(0, 'TabLineFill', { bg = 16052441, fg = 9674641 })
	hl(0, 'TabLineSel', { bg = 9679449, fg = 16643811 })
	hl(0, 'Tag', { fg = 16088358 })
	hl(0, 'TagbarFoldIcon', { link = "Green" })
	hl(0, 'TagbarKind', { link = "Red" })
	hl(0, 'TagbarNestedKind', { link = "Aqua" })
	hl(0, 'TagbarScope', { link = "Orange" })
	hl(0, 'TagbarSignature', { link = "Green" })
	hl(0, 'TagbarVisibilityPrivate', { link = "Red" })
	hl(0, 'TagbarVisibilityPublic', { link = "Blue" })
	hl(0, 'TelescopeBorder', { link = "Grey" })
	hl(0, 'TelescopeMatching', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'TelescopeMultiIcon', { link = "Identifier" })
	hl(0, 'TelescopeMultiSelection', { link = "Type" })
	hl(0, 'TelescopeNormal', { link = "Normal" })
	hl(0, 'TelescopePreviewBlock', { link = "Constant" })
	hl(0, 'TelescopePreviewBorder', { link = "TelescopeBorder" })
	hl(0, 'TelescopePreviewCharDev', { link = "Constant" })
	hl(0, 'TelescopePreviewDate', { link = "Directory" })
	hl(0, 'TelescopePreviewDirectory', { link = "Directory" })
	hl(0, 'TelescopePreviewExecute', { link = "String" })
	hl(0, 'TelescopePreviewGroup', { link = "Constant" })
	hl(0, 'TelescopePreviewHyphen', { link = "NonText" })
	hl(0, 'TelescopePreviewLine', { link = "Visual" })
	hl(0, 'TelescopePreviewLink', { link = "Special" })
	hl(0, 'TelescopePreviewMatch', { link = "Search" })
	hl(0, 'TelescopePreviewMessage', { link = "TelescopePreviewNormal" })
	hl(0, 'TelescopePreviewMessageFillchar', { link = "TelescopePreviewMessage" })
	hl(0, 'TelescopePreviewNormal', { link = "TelescopeNormal" })
	hl(0, 'TelescopePreviewPipe', { link = "Constant" })
	hl(0, 'TelescopePreviewRead', { link = "Constant" })
	hl(0, 'TelescopePreviewSize', { link = "String" })
	hl(0, 'TelescopePreviewSocket', { link = "Statement" })
	hl(0, 'TelescopePreviewSticky', { link = "Keyword" })
	hl(0, 'TelescopePreviewTitle', { link = "TelescopeTitle" })
	hl(0, 'TelescopePreviewUser', { link = "Constant" })
	hl(0, 'TelescopePreviewWrite', { link = "Statement" })
	hl(0, 'TelescopePromptBorder', { link = "TelescopeBorder" })
	hl(0, 'TelescopePromptCounter', { link = "NonText" })
	hl(0, 'TelescopePromptNormal', { link = "TelescopeNormal" })
	hl(0, 'TelescopePromptPrefix', { link = "Orange" })
	hl(0, 'TelescopePromptTitle', { link = "TelescopeTitle" })
	hl(0, 'TelescopeResultsBorder', { link = "TelescopeBorder" })
	hl(0, 'TelescopeResultsClass', vim.empty_dict())
	hl(0, 'TelescopeResultsComment', { link = "Comment" })
	hl(0, 'TelescopeResultsConstant', { link = "Constant" })
	hl(0, 'TelescopeResultsDiffAdd', { link = "DiffAdd" })
	hl(0, 'TelescopeResultsDiffChange', { link = "DiffChange" })
	hl(0, 'TelescopeResultsDiffDelete', { link = "DiffDelete" })
	hl(0, 'TelescopeResultsDiffUntracked', { link = "NonText" })
	hl(0, 'TelescopeResultsField', vim.empty_dict())
	hl(0, 'TelescopeResultsFunction', { link = "Function" })
	hl(0, 'TelescopeResultsIdentifier', { link = "Identifier" })
	hl(0, 'TelescopeResultsLineNr', { link = "LineNr" })
	hl(0, 'TelescopeResultsMethod', vim.empty_dict())
	hl(0, 'TelescopeResultsNormal', { link = "TelescopeNormal" })
	hl(0, 'TelescopeResultsNumber', { link = "Number" })
	hl(0, 'TelescopeResultsOperator', { link = "Operator" })
	hl(0, 'TelescopeResultsSpecialComment', { link = "SpecialComment" })
	hl(0, 'TelescopeResultsStruct', vim.empty_dict())
	hl(0, 'TelescopeResultsTitle', { link = "TelescopeTitle" })
	hl(0, 'TelescopeResultsVariable', vim.empty_dict())
	hl(0, 'TelescopeSelection', { link = "DiffAdd" })
	hl(0, 'TelescopeSelectionCaret', vim.empty_dict())
	hl(0, 'TermCursor', { link = "Cursor" })
	hl(0, 'Terminal', { bg = 16643811, fg = 6056562 })
	hl(0, 'Title', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'Todo', { cterm = { italic = true }, fg = 14641594, italic = true })
	hl(0, 'ToolbarButton', { bg = 9281793, fg = 16643811 })
	hl(0, 'ToolbarLine', { bg = 15723476, fg = 6056562 })
	hl(0, 'TreesitterContext', vim.empty_dict())
	hl(0, 'TroubleCode', { link = "Grey" })
	hl(0, 'TroubleSource', { link = "Grey" })
	hl(0, 'TroubleText', { link = "Fg" })
	hl(0, 'Type', { fg = 14655488 })
	hl(0, 'Typedef', { fg = 16274770 })
	hl(0, 'Underlined', { cterm = { underline = true }, underline = true })
	hl(0, 'UndotreeBranch', { link = "Yellow" })
	hl(0, 'UndotreeCurrent', { link = "Aqua" })
	hl(0, 'UndotreeHead', { link = "Yellow" })
	hl(0, 'UndotreeNext', { link = "Blue" })
	hl(0, 'UndotreeNode', { link = "Orange" })
	hl(0, 'UndotreeNodeCurrent', { link = "Red" })
	hl(0, 'UndotreeSavedBig', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'UndotreeSavedSmall', { link = "Purple" })
	hl(0, 'UndotreeSeq', { link = "Green" })
	hl(0, 'UndotreeTimeStamp', { link = "Grey" })
	hl(0, 'VertSplit', { fg = 14736583 })
	hl(0, 'VirtualTextError', { link = "Red" })
	hl(0, 'VirtualTextHint', { link = "Green" })
	hl(0, 'VirtualTextInfo', { link = "Blue" })
	hl(0, 'VirtualTextWarning', { link = "Yellow" })
	hl(0, 'VistaBracket', { link = "Grey" })
	hl(0, 'VistaChildrenNr', { link = "Orange" })
	hl(0, 'VistaColon', { link = "Grey" })
	hl(0, 'VistaHeadNr', { link = "Fg" })
	hl(0, 'VistaIcon', { link = "Orange" })
	hl(0, 'VistaLineNr', { link = "Grey" })
	hl(0, 'VistaPrefix', { link = "Grey" })
	hl(0, 'VistaPrivate', { link = "Red" })
	hl(0, 'VistaProtected', { link = "Yellow" })
	hl(0, 'VistaPublic', { link = "Green" })
	hl(0, 'VistaScope', { link = "Red" })
	hl(0, 'VistaScopeKind', { link = "Yellow" })
	hl(0, 'VistaTag', { link = "Green" })
	hl(0, 'Visual', { bg = 15396296 })
	hl(0, 'VisualNOS', { bg = 15396296 })
	hl(0, 'WarningFloat', { fg = 14655488 })
	hl(0, 'WarningLine', vim.empty_dict())
	hl(0, 'WarningMsg', { bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'WarningText', { cterm = { undercurl = true }, sp = 14655488, undercurl = true })
	hl(0, 'WhichKey', { link = "Red" })
	hl(0, 'WhichKeyDesc', { link = "Blue" })
	hl(0, 'WhichKeyFloat', { bg = 16052441 })
	hl(0, 'WhichKeyGroup', { link = "Yellow" })
	hl(0, 'WhichKeySeparator', { link = "Green" })
	hl(0, 'WhichKeyValue', { fg = 6056562 })
	hl(0, 'Whitespace', { fg = 14736583 })
	hl(0, 'WildMenu', { link = "PmenuSel" })
	hl(0, 'WinBar', { bold = true, cterm = { bold = true } })
	hl(0, 'WinBarNC', { link = "Grey" })
	hl(0, 'WinSeparator', { link = "VertSplit" })
	hl(0, 'YankyPut', { link = "IncSearch" })
	hl(0, 'YankyYanked', { link = "IncSearch" })
	hl(0, 'YcmErrorLine', { link = "ErrorLine" })
	hl(0, 'YcmErrorSection', { link = "ErrorText" })
	hl(0, 'YcmErrorSign', { link = "RedSign" })
	hl(0, 'YcmInlayHint', { link = "LineNr" })
	hl(0, 'YcmWarningLine', { link = "WarningLine" })
	hl(0, 'YcmWarningSection', { link = "WarningText" })
	hl(0, 'YcmWarningSign', { link = "YellowSign" })
	hl(0, 'Yellow', { fg = 14655488 })
	hl(0, 'YellowBold', { bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'YellowItalic', { fg = 14655488 })
	hl(0, 'YellowSign', { fg = 14655488 })
	hl(0, 'agitDate', { link = "Green" })
	hl(0, 'agitDiffAdd', { link = "Green" })
	hl(0, 'agitDiffHeader', { link = "Purple" })
	hl(0, 'agitDiffRemove', { link = "Red" })
	hl(0, 'agitHead', { link = "Orange" })
	hl(0, 'agitRef', { link = "Aqua" })
	hl(0, 'agitRemote', { link = "Red" })
	hl(0, 'agitStatAdded', { link = "Green" })
	hl(0, 'agitStatFile', { link = "Blue" })
	hl(0, 'agitStatMessage', { link = "Orange" })
	hl(0, 'agitStatRemoved', { link = "Red" })
	hl(0, 'agitTag', { link = "Orange" })
	hl(0, 'agitTree', { link = "Grey" })
	hl(0, 'bashStatement', { link = "Orange" })
	hl(0, 'cssAttr', { link = "Orange" })
	hl(0, 'cssAttrComma', { link = "Fg" })
	hl(0, 'cssAttributeSelector', { link = "Aqua" })
	hl(0, 'cssBraces', { link = "Fg" })
	hl(0, 'cssClassName', { link = "RedItalic" })
	hl(0, 'cssClassNameDot', { link = "Red" })
	hl(0, 'cssColor', { link = "Green" })
	hl(0, 'cssCommonAttr', { link = "Yellow" })
	hl(0, 'cssFunctionName', { link = "Yellow" })
	hl(0, 'cssImportant', { link = "RedItalic" })
	hl(0, 'cssNoise', { link = "Grey" })
	hl(0, 'cssProp', { link = "Aqua" })
	hl(0, 'cssPseudoClass', { link = "Purple" })
	hl(0, 'cssPseudoClassFn', { link = "Green" })
	hl(0, 'cssPseudoClassId', { link = "Blue" })
	hl(0, 'cssSelectorOp', { link = "Orange" })
	hl(0, 'cssSelectorOp2', { link = "Orange" })
	hl(0, 'cssTagName', { link = "PurpleItalic" })
	hl(0, 'cssUnitDecorators', { link = "Orange" })
	hl(0, 'cssValueAngle', { link = "Green" })
	hl(0, 'cssValueFrequency', { link = "Green" })
	hl(0, 'cssValueInteger', { link = "Green" })
	hl(0, 'cssValueLength', { link = "Green" })
	hl(0, 'cssValueNumber', { link = "Green" })
	hl(0, 'cssValueTime', { link = "Green" })
	hl(0, 'cssVendor', { link = "Grey" })
	hl(0, 'debugBreakpoint', { bg = 16274770, fg = 16643811 })
	hl(0, 'debugPC', { bg = 9281793, fg = 16643811 })
	hl(0, 'deniteInput', { bg = 15131340, bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'deniteMatchedChar', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'deniteMatchedRange', { bold = true, cterm = { bold = true, underline = true }, fg = 9281793, underline = true })
	hl(0, 'deniteSelectedLin', { link = "Green" })
	hl(0, 'deniteStatusLineNumber', { bg = 15131340, fg = 14641594 })
	hl(0, 'deniteStatusLinePath', { bg = 15131340, fg = 6056562 })
	hl(0, 'diffAdded', { link = "Green" })
	hl(0, 'diffChanged', { link = "Blue" })
	hl(0, 'diffFile', { link = "Aqua" })
	hl(0, 'diffIndexLine', { link = "Purple" })
	hl(0, 'diffLine', { link = "Grey" })
	hl(0, 'diffNewFile', { link = "Orange" })
	hl(0, 'diffOldFile', { link = "Yellow" })
	hl(0, 'diffRemoved', { link = "Red" })
	hl(0, 'elixirBlockDefinition', { link = "RedItalic" })
	hl(0, 'elixirCallbackDefine', { link = "RedItalic" })
	hl(0, 'elixirDefine', { link = "RedItalic" })
	hl(0, 'elixirDelegateDefine', { link = "RedItalic" })
	hl(0, 'elixirExUnitMacro', { link = "RedItalic" })
	hl(0, 'elixirExceptionDefine', { link = "RedItalic" })
	hl(0, 'elixirGuard', { link = "RedItalic" })
	hl(0, 'elixirImplDefine', { link = "RedItalic" })
	hl(0, 'elixirInterpolation', { link = "Yellow" })
	hl(0, 'elixirInterpolationDelimiter', { link = "Yellow" })
	hl(0, 'elixirKeyword', { link = "Orange" })
	hl(0, 'elixirMacroDefine', { link = "RedItalic" })
	hl(0, 'elixirModuleDefine', { link = "PurpleItalic" })
	hl(0, 'elixirOverridableDefine', { link = "RedItalic" })
	hl(0, 'elixirPrivateDefine', { link = "RedItalic" })
	hl(0, 'elixirPrivateGuard', { link = "RedItalic" })
	hl(0, 'elixirPrivateMacroDefine', { link = "RedItalic" })
	hl(0, 'elixirPrivateRecordDefine', { link = "RedItalic" })
	hl(0, 'elixirProtocolDefine', { link = "RedItalic" })
	hl(0, 'elixirPseudoVariable', { link = "Purple" })
	hl(0, 'elixirRecordDefine', { link = "RedItalic" })
	hl(0, 'elixirSelf', { link = "Purple" })
	hl(0, 'elixirStringDelimiter', { link = "Green" })
	hl(0, 'elixirStructDefine', { link = "RedItalic" })
	hl(0, 'gitcommitArrow', { link = "Grey" })
	hl(0, 'gitcommitDiscarded', { link = "Grey" })
	hl(0, 'gitcommitFile', { link = "Green" })
	hl(0, 'gitcommitOnBranch', { link = "Grey" })
	hl(0, 'gitcommitSelected', { link = "Grey" })
	hl(0, 'gitcommitSummary', { link = "Green" })
	hl(0, 'gitcommitUnmerged', { link = "Grey" })
	hl(0, 'gitcommitUntracked', { link = "Grey" })
	hl(0, 'goBuiltins', { link = "Function" })
	hl(0, 'goComplexes', { link = "goType" })
	hl(0, 'goConst', { link = "goVar" })
	hl(0, 'goDeclType', { link = "OrangeItalic" })
	hl(0, 'goFloats', { link = "goType" })
	hl(0, 'goFunctionCall', { link = "Function" })
	hl(0, 'goImport', { link = "Include" })
	hl(0, 'goPackage', { link = "Define" })
	hl(0, 'goPredefinedIdentifiers', { link = "Aqua" })
	hl(0, 'goSignedInts', { link = "goType" })
	hl(0, 'goTSConstBuiltin', { link = "AquaItalic" })
	hl(0, 'goTSInclude', { link = "Purple" })
	hl(0, 'goTSNamespace', { link = "Fg" })
	hl(0, 'goType', { link = "Yellow" })
	hl(0, 'goUnsignedInts', { link = "goType" })
	hl(0, 'goVar', { link = "OrangeItalic" })
	hl(0, 'goVarArgs', { link = "Grey" })
	hl(0, 'goVarDefs', { link = "Aqua" })
	hl(0, 'healthError', { link = "Red" })
	hl(0, 'healthSuccess', { link = "Green" })
	hl(0, 'healthWarning', { link = "Yellow" })
	hl(0, 'helpCommand', { link = "Aqua" })
	hl(0, 'helpExample', { link = "Green" })
	hl(0, 'helpHeader', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'helpHeadline', { bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'helpHyperTextEntry', { bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'helpHyperTextJump', { link = "Yellow" })
	hl(0, 'helpNote', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'helpSectionDelim', { link = "Grey" })
	hl(0, 'helpSpecial', { link = "Blue" })
	hl(0, 'helpURL', { cterm = { underline = true }, fg = 9281793, underline = true })
	hl(0, 'htmlArg', { link = "Aqua" })
	hl(0, 'htmlBold', { bold = true, cterm = { bold = true } })
	hl(0, 'htmlBoldItalic', { bold = true, cterm = { bold = true, italic = true }, italic = true })
	hl(0, 'htmlBoldUnderline', { bold = true, cterm = { bold = true, underline = true }, underline = true })
	hl(0, 'htmlBoldUnderlineItalic', { bold = true, cterm = { bold = true, italic = true, underline = true }, italic = true, underline = true })
	hl(0, 'htmlEndTag', { link = "Blue" })
	hl(0, 'htmlH1', { bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'htmlH2', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'htmlH3', { bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'htmlH4', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'htmlH5', { bold = true, cterm = { bold = true }, fg = 3839173 })
	hl(0, 'htmlH6', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'htmlItalic', { cterm = { italic = true }, italic = true })
	hl(0, 'htmlLink', { cterm = { underline = true }, underline = true })
	hl(0, 'htmlScriptTag', { link = "Purple" })
	hl(0, 'htmlSpecialTagName', { link = "RedItalic" })
	hl(0, 'htmlTSText', { link = "TSNone" })
	hl(0, 'htmlTag', { link = "Green" })
	hl(0, 'htmlTagN', { link = "OrangeItalic" })
	hl(0, 'htmlTagName', { link = "OrangeItalic" })
	hl(0, 'htmlUnderline', { cterm = { underline = true }, underline = true })
	hl(0, 'htmlUnderlineItalic', { cterm = { italic = true, underline = true }, italic = true, underline = true })
	hl(0, 'illuminatedWord', { link = "CurrentWord" })
	hl(0, 'javaAnnotation', { link = "Blue" })
	hl(0, 'javaClassDecl', { link = "RedItalic" })
	hl(0, 'javaMethodDecl', { link = "RedItalic" })
	hl(0, 'javaParen', { link = "Fg" })
	hl(0, 'javaParen1', { link = "Fg" })
	hl(0, 'javaParen2', { link = "Fg" })
	hl(0, 'javaParen3', { link = "Fg" })
	hl(0, 'javaParen4', { link = "Fg" })
	hl(0, 'javaParen5', { link = "Fg" })
	hl(0, 'javaScriptFunction', { link = "Keyword" })
	hl(0, 'javaScriptGlobal', { link = "Purple" })
	hl(0, 'javaScriptIdentifier', { link = "Orange" })
	hl(0, 'javaScriptMember', { link = "Aqua" })
	hl(0, 'javaScriptMessage', { link = "Yellow" })
	hl(0, 'javaScriptNull', { link = "Aqua" })
	hl(0, 'javaScriptNumber', { link = "Number" })
	hl(0, 'javaScriptOperator', { link = "Orange" })
	hl(0, 'javaTypedef', { link = "Aqua" })
	hl(0, 'javaUserLabel', { link = "Purple" })
	hl(0, 'javaVarArg', { link = "Green" })
	hl(0, 'javascriptTSInclude', { link = "Purple" })
	hl(0, 'jsonKeyword', { link = "Green" })
	hl(0, 'jsonQuote', { link = "Grey" })
	hl(0, 'jsonString', { link = "Fg" })
	hl(0, 'jsonTSLabel', { link = "jsonKeyword" })
	hl(0, 'jsonTSString', { link = "jsonString" })
	hl(0, 'jsonTSStringEscape', { link = "SpecialChar" })
	hl(0, 'lCursor', { link = "Cursor" })
	hl(0, 'lessAmpersandChar', { link = "Orange" })
	hl(0, 'lessClass', { link = "RedItalic" })
	hl(0, 'lessFunction', { link = "Yellow" })
	hl(0, 'lessMixinChar', { link = "Grey" })
	hl(0, 'lessVariable', { link = "Blue" })
	hl(0, 'lspInlayHintsParameter', { link = "LineNr" })
	hl(0, 'lspInlayHintsType', { link = "LineNr" })
	hl(0, 'lspReference', { link = "CurrentWord" })
	hl(0, 'luaBraces', { link = "Fg" })
	hl(0, 'luaComment', { link = "Comment" })
	hl(0, 'luaCommentDelimiter', { link = "luaComment" })
	hl(0, 'luaCond', { link = "Conditional" })
	hl(0, 'luaCondElse', { link = "Conditional" })
	hl(0, 'luaConstant', { link = "Constant" })
	hl(0, 'luaError', { link = "Error" })
	hl(0, 'luaFor', { link = "Repeat" })
	hl(0, 'luaFunc', { link = "Green" })
	hl(0, 'luaFunction', { link = "Aqua" })
	hl(0, 'luaIn', { link = "RedItalic" })
	hl(0, 'luaLabel', { link = "Label" })
	hl(0, 'luaMetaMethod', { link = "Function" })
	hl(0, 'luaNumber', { link = "Number" })
	hl(0, 'luaOperator', { link = "Operator" })
	hl(0, 'luaParenError', { link = "Error" })
	hl(0, 'luaRepeat', { link = "Repeat" })
	hl(0, 'luaSpecial', { link = "SpecialChar" })
	hl(0, 'luaStatement', { link = "Statement" })
	hl(0, 'luaString', { link = "String" })
	hl(0, 'luaString2', { link = "String" })
	hl(0, 'luaStringDelimiter', { link = "luaString" })
	hl(0, 'luaSymbolOperator', { link = "luaOperator" })
	hl(0, 'luaTSConstructor', { link = "luaBraces" })
	hl(0, 'luaTable', { link = "Fg" })
	hl(0, 'luaTodo', { link = "Todo" })
	hl(0, 'lualine_a_command', { bg = 3516284, bold = true, fg = 16643811 })
	hl(0, 'lualine_a_inactive', { bg = 16052441, fg = 9674641 })
	hl(0, 'lualine_a_insert', { bg = 7372937, bold = true, fg = 16643811 })
	hl(0, 'lualine_a_normal', { bg = 9679449, bold = true, fg = 16643811 })
	hl(0, 'lualine_a_replace', { bg = 16088358, bold = true, fg = 16643811 })
	hl(0, 'lualine_a_terminal', { bg = 14641594, bold = true, fg = 16643811 })
	hl(0, 'lualine_a_visual', { bg = 15100008, bold = true, fg = 16643811 })
	hl(0, 'lualine_b_command', { bg = 15131340, fg = 6056562 })
	hl(0, 'lualine_b_diagnostics_error_command', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diagnostics_error_inactive', { bg = 16052441, fg = 16274770 })
	hl(0, 'lualine_b_diagnostics_error_insert', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diagnostics_error_normal', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diagnostics_error_replace', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diagnostics_error_terminal', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diagnostics_error_visual', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diagnostics_hint_command', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diagnostics_hint_inactive', { bg = 16052441, fg = 9281793 })
	hl(0, 'lualine_b_diagnostics_hint_insert', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diagnostics_hint_normal', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diagnostics_hint_replace', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diagnostics_hint_terminal', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diagnostics_hint_visual', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diagnostics_info_command', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diagnostics_info_inactive', { bg = 16052441, fg = 3839173 })
	hl(0, 'lualine_b_diagnostics_info_insert', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diagnostics_info_normal', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diagnostics_info_replace', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diagnostics_info_terminal', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diagnostics_info_visual', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diagnostics_warn_command', { bg = 15131340, fg = 14655488 })
	hl(0, 'lualine_b_diagnostics_warn_inactive', { bg = 16052441, fg = 14655488 })
	hl(0, 'lualine_b_diagnostics_warn_insert', { bg = 15131340, fg = 14655488 })
	hl(0, 'lualine_b_diagnostics_warn_normal', { bg = 15131340, fg = 14655488 })
	hl(0, 'lualine_b_diagnostics_warn_replace', { bg = 15131340, fg = 14655488 })
	hl(0, 'lualine_b_diagnostics_warn_terminal', { bg = 15131340, fg = 14655488 })
	hl(0, 'lualine_b_diagnostics_warn_visual', { bg = 15131340, fg = 14655488 })
	hl(0, 'lualine_b_diff_added_command', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diff_added_inactive', { bg = 16052441, fg = 9281793 })
	hl(0, 'lualine_b_diff_added_insert', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diff_added_normal', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diff_added_replace', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diff_added_terminal', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diff_added_visual', { bg = 15131340, fg = 9281793 })
	hl(0, 'lualine_b_diff_modified_command', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diff_modified_inactive', { bg = 16052441, fg = 3839173 })
	hl(0, 'lualine_b_diff_modified_insert', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diff_modified_normal', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diff_modified_replace', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diff_modified_terminal', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diff_modified_visual', { bg = 15131340, fg = 3839173 })
	hl(0, 'lualine_b_diff_removed_command', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diff_removed_inactive', { bg = 16052441, fg = 16274770 })
	hl(0, 'lualine_b_diff_removed_insert', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diff_removed_normal', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diff_removed_replace', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diff_removed_terminal', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_diff_removed_visual', { bg = 15131340, fg = 16274770 })
	hl(0, 'lualine_b_inactive', { bg = 16052441, fg = 9674641 })
	hl(0, 'lualine_b_insert', { bg = 15131340, fg = 6056562 })
	hl(0, 'lualine_b_normal', { bg = 15131340, fg = 8556929 })
	hl(0, 'lualine_b_replace', { bg = 15131340, fg = 6056562 })
	hl(0, 'lualine_b_terminal', { bg = 15131340, fg = 6056562 })
	hl(0, 'lualine_b_visual', { bg = 15131340, fg = 6056562 })
	hl(0, 'lualine_c_command', { bg = 16052441, fg = 6056562 })
	hl(0, 'lualine_c_inactive', { bg = 16052441, fg = 9674641 })
	hl(0, 'lualine_c_insert', { bg = 16052441, fg = 6056562 })
	hl(0, 'lualine_c_normal', { bg = 16052441, fg = 9674641 })
	hl(0, 'lualine_c_replace', { bg = 16052441, fg = 6056562 })
	hl(0, 'lualine_c_terminal', { bg = 16052441, fg = 6056562 })
	hl(0, 'lualine_c_visual', { bg = 16052441, fg = 6056562 })
	hl(0, 'lualine_transitional_lualine_a_command_to_lualine_b_command', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_a_command_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_a_insert_to_lualine_b_insert', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_a_normal_to_lualine_b_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_a_normal_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_command_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_diff_added_command_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_diff_added_normal_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_insert_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_transitional_lualine_b_normal_to_lualine_c_normal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_command', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_inactive', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_insert', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_normal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_replace', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_terminal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconDefault_visual', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_command', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_inactive', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_insert', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_normal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_replace', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_terminal', vim.empty_dict())
	hl(0, 'lualine_x_filetype_DevIconLua_visual', vim.empty_dict())
	hl(0, 'makeCommands', { link = "Orange" })
	hl(0, 'makeIdent', { link = "Aqua" })
	hl(0, 'makeSpecTarget', { link = "Yellow" })
	hl(0, 'makeTarget', { link = "Blue" })
	hl(0, 'markdownBlockquote', { link = "Grey" })
	hl(0, 'markdownBold', { bold = true, cterm = { bold = true } })
	hl(0, 'markdownBoldDelimiter', { link = "Grey" })
	hl(0, 'markdownCode', { link = "Green" })
	hl(0, 'markdownCodeBlock', { link = "Aqua" })
	hl(0, 'markdownCodeDelimiter', { link = "Aqua" })
	hl(0, 'markdownH1', { bold = true, cterm = { bold = true }, fg = 16274770 })
	hl(0, 'markdownH2', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'markdownH3', { bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'markdownH4', { bold = true, cterm = { bold = true }, fg = 9281793 })
	hl(0, 'markdownH5', { bold = true, cterm = { bold = true }, fg = 3839173 })
	hl(0, 'markdownH6', { bold = true, cterm = { bold = true }, fg = 14641594 })
	hl(0, 'markdownHeadingDelimiter', { link = "Grey" })
	hl(0, 'markdownHeadingRule', { link = "Grey" })
	hl(0, 'markdownId', { link = "Yellow" })
	hl(0, 'markdownIdDeclaration', { link = "markdownLinkText" })
	hl(0, 'markdownItalic', { cterm = { italic = true }, italic = true })
	hl(0, 'markdownItalicDelimiter', { cterm = { italic = true }, fg = 9674641, italic = true })
	hl(0, 'markdownLinkDelimiter', { link = "Grey" })
	hl(0, 'markdownLinkText', { link = "Purple" })
	hl(0, 'markdownLinkTextDelimiter', { link = "Grey" })
	hl(0, 'markdownListMarker', { link = "Red" })
	hl(0, 'markdownOrderedListMarker', { link = "Red" })
	hl(0, 'markdownRule', { link = "Purple" })
	hl(0, 'markdownUrl', { cterm = { underline = true }, fg = 3839173, underline = true })
	hl(0, 'markdownUrlDelimiter', { link = "Grey" })
	hl(0, 'markdownUrlTitleDelimiter', { link = "Green" })
	hl(0, 'netrwClassify', { link = "Green" })
	hl(0, 'netrwCmdSep', { link = "Grey" })
	hl(0, 'netrwComment', { link = "Grey" })
	hl(0, 'netrwDir', { link = "Green" })
	hl(0, 'netrwExe', { link = "Yellow" })
	hl(0, 'netrwHelpCmd', { link = "Blue" })
	hl(0, 'netrwLink', { link = "Grey" })
	hl(0, 'netrwList', { link = "Aqua" })
	hl(0, 'netrwSymLink', { link = "Fg" })
	hl(0, 'netrwVersion', { link = "Orange" })
	hl(0, 'packerFail', { link = "Red" })
	hl(0, 'packerHash', { link = "Green" })
	hl(0, 'packerOutput', { link = "Orange" })
	hl(0, 'packerPackageName', { link = "Green" })
	hl(0, 'packerPackageNotLoaded', { link = "Grey" })
	hl(0, 'packerRelDate', { link = "Grey" })
	hl(0, 'packerStatusFail', { link = "Fg" })
	hl(0, 'packerStatusSuccess', { link = "Fg" })
	hl(0, 'packerString', { link = "Yellow" })
	hl(0, 'packerSuccess', { link = "Aqua" })
	hl(0, 'packerTimeHigh', { link = "Red" })
	hl(0, 'packerTimeLow', { link = "Green" })
	hl(0, 'packerTimeMedium', { link = "Yellow" })
	hl(0, 'packerTimeTrivial', { link = "Blue" })
	hl(0, 'packerWorking', { link = "Yellow" })
	hl(0, 'phpComparison', { link = "Orange" })
	hl(0, 'phpDefine', { link = "OrangeItalic" })
	hl(0, 'phpInterpSimpleCurly', { link = "Yellow" })
	hl(0, 'phpMemberSelector', { link = "Green" })
	hl(0, 'phpMethodsVar', { link = "Aqua" })
	hl(0, 'phpSpecialFunction', { link = "Green" })
	hl(0, 'phpStructure', { link = "RedItalic" })
	hl(0, 'phpVarSelector', { link = "Blue" })
	hl(0, 'plug1', { bold = true, cterm = { bold = true }, fg = 16088358 })
	hl(0, 'plug2', { link = "Green" })
	hl(0, 'plugBracket', { link = "Grey" })
	hl(0, 'plugDash', { link = "Orange" })
	hl(0, 'plugDeleted', { link = "Grey" })
	hl(0, 'plugEdge', { link = "Yellow" })
	hl(0, 'plugError', { link = "Red" })
	hl(0, 'plugH2', { link = "Orange" })
	hl(0, 'plugMessage', { link = "Orange" })
	hl(0, 'plugName', { link = "Aqua" })
	hl(0, 'plugNotLoaded', { link = "Grey" })
	hl(0, 'plugNumber', { bold = true, cterm = { bold = true }, fg = 14655488 })
	hl(0, 'plugRelDate', { link = "Grey" })
	hl(0, 'plugSha', { link = "Green" })
	hl(0, 'plugStar', { link = "Red" })
	hl(0, 'plugUpdate', { link = "Blue" })
	hl(0, 'pythonBuiltin', { link = "Yellow" })
	hl(0, 'pythonDecoratorName', { link = "Blue" })
	hl(0, 'pythonExceptions', { link = "Purple" })
	hl(0, 'qfFileName', vim.empty_dict())
	hl(0, 'qfLineNr', vim.empty_dict())
	hl(0, 'rainbowcol1', { fg = 16274770 })
	hl(0, 'rainbowcol2', { fg = 16088358 })
	hl(0, 'rainbowcol3', { fg = 14655488 })
	hl(0, 'rainbowcol4', { fg = 9281793 })
	hl(0, 'rainbowcol5', { fg = 3516284 })
	hl(0, 'rainbowcol6', { fg = 3839173 })
	hl(0, 'rainbowcol7', { fg = 14641594 })
	hl(0, 'rubyAccess', { link = "Orange" })
	hl(0, 'rubyAttribute', { link = "Yellow" })
	hl(0, 'rubyBlockParameterList', { link = "Blue" })
	hl(0, 'rubyDefine', { link = "RedItalic" })
	hl(0, 'rubyInterpolation', { link = "Yellow" })
	hl(0, 'rubyInterpolationDelimiter', { link = "Yellow" })
	hl(0, 'rubyKeywordAsMethod', { link = "Green" })
	hl(0, 'rubyMacro', { link = "RedItalic" })
	hl(0, 'rubyModuleName', { link = "Purple" })
	hl(0, 'rubyStringDelimiter', { link = "Green" })
	hl(0, 'rustAssert', { link = "Aqua" })
	hl(0, 'rustDeriveTrait', { link = "PurpleItalic" })
	hl(0, 'rustEnumVariant', { link = "Purple" })
	hl(0, 'rustIdentifier', { link = "Purple" })
	hl(0, 'rustMacroVariable', { link = "Blue" })
	hl(0, 'rustModPath', { link = "Orange" })
	hl(0, 'rustModPathSep', { link = "Grey" })
	hl(0, 'rustPanic', { link = "Aqua" })
	hl(0, 'rustPubScopeCrate', { link = "PurpleItalic" })
	hl(0, 'rustSelf', { link = "Blue" })
	hl(0, 'rustStructure', { link = "Orange" })
	hl(0, 'rustSuper', { link = "Blue" })
	hl(0, 'sassAmpersand', { link = "Orange" })
	hl(0, 'sassClass', { link = "RedItalic" })
	hl(0, 'sassClassChar', { link = "Red" })
	hl(0, 'sassControl', { link = "RedItalic" })
	hl(0, 'sassCssAttribute', { link = "Yellow" })
	hl(0, 'sassFor', { link = "RedItalic" })
	hl(0, 'sassFunction', { link = "Yellow" })
	hl(0, 'sassFunctionName', { link = "Green" })
	hl(0, 'sassInterpolationDelimiter', { link = "Green" })
	hl(0, 'sassMixinName', { link = "Orange" })
	hl(0, 'sassMixing', { link = "PurpleItalic" })
	hl(0, 'sassProperty', { link = "Aqua" })
	hl(0, 'scssAttribute', { link = "Orange" })
	hl(0, 'scssBoolean', { link = "Purple" })
	hl(0, 'scssForKeyword', { link = "PurpleItalic" })
	hl(0, 'scssFunctionName', { link = "Yellow" })
	hl(0, 'scssInterpolationDelimiter', { link = "Green" })
	hl(0, 'scssMixinName', { link = "Yellow" })
	hl(0, 'scssNull', { link = "Purple" })
	hl(0, 'scssSelectorChar', { link = "Red" })
	hl(0, 'scssSelectorName', { link = "RedItalic" })
	hl(0, 'scssVariableAssignment', { link = "Grey" })
	hl(0, 'scssVariableValue', { link = "Green" })
	hl(0, 'shCmdSubRegion', { link = "Green" })
	hl(0, 'shCommandSub', { link = "Orange" })
	hl(0, 'shFunctionKey', { link = "RedItalic" })
	hl(0, 'shFunctionOne', { link = "Green" })
	hl(0, 'shOperator', { link = "Orange" })
	hl(0, 'shOption', { link = "Aqua" })
	hl(0, 'shQuote', { link = "Green" })
	hl(0, 'shRange', { link = "Fg" })
	hl(0, 'shSet', { link = "Orange" })
	hl(0, 'shSetList', { link = "Blue" })
	hl(0, 'shSnglCase', { link = "Orange" })
	hl(0, 'shTestOpr', { link = "Orange" })
	hl(0, 'shVarAssign', { link = "Orange" })
	hl(0, 'shVariable', { link = "Blue" })
	hl(0, 'tomlKey', { link = "Green" })
	hl(0, 'tomlString', { link = "Fg" })
	hl(0, 'tomlTSProperty', { link = "tomlKey" })
	hl(0, 'tomlTSString', { link = "tomlString" })
	hl(0, 'tsxTSConstructor', { link = "TSType" })
	hl(0, 'typescriptTSInclude', { link = "Purple" })
	hl(0, 'vimAutoCmdSfxList', { link = "Aqua" })
	hl(0, 'vimContinue', { link = "Grey" })
	hl(0, 'vimFuncName', { link = "Green" })
	hl(0, 'vimFunction', { link = "Green" })
	hl(0, 'vimHiBang', { link = "Orange" })
	hl(0, 'vimIsCommand', { link = "Fg" })
	hl(0, 'vimLet', { link = "Orange" })
	hl(0, 'vimMap', { link = "PurpleItalic" })
	hl(0, 'vimMapLhs', { link = "Green" })
	hl(0, 'vimMapRhs', { link = "Green" })
	hl(0, 'vimNotation', { link = "Aqua" })
	hl(0, 'vimOption', { link = "Aqua" })
	hl(0, 'vimSet', { link = "Yellow" })
	hl(0, 'vimSetEqual', { link = "Yellow" })
	hl(0, 'vimSetSep', { link = "Grey" })
	hl(0, 'vimSynType', { link = "Orange" })
	hl(0, 'vimUserAttrb', { link = "Green" })
	hl(0, 'vimUserAttrbKey', { link = "Yellow" })
	hl(0, 'vimUserFunc', { link = "Green" })
	hl(0, 'xmlAttrib', { link = "Aqua" })
	hl(0, 'xmlCdataCdata', { link = "Purple" })
	hl(0, 'xmlCdataStart', { link = "Grey" })
	hl(0, 'xmlDocTypeDecl', { link = "Grey" })
	hl(0, 'xmlDocTypeKeyword', { link = "PurpleItalic" })
	hl(0, 'xmlEndTag', { link = "Blue" })
	hl(0, 'xmlEntity', { link = "Red" })
	hl(0, 'xmlEntityPunct', { link = "Red" })
	hl(0, 'xmlEqual', { link = "Orange" })
	hl(0, 'xmlTag', { link = "Green" })
	hl(0, 'xmlTagName', { link = "OrangeItalic" })
	hl(0, 'yamlBlockMappingKey', { link = "Green" })
	hl(0, 'yamlConstant', { link = "OrangeItalic" })
	hl(0, 'yamlKeyValueDelimiter', { link = "Grey" })
	hl(0, 'yamlString', { link = "Fg" })
	hl(0, 'yamlTSBoolean', { link = "yamlConstant" })
	hl(0, 'yamlTSConstBuiltin', { link = "yamlConstant" })
	hl(0, 'yamlTSField', { link = "yamlBlockMappingKey" })
	hl(0, 'yamlTSString', { link = "yamlString" })
	hl(0, 'yamlTSStringEscape', { link = "SpecialChar" })
	hl(0, 'zshDeref', { link = "Blue" })
	hl(0, 'zshFunction', { link = "Green" })
	hl(0, 'zshOptStart', { link = "PurpleItalic" })
	hl(0, 'zshOption', { link = "Blue" })
	hl(0, 'zshSubst', { link = "Yellow" })
	hl(0, 'zshTypes', { link = "Orange" })
	hl(0, 'zshVariableDef', { link = "Blue" })

	g.terminal_color_0 = "#e6e2cc"
	g.terminal_color_1 = "#f85552"
	g.terminal_color_2 = "#8da101"
	g.terminal_color_3 = "#dfa000"
	g.terminal_color_4 = "#3a94c5"
	g.terminal_color_5 = "#df69ba"
	g.terminal_color_6 = "#35a77c"
	g.terminal_color_7 = "#5c6a72"
	g.terminal_color_8 = "#e6e2cc"
	g.terminal_color_9 = "#f85552"
	g.terminal_color_10 = "#8da101"
	g.terminal_color_11 = "#dfa000"
	g.terminal_color_12 = "#3a94c5"
	g.terminal_color_13 = "#df69ba"
	g.terminal_color_14 = "#35a77c"
	g.terminal_color_15 = "#5c6a72"
end

vim.api.nvim_set_var('colors_name', 'everforest')
